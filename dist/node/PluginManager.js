import e from"fs";import t from"module";import n from"path";import s from"url";class i{constructor(){this.baseDirectory=void 0,this.cntr=0,this.currentDirectory=void 0,this.packageObj=void 0,this.packagePath=void 0,this.rootPath=void 0,this._callback=void 0}isBaseParent(){if(this.baseDirectory===this.rootPath)return!1;const e=n.relative(this.baseDirectory,this.currentDirectory);return e&&!e.startsWith("..")&&!n.isAbsolute(e)}static parse(t,{filepath:i,basepath:o,callback:r}={}){if("string"!=typeof i&&!(i instanceof URL))throw new TypeError("'filepath' is not a 'string' or file 'URL'");if(void 0!==o&&"string"!=typeof o&&!(o instanceof URL))throw new TypeError("'basepath' is not a 'string' or file 'URL'");if(void 0!==r&&"function"!=typeof r)throw new TypeError("'callback' is not a 'function'");if(o instanceof URL&&(o=s.fileURLToPath(o)),(i instanceof URL||i.startsWith("file:/"))&&(i=s.fileURLToPath(i)),t.currentDirectory=e.existsSync(i)&&e.lstatSync(i).isDirectory()?n.resolve(i):n.resolve(n.dirname(i)),"string"!=typeof o&&(o=n.parse(t.currentDirectory).root),o.startsWith("file:/")&&(o=s.fileURLToPath(o)),t.baseDirectory=e.existsSync(o)&&e.lstatSync(o).isDirectory()?n.resolve(o):n.resolve(n.dirname(o)),!e.existsSync(t.baseDirectory)||!e.existsSync(t.currentDirectory))throw new Error("Could not resolve 'filepath' or 'basepath'");return t.rootPath=n.parse(t.currentDirectory).root,t._callback=r,t}}const o=e=>"string"==typeof e.packageObj.type;class r{constructor(e){if(!(e instanceof a))throw new TypeError("'eventbus' is not an instance of Eventbus.");this._eventbus=e,this._events=[]}destroy(){if(null!==this._eventbus)for(const e of this._events)this._eventbus.off(e.name,e.callback,e.context);this._events=[],this._eventbus=null}*entries(e){if(null===this._eventbus)throw new ReferenceError("This EventbusProxy instance has been destroyed.");for(const t of this._eventbus.entries(e))yield t}get eventCount(){if(null===this._eventbus)throw new ReferenceError("This EventbusProxy instance has been destroyed.");return this._eventbus.eventCount}get eventNames(){if(null===this._eventbus)throw new ReferenceError("This EventbusProxy instance has been destroyed.");return this._eventbus.eventNames}get isDestroyed(){return null===this._eventbus}get name(){if(null===this._eventbus)throw new ReferenceError("This EventbusProxy instance has been destroyed.");return this._eventbus.name}off(e,t,n){if(null===this._eventbus)throw new ReferenceError("This EventbusProxy instance has been destroyed.");const s=null!=e,i=null!=t,o=null!=n;if(s||i||o){const r={};s&&(r.name=e),i&&(r.callback=t),o&&(r.context=n);for(let e=this._events.length;--e>=0;){const t=this._events[e];let n=!0;for(const e in r)if(t[e]!==r[e]){n=!1;break}n&&(this._eventbus.off(r.name,r.callback,r.context),this._events.splice(e,1))}}else{for(const e of this._events)this._eventbus.off(e.name,e.callback,e.context);this._events=[]}return this}on(e,t,n){if(null===this._eventbus)throw new ReferenceError("This EventbusProxy instance has been destroyed.");return this._eventbus.on(e,t,n),this._events.push({name:e,callback:t,context:n}),this}*proxyEntries(e){if(null===this._eventbus)throw new ReferenceError("This EventbusProxy instance has been destroyed.");if(this._events)if(e)for(const t of this._events)e===t.name&&(yield[t.name,t.callback,t.context]);else for(const e of this._events)yield[e.name,e.callback,e.context]}get proxyEventCount(){if(null===this._eventbus)throw new ReferenceError("This EventbusProxy instance has been destroyed.");return this._events.length}get proxyEventNames(){if(null===this._eventbus)throw new ReferenceError("This EventbusProxy instance has been destroyed.");if(!this._events)return[];const e={};for(const t of this._events)e[t.name]=!0;return Object.keys(e)}trigger(){if(null===this._eventbus)throw new ReferenceError("This EventbusProxy instance has been destroyed.");return this._eventbus.trigger(...arguments),this}triggerAsync(){if(null===this._eventbus)throw new ReferenceError("This EventbusProxy instance has been destroyed.");return this._eventbus.triggerAsync(...arguments)}triggerDefer(){if(null===this._eventbus)throw new ReferenceError("This EventbusProxy instance has been destroyed.");return this._eventbus.triggerDefer(...arguments),this}triggerSync(){if(null===this._eventbus)throw new ReferenceError("This EventbusProxy instance has been destroyed.");return this._eventbus.triggerSync(...arguments)}}class a{constructor(e){this._eventbusName=e}createProxy(){return new r(this)}*entries(e){if(this._events)if(e)for(const t of this._events[e])yield[e,t.callback,t.ctx];else for(const e in this._events)for(const t of this._events[e])yield[e,t.callback,t.ctx]}get eventCount(){let e=0;for(const t in this._events)e+=this._events[t].length;return e}get eventNames(){return this._events?Object.keys(this._events):[]}get name(){return this._eventbusName}listenTo(e,t,n,s=this){if(!e)return this;const i=e._listenId||(e._listenId=w("l")),o=this._listeningTo||(this._listeningTo={});let r=o[i];if(!r){const t=this._listenId||(this._listenId=w("l"));r=o[i]={obj:e,objId:i,id:t,listeningTo:o,count:0}}return c(e,t,n,s,r),this}listenToOnce(e,t,n,s=this){const i=l(p,{},t,n,this.stopListening.bind(this,e));return this.listenTo(e,i,void 0,s)}off(e,t,n){return this._events?(this._events=l(g,this._events,e,t,{context:n,listeners:this._listeners}),this):this}on(e,t,n){return c(this,e,t,n,void 0)}once(e,t,n){const s=l(p,{},e,t,this.off.bind(this));return"string"==typeof e&&null==n&&(t=void 0),this.on(s,t,n)}stopListening(e,t,n,s=this){const i=this._listeningTo;if(!i)return this;const o=e?[e._listenId]:Object.keys(i);for(let e=0;e<o.length;e++){const r=i[o[e]];if(!r)break;r.obj.off(t,n,s)}return this}trigger(e){if(!this._events)return this;const t=Math.max(0,arguments.length-1),n=new Array(t);for(let e=0;e<t;e++)n[e]=arguments[e+1];return u(d,y,this._events,e,void 0,n),this}async triggerAsync(e){if(!this._events)return Promise.resolve([]);const t=Math.max(0,arguments.length-1),n=new Array(t);for(let e=0;e<t;e++)n[e]=arguments[e+1];const s=u(d,v,this._events,e,void 0,n);return void 0!==s?s:Promise.resolve()}triggerDefer(){return setTimeout((()=>{this.trigger(...arguments)}),0),this}triggerSync(e){if(!this._events)return;const t=Math.max(0,arguments.length-1),n=new Array(t);for(let e=0;e<t;e++)n[e]=arguments[e+1];return u(d,b,this._events,e,void 0,n)}}const h=/\s+/,l=(e,t,n,s,i)=>{let o,r=0;if(n&&"object"==typeof n){void 0!==s&&"context"in i&&void 0===i.context&&(i.context=s);for(o=Object.keys(n);r<o.length;r++)t=l(e,t,o[r],n[o[r]],i)}else if(n&&h.test(n))for(o=n.split(h);r<o.length;r++)t=e(t,o[r],s,i);else t=e(t,n,s,i);return t},u=(e,t,n,s,i,o)=>{let r,a=0;if(s&&"object"==typeof s){void 0!==i&&"context"in o&&void 0===o.context&&(o.context=i);for(r=Object.keys(s);a<r.length;a++)n=l(e,t,n,r[a],s[r[a]])}else if(s&&h.test(s))for(r=s.split(h);a<r.length;a++)n=e(t,n,r[a],i,o);else n=e(t,n,s,i,o);return n},c=(e,t,n,s,i)=>(e._events=l(f,e._events||{},t,n,{context:s,ctx:e,listening:i}),i&&((e._listeners||(e._listeners={}))[i.id]=i),e),g=(e,t,n,s)=>{if(!e)return;let i,o=0;const r=s.context,a=s.listeners;if(!t&&!n&&!r&&a){const e=Object.keys(a);for(;o<e.length;o++)i=a[e[o]],delete a[i.id],delete i.listeningTo[i.objId];return}const h=t?[t]:Object.keys(e);for(;o<h.length;o++){const s=e[t=h[o]];if(!s)break;const l=[];for(let e=0;e<s.length;e++){const t=s[e];n&&n!==t.callback&&n!==t.callback._callback||r&&r!==t.context?l.push(t):(i=t.listening,i&&0==--i.count&&(delete a[i.id],delete i.listeningTo[i.objId]))}l.length?e[t]=l:delete e[t]}return e},f=(e,t,n,s)=>{if(n){const i=e[t]||(e[t]=[]),o=s.context,r=s.ctx,a=s.listening;a&&a.count++,i.push({callback:n,context:o,ctx:o||r,listening:a})}return e},p=function(e,t,n,s){if(n){const i=e[t]=()=>(s(t,i),n.apply(this,arguments));i._callback=n}return e},d=(e,t,n,s,i)=>{let o;if(t){const s=t[n];let r=t.all;s&&r&&(r=r.slice()),s&&(o=e(s,i)),r&&(o=e(r,[n].concat(i)))}return o},y=(e,t)=>{let n,s=-1;const i=t[0],o=t[1],r=t[2],a=e.length;switch(t.length){case 0:for(;++s<a;)(n=e[s]).callback.call(n.ctx);return;case 1:for(;++s<a;)(n=e[s]).callback.call(n.ctx,i);return;case 2:for(;++s<a;)(n=e[s]).callback.call(n.ctx,i,o);return;case 3:for(;++s<a;)(n=e[s]).callback.call(n.ctx,i,o,r);return;default:for(;++s<a;)(n=e[s]).callback.apply(n.ctx,t);return}},v=async(e,t)=>{let n,s=-1;const i=t[0],o=t[1],r=t[2],a=e.length,h=[];try{switch(t.length){case 0:for(;++s<a;){const t=(n=e[s]).callback.call(n.ctx);void 0!==t&&h.push(t)}break;case 1:for(;++s<a;){const t=(n=e[s]).callback.call(n.ctx,i);void 0!==t&&h.push(t)}break;case 2:for(;++s<a;){const t=(n=e[s]).callback.call(n.ctx,i,o);void 0!==t&&h.push(t)}break;case 3:for(;++s<a;){const t=(n=e[s]).callback.call(n.ctx,i,o,r);void 0!==t&&h.push(t)}break;default:for(;++s<a;){const i=(n=e[s]).callback.apply(n.ctx,t);void 0!==i&&h.push(i)}}}catch(e){return Promise.reject(e)}return h.length>1?Promise.all(h).then((e=>{const t=e.filter((e=>void 0!==e));switch(t.length){case 0:return;case 1:return t[0];default:return t}})):1===h.length?Promise.resolve(h[0]):Promise.resolve()},b=(e,t)=>{let n,s=-1;const i=t[0],o=t[1],r=t[2],a=e.length,h=[];switch(t.length){case 0:for(;++s<a;){const t=(n=e[s]).callback.call(n.ctx);void 0!==t&&h.push(t)}break;case 1:for(;++s<a;){const t=(n=e[s]).callback.call(n.ctx,i);void 0!==t&&h.push(t)}break;case 2:for(;++s<a;){const t=(n=e[s]).callback.call(n.ctx,i,o);void 0!==t&&h.push(t)}break;case 3:for(;++s<a;){const t=(n=e[s]).callback.call(n.ctx,i,o,r);void 0!==t&&h.push(t)}break;default:for(;++s<a;){const i=(n=e[s]).callback.apply(n.ctx,t);void 0!==i&&h.push(i)}}return h.length>1?h:1===h.length?h[0]:void 0};let _=0;const w=(e="")=>{const t=""+ ++_;return e?`${e}${t}`:t};function m(e,t=[]){if("object"!=typeof e)throw new TypeError("'data' is not an 'object'.");if(!Array.isArray(t))throw new TypeError("'skipFreezeKeys' is not an 'array'.");return E(e,t)}function E(e,t){if(Array.isArray(e))for(let n=0;n<e.length;n++)E(e[n],t);else if("object"==typeof e)for(const n in e)e.hasOwnProperty(n)&&-1===t.indexOf(n)&&E(e[n],t);return Object.freeze(e)}class P{constructor(e,t,n,s){this._data=t,this._enabled=!0,this._name=e,this._instance=n,this._eventbusProxy=s}static escape(e){if("string"!=typeof e)throw new TypeError("'value' is not a string.");let t=e.replace(/^(\.\.|\.)/,"");return t=t.replace(/[\\]/g,"\\"),t=t.replace(/[/]/g,"\\/"),t}get data(){return this._data}get enabled(){return this._enabled}set enabled(e){this._enabled=e}get eventbusProxy(){return this._eventbusProxy}get instance(){return this._instance}get name(){return this._name}}class M{constructor(e={},t={}){this.data=Object.assign(JSON.parse(JSON.stringify(e)),t),this.eventbus=void 0,this.pluginName=void 0,this.pluginOptions=void 0}}function k(e){return"object"==typeof e&&"string"==typeof e.name&&(void 0===e.target||"string"==typeof e.target||e.target instanceof URL)&&(void 0===e.options||"object"==typeof e.options)}const $=async(e,t={},n={},s,i,o,r=!0)=>{if("string"!=typeof e)throw new TypeError("'methodName' is not a string.");if("object"!=typeof n)throw new TypeError("'passthruProps' is not an object.");if("object"!=typeof t)throw new TypeError("'copyProps' is not an object.");if("string"!=typeof s&&!Array.isArray(s)&&"function"!=typeof s[Symbol.iterator])throw new TypeError("'nameOrList' is not a string, array, or iterator.");let a=0;const h=[];let l=!1,u=!1;const c=new M(t,n),g=[];if("string"==typeof s){const t=i.get(s);if(t instanceof P&&t.enabled&&t.instance&&(u=!0,"function"==typeof t.instance[e])){c.eventbus=t.eventbusProxy,c.pluginName=t.name,c.pluginOptions=t.data.plugin.options;const n=t.instance[e](c);null!=n&&g.push(n),l=!0,a++,h.push(t.name)}}else for(const t of s){const n=i.get(t);if(n instanceof P&&n.enabled&&n.instance&&(u=!0,"function"==typeof n.instance[e])){c.eventbus=n.eventbusProxy,c.pluginName=n.name,c.pluginOptions=n.data.plugin.options;const t=n.instance[e](c);null!=t&&g.push(t),l=!0,a++,h.push(n.name)}}if(r&&o.throwNoPlugin&&!u)throw new Error("PluginManager failed to find any target plugins.");if(r&&o.throwNoMethod&&!l)throw new Error(`PluginManager failed to invoke '${e}'.`);return c.data.$$plugin_invoke_count=a,c.data.$$plugin_invoke_names=h,await Promise.all(g),c.data},T=t.createRequire(import.meta.url);function N(t){switch(n.extname(t).toLowerCase()){case".js":return"module"===function(t){try{const s=i.parse(new i,t);s.isBaseParent()&&void 0===s._callback&&(s._callback=o);const r=function(t){const s=t instanceof i,o=s?t:new i;try{s||i.parse(o,t);const r={};do{if(o.packagePath=n.resolve(o.currentDirectory,"package.json"),e.existsSync(o.packagePath)&&(o.packageObj=JSON.parse(e.readFileSync(o.packagePath,"utf-8")),"object"==typeof o.packageObj)){if("function"!=typeof o._callback)return{packageObj:o.packageObj,packagePath:o.packagePath};if(o._callback.call(r,o))return{packageObj:o.packageObj,packagePath:o.packagePath};o.cntr++}if(o.currentDirectory===o.baseDirectory)break}while((o.currentDirectory=n.dirname(o.currentDirectory))!==o.rootPath)}catch(e){return{packagePath:o.packagePath,error:e}}return{error:new Error("No 'package.json' located")}}(s);return"object"==typeof r.packageObj&&"module"===r.packageObj.type?"module":"commonjs"}catch(e){return"commonjs"}}({filepath:t});case".mjs":return!0;default:return!1}}class x{constructor(e){this._pluginManager=e}get isDestroyed(){return null===this._pluginManager||void 0===this._pluginManager||null===this._pluginManager._pluginMap||void 0===this._pluginManager._pluginMap}get pluginMap(){if(this.isDestroyed)throw new ReferenceError("This PluginManager instance has been destroyed.");return this._pluginManager._pluginMap}async destroy({eventbus:e,eventPrepend:t}={}){null!=e&&(e.off(`${t}:get:all:plugin:data`,this.getAllPluginData,this),e.off(`${t}:get:method:names`,this.getMethodNames,this),e.off(`${t}:get:plugin:data`,this.getPluginData,this),e.off(`${t}:get:plugin:event:names`,this.getPluginEventNames,this),e.off(`${t}:get:plugin:method:names`,this.getPluginMethodNames,this),e.off(`${t}:get:plugin:names`,this.getPluginNames,this),e.off(`${t}:get:plugin:options`,this.getPluginOptions,this),e.off(`${t}:get:plugins:by:event:name`,this.getPluginsByEventName,this),e.off(`${t}:get:plugins:event:names`,this.getPluginsEventNames,this),e.off(`${t}:has:method`,this.hasMethod,this),e.off(`${t}:has:plugin:method`,this.hasPluginMethod,this)),this._pluginManager=null}getAllPluginData(e){if(this.isDestroyed)throw new ReferenceError("This PluginManager instance has been destroyed.");if("boolean"!=typeof e&&void 0!==e)throw new TypeError("'enabled' is not a 'boolean' or 'undefined'.");const t=[],n=void 0===e;for(const s of this.pluginMap.values())(n||s.enabled===e)&&t.push(this.getPluginData(s.name));return t}getMethodNames(e,t){if(this.isDestroyed)throw new ReferenceError("This PluginManager instance has been destroyed.");if("boolean"!=typeof e&&void 0!==e)throw new TypeError("'enabled' is not a 'boolean' or 'undefined'.");const n={},s=void 0===e,i=void 0===t;for(const o of this.pluginMap.values())if(o.instance&&(s||o.enabled===e)&&(i||o.name===t))for(const e of O(o.instance))o.instance[e]instanceof Function&&"constructor"!==e&&(n[e]=!0);return Object.keys(n)}getPluginData(e){if(this.isDestroyed)throw new ReferenceError("This PluginManager instance has been destroyed.");if("string"!=typeof e)throw new TypeError("'pluginName' is not a string.");const t=this.pluginMap.get(e);if(t instanceof P)return JSON.parse(JSON.stringify(t.data))}getPluginEventNames(e){if(this.isDestroyed)throw new ReferenceError("This PluginManager instance has been destroyed.");if("string"!=typeof e)throw new TypeError("'pluginName' is not a string.");const t=this.pluginMap.get(e);return t instanceof P&&t.eventbusProxy?t.eventbusProxy.proxyEventNames:[]}getPluginsEventNames(e){if(this.isDestroyed)throw new ReferenceError("This PluginManager instance has been destroyed.");void 0===e&&(e=this.pluginMap.keys()),"string"==typeof e&&(e=[e]);const t=[];for(const n of e)t.push({pluginName:n,events:this.getPluginEventNames(n)});return t}getPluginsByEventName(e){if(this.isDestroyed)throw new ReferenceError("This PluginManager instance has been destroyed.");if("string"!=typeof e)throw new TypeError("'eventName' is not a 'string'.");const t=[],n=this.getPluginsEventNames();for(const s of n)s.events.indexOf(e)>=0&&t.push(s.pluginName);return t}getPluginMethodNames(e){if(this.isDestroyed)throw new ReferenceError("This PluginManager instance has been destroyed.");if("boolean"!=typeof e&&void 0!==e)throw new TypeError("'enabled' is not a 'boolean' or 'undefined'.");const t=[],n=void 0===e;for(const s of this.pluginMap.values())if(s.instance&&(n||s.enabled===e))for(const e of O(s.instance))s.instance[e]instanceof Function&&"constructor"!==e&&t.push({plugin:s.name,method:e});return t}getPluginNames(e){if(this.isDestroyed)throw new ReferenceError("This PluginManager instance has been destroyed.");if("boolean"!=typeof e&&void 0!==e)throw new TypeError("'enabled' is not a 'boolean' or 'undefined'.");if(void 0===e)return Array.from(this.pluginMap.keys());const t=[];for(const n of this.pluginMap.values())n.enabled===e&&t.push(n.name);return t}getPluginOptions(e){if(this.isDestroyed)throw new ReferenceError("This PluginManager instance has been destroyed.");if("string"!=typeof e)throw new TypeError("'pluginName' is not a string.");let t;const n=this.pluginMap.get(e);return n instanceof P&&(t=JSON.parse(JSON.stringify(n.data.plugin.options))),t}hasMethod(e){if(this.isDestroyed)throw new ReferenceError("This PluginManager instance has been destroyed.");if("string"!=typeof e)throw new TypeError("'methodName' is not a string.");for(const t of this.pluginMap.values())if("function"==typeof t.instance[e])return!0;return!1}hasPluginMethod(e,t){if(this.isDestroyed)throw new ReferenceError("This PluginManager instance has been destroyed.");if("string"!=typeof e)throw new TypeError("'pluginName' is not a string.");if("string"!=typeof t)throw new TypeError("'methodName' is not a string.");const n=this.pluginMap.get(e);return n instanceof P&&"function"==typeof n[t]}async setEventbus({oldEventbus:e,newEventbus:t,oldPrepend:n,newPrepend:s}={}){null!=e&&(e.off(`${n}:get:all:plugin:data`,this.getAllPluginData,this),e.off(`${n}:get:method:names`,this.getMethodNames,this),e.off(`${n}:get:plugin:data`,this.getPluginData,this),e.off(`${n}:get:plugin:event:names`,this.getPluginEventNames,this),e.off(`${n}:get:plugin:method:names`,this.getPluginMethodNames,this),e.off(`${n}:get:plugin:names`,this.getPluginNames,this),e.off(`${n}:get:plugin:options`,this.getPluginOptions,this),e.off(`${n}:get:plugins:by:event:name`,this.getPluginsByEventName,this),e.off(`${n}:get:plugins:event:names`,this.getPluginsEventNames,this),e.off(`${n}:has:method`,this.hasMethod,this),e.off(`${n}:has:plugin:method`,this.hasPluginMethod,this)),null!=t&&(t.on(`${s}:get:all:plugin:data`,this.getAllPluginData,this),t.on(`${s}:get:method:names`,this.getMethodNames,this),t.on(`${s}:get:plugin:data`,this.getPluginData,this),t.on(`${s}:get:plugin:event:names`,this.getPluginEventNames,this),t.on(`${s}:get:plugin:method:names`,this.getPluginMethodNames,this),t.on(`${s}:get:plugin:names`,this.getPluginNames,this),t.on(`${s}:get:plugin:options`,this.getPluginOptions,this),t.on(`${s}:get:plugins:by:event:name`,this.getPluginsByEventName,this),t.on(`${s}:get:plugins:event:names`,this.getPluginsEventNames,this),t.on(`${s}:has:method`,this.hasMethod,this),t.on(`${s}:has:plugin:method`,this.hasPluginMethod,this))}}const O=e=>{const t=[];do{Object.getOwnPropertyNames(e).forEach((e=>{-1===t.indexOf(e)&&t.push(e)})),e=Object.getPrototypeOf(e)}while(null!=e&&e!==Object.prototype);return t};export default class extends class{constructor(e={}){if("object"!=typeof e)throw new TypeError("'options' is not an object.");if(void 0!==e.PluginSupport&&"function"!=typeof e.PluginSupport)throw new TypeError("'options.pluginSupport' is not a constructor function.");this._pluginMap=new Map,this._eventbus=null,this._eventbusProxies=[],this._pluginSupport=void 0!==e.PluginSupport?new e.PluginSupport(this):null,this._options={pluginsEnabled:!0,noEventAdd:!1,noEventDestroy:!1,noEventOptions:!0,noEventRemoval:!1,throwNoMethod:!1,throwNoPlugin:!1},this.setEventbus({eventbus:void 0!==e.eventbus?e.eventbus:new a,eventPrepend:e.eventPrepend}),this.setOptions(e)}async add(e,t){if(this.isDestroyed)throw new ReferenceError("This PluginManager instance has been destroyed.");if("object"!=typeof e)throw new TypeError("'pluginConfig' is not an object.");if("string"!=typeof e.name)throw new TypeError(`'pluginConfig.name' is not a string for entry: ${JSON.stringify(e)}.`);if(void 0!==e.target&&"string"!=typeof e.target&&!(e.target instanceof URL))throw new TypeError(`'pluginConfig.target' is not a string or URL for entry: ${JSON.stringify(e)}.`);if(void 0!==e.options&&"object"!=typeof e.options)throw new TypeError(`'pluginConfig.options' is not an object for entry: ${JSON.stringify(e)}.`);if(void 0!==t&&"object"!=typeof t)throw new TypeError(`'moduleData' is not an object for entry: ${JSON.stringify(e)}.`);if(this._pluginMap.has(e.name))throw new Error(`A plugin already exists with name: ${e.name}.`);let n,s,i;if("object"==typeof e.instance||"function"==typeof e.instance)n=e.instance,s=e.name,i="instance";else{s=e.target||e.name;const t=await this._loadModule(s);n=t.instance,i=t.type}s instanceof URL&&(s=s.toString());const o=JSON.parse(JSON.stringify({manager:{eventPrepend:this._eventPrepend},module:t||{},plugin:{name:e.name,scopedName:`${this._eventPrepend}:${e.name}`,target:s,targetEscaped:P.escape(s),type:i,options:e.options||{}}}));m(o,["eventPrepend","scopedName"]);const a=null!==this._eventbus&&void 0!==this._eventbus?new r(this._eventbus):void 0,h=new P(e.name,o,n,a);return this._pluginMap.set(e.name,h),await $("onPluginLoad",{},{},e.name,this._pluginMap,this._options,!1),this._eventbus&&await this._eventbus.triggerAsync("typhonjs:plugin:manager:plugin:added",o),o}async addAll(e=[],t){if(this.isDestroyed)throw new ReferenceError("This PluginManager instance has been destroyed.");if(!Array.isArray(e))throw new TypeError("'pluginConfigs' is not an array.");const n=[];for(const s of e){const e=await this.add(s,t);e&&n.push(e)}return n}async _addEventbus(e,t){if(this.isDestroyed)throw new ReferenceError("This PluginManager instance has been destroyed.");return this._options.noEventAdd?void 0:this.add(e,t)}async _addAllEventbus(e,t){if(this.isDestroyed)throw new ReferenceError("This PluginManager instance has been destroyed.");if(!this._options.noEventAdd)return this.addAll(e,t)}createEventbusProxy(){if(!(this._eventbus instanceof a))throw new ReferenceError("No eventbus assigned to plugin manager.");const e=new r(this._eventbus);return this._eventbusProxies.push(e),e}async destroy(){if(this.isDestroyed)throw new ReferenceError("This PluginManager instance has been destroyed.");await this.removeAll();for(const e of this._eventbusProxies)e.destroy();this._eventbusProxies=[],null!==this._eventbus&&void 0!==this._eventbus&&(this._eventbus.off(`${this._eventPrepend}:async:add`,this._addEventbus,this),this._eventbus.off(`${this._eventPrepend}:async:add:all`,this._addAllEventbus,this),this._eventbus.off(`${this._eventPrepend}:async:destroy:manager`,this._destroyEventbus,this),this._eventbus.off(`${this._eventPrepend}:async:invoke`,this.invokeAsync,this),this._eventbus.off(`${this._eventPrepend}:async:invoke:event`,this.invokeAsyncEvent,this),this._eventbus.off(`${this._eventPrepend}:async:remove`,this._removeEventbus,this),this._eventbus.off(`${this._eventPrepend}:async:remove:all`,this._removeAllEventbus,this),this._eventbus.off(`${this._eventPrepend}:create:eventbus:proxy`,this.createEventbusProxy,this),this._eventbus.off(`${this._eventPrepend}:get:enabled`,this.getPluginsEnabled,this),this._eventbus.off(`${this._eventPrepend}:get:options`,this.getOptions,this),this._eventbus.off(`${this._eventPrepend}:has:plugin`,this.hasPlugin,this),this._eventbus.off(`${this._eventPrepend}:invoke`,this.invoke,this),this._eventbus.off(`${this._eventPrepend}:is:valid:config`,this.isValidConfig,this),this._eventbus.off(`${this._eventPrepend}:set:enabled`,this.setPluginsEnabled,this),this._eventbus.off(`${this._eventPrepend}:set:options`,this._setOptionsEventbus,this),this._eventbus.off(`${this._eventPrepend}:sync:invoke`,this.invokeSync,this),this._eventbus.off(`${this._eventPrepend}:sync:invoke:event`,this.invokeSyncEvent,this)),null!==this._pluginSupport&&void 0!==this._pluginSupport&&(await this._pluginSupport.destroy({eventbus:this._eventbus,eventPrepend:this._eventPrepend}),this._pluginSupport=null),this._pluginMap=null,this._eventbus=null}async _destroyEventbus(){if(this.isDestroyed)throw new ReferenceError("This PluginManager instance has been destroyed.");if(!this._options.noEventDestroy)return this.destroy()}get isDestroyed(){return null===this._pluginMap||void 0===this._pluginMap}getEventbus(){if(this.isDestroyed)throw new ReferenceError("This PluginManager instance has been destroyed.");return this._eventbus}getOptions(){if(this.isDestroyed)throw new ReferenceError("This PluginManager instance has been destroyed.");return JSON.parse(JSON.stringify(this._options))}getPluginsEnabled({pluginNames:e=[]}={}){if(this.isDestroyed)throw new ReferenceError("This PluginManager instance has been destroyed.");if("string"!=typeof e&&(null==(t=e)||"object"!=typeof t||"function"!=typeof t[Symbol.iterator]))throw new TypeError("'pluginNames' is not a string or iterable.");var t;if("string"==typeof e){const t=this._pluginMap.get(e);return t instanceof P&&t.enabled}const n=[];if(e.length)for(const t of e){const e=this._pluginMap.get(t),s=e instanceof P;n.push({pluginName:t,enabled:s&&e.enabled,loaded:s})}else for(const[e,t]of this._pluginMap.entries()){const s=t instanceof P;n.push({pluginName:e,enabled:s&&t.enabled,loaded:s})}return n}hasPlugin(e){if(this.isDestroyed)throw new ReferenceError("This PluginManager instance has been destroyed.");if("string"!=typeof e)throw new TypeError("'pluginName' is not a string.");return this._pluginMap.has(e)}invoke(e,t,n){if(this.isDestroyed)throw new ReferenceError("This PluginManager instance has been destroyed.");if("string"!=typeof e)throw new TypeError("'methodName' is not a string.");if(void 0===n&&(n=this._pluginMap.keys()),"string"!=typeof n&&!Array.isArray(n)&&"function"!=typeof n[Symbol.iterator])throw new TypeError("'nameOrList' is not a string, array, or iterator.");let s=!1,i=!1;if(this._options.pluginsEnabled){if("string"==typeof n){const o=this._pluginMap.get(n);o instanceof P&&o.enabled&&o.instance&&(i=!0,"function"==typeof o.instance[e]&&(Array.isArray(t)?o.instance[e](...t):o.instance[e](t),s=!0))}else for(const o of n){const n=this._pluginMap.get(o);n instanceof P&&n.enabled&&n.instance&&(i=!0,"function"==typeof n.instance[e]&&(Array.isArray(t)?n.instance[e](...t):n.instance[e](t),s=!0))}if(this._options.throwNoPlugin&&!i)throw new Error("PluginManager failed to find any target plugins.");if(this._options.throwNoMethod&&!s)throw new Error(`PluginManager failed to invoke '${e}'.`)}}invokeAsync(e,t,n){if(this.isDestroyed)throw new ReferenceError("This PluginManager instance has been destroyed.");if("string"!=typeof e)throw new TypeError("'methodName' is not a string.");if(void 0===n&&(n=this._pluginMap.keys()),"string"!=typeof n&&!Array.isArray(n)&&"function"!=typeof n[Symbol.iterator])throw new TypeError("'nameOrList' is not a string, array, or iterator.");let s,i=!1,o=!1;const r=[];if(!this._options.pluginsEnabled)return s;try{if("string"==typeof n){const a=this._pluginMap.get(n);a instanceof P&&a.enabled&&a.instance&&(o=!0,"function"==typeof a.instance[e]&&(s=Array.isArray(t)?a.instance[e](...t):a.instance[e](t),null===s&&void 0===s||r.push(s),i=!0))}else for(const a of n){const n=this._pluginMap.get(a);n instanceof P&&n.enabled&&n.instance&&(o=!0,"function"==typeof n.instance[e]&&(s=Array.isArray(t)?n.instance[e](...t):n.instance[e](t),null===s&&void 0===s||r.push(s),i=!0))}if(this._options.throwNoPlugin&&!o)return Promise.reject(new Error("PluginManager failed to find any target plugins."));if(this._options.throwNoMethod&&!i)return Promise.reject(new Error(`PluginManager failed to invoke '${e}'.`))}catch(e){return Promise.reject(e)}return r.length>1?Promise.all(r):Promise.resolve(s)}invokeAsyncEvent(e,t={},n={},s){if(this.isDestroyed)throw new ReferenceError("This PluginManager instance has been destroyed.");return void 0===s&&(s=this._pluginMap.keys()),this._options.pluginsEnabled?$(e,t,n,s,this._pluginMap,this._options):Promise.resolve()}invokeSync(e,t,n){if(this.isDestroyed)throw new ReferenceError("This PluginManager instance has been destroyed.");if("string"!=typeof e)throw new TypeError("'methodName' is not a string.");if(void 0===n&&(n=this._pluginMap.keys()),"string"!=typeof n&&!Array.isArray(n)&&"function"!=typeof n[Symbol.iterator])throw new TypeError("'nameOrList' is not a string, array, or iterator.");let s,i=!1,o=!1;const r=[];if(!this._options.pluginsEnabled)return s;if("string"==typeof n){const a=this._pluginMap.get(n);a instanceof P&&a.enabled&&a.instance&&(o=!0,"function"==typeof a.instance[e]&&(s=Array.isArray(t)?a.instance[e](...t):a.instance[e](t),null===s&&void 0===s||r.push(s),i=!0))}else for(const a of n){const n=this._pluginMap.get(a);n instanceof P&&n.enabled&&n.instance&&(o=!0,"function"==typeof n.instance[e]&&(s=Array.isArray(t)?n.instance[e](...t):n.instance[e](t),null===s&&void 0===s||r.push(s),i=!0))}if(this._options.throwNoPlugin&&!o)throw new Error("PluginManager failed to find any target plugins.");if(this._options.throwNoMethod&&!i)throw new Error(`PluginManager failed to invoke '${e}'.`);return r.length>1?r:s}invokeSyncEvent(e,t={},n={},s){if(this.isDestroyed)throw new ReferenceError("This PluginManager instance has been destroyed.");if(void 0===s&&(s=this._pluginMap.keys()),this._options.pluginsEnabled)return((e,t={},n={},s,i,o,r=!0)=>{if("string"!=typeof e)throw new TypeError("'methodName' is not a string.");if("object"!=typeof n)throw new TypeError("'passthruProps' is not an object.");if("object"!=typeof t)throw new TypeError("'copyProps' is not an object.");if("string"!=typeof s&&!Array.isArray(s)&&"function"!=typeof s[Symbol.iterator])throw new TypeError("'nameOrList' is not a string, array, or iterator.");let a=0;const h=[];let l=!1,u=!1;const c=new M(t,n);if("string"==typeof s){const t=i.get(s);t instanceof P&&t.enabled&&t.instance&&(u=!0,"function"==typeof t.instance[e]&&(c.eventbus=t.eventbusProxy,c.pluginName=t.name,c.pluginOptions=t.data.plugin.options,t.instance[e](c),l=!0,a++,h.push(t.name)))}else for(const t of s){const n=i.get(t);n instanceof P&&n.enabled&&n.instance&&(u=!0,"function"==typeof n.instance[e]&&(c.eventbus=n.eventbusProxy,c.pluginName=n.name,c.pluginOptions=n.data.plugin.options,n.instance[e](c),l=!0,a++,h.push(n.name)))}if(r&&o.throwNoPlugin&&!u)throw new Error("PluginManager failed to find any target plugins.");if(r&&o.throwNoMethod&&!l)throw new Error(`PluginManager failed to invoke '${e}'.`);return c.data.$$plugin_invoke_count=a,c.data.$$plugin_invoke_names=h,c.data})(e,t,n,s,this._pluginMap,this._options)}isValidConfig(e){return k(e)}async _loadModule(e){}async remove(e){if(this.isDestroyed)throw new ReferenceError("This PluginManager instance has been destroyed.");const t=this._pluginMap.get(e);if(t instanceof P){await $("onPluginUnload",{},{},e,this._pluginMap,this._options,!1);try{t.instance._eventbus=void 0}catch(e){}return t.eventbusProxy instanceof r&&t.eventbusProxy.destroy(),this._pluginMap.delete(e),this._eventbus&&await this._eventbus.triggerAsync("typhonjs:plugin:manager:plugin:removed",JSON.parse(JSON.stringify(t.data))),!0}return!1}async removeAll(){if(this.isDestroyed)throw new ReferenceError("This PluginManager instance has been destroyed.");const e=[];for(const t of this._pluginMap.keys()){const n=await this.remove(t);e.push({plugin:t,result:n})}return this._pluginMap.clear(),e}async _removeEventbus(e){if(this.isDestroyed)throw new ReferenceError("This PluginManager instance has been destroyed.");return!this._options.noEventRemoval&&this.remove(e)}async _removeAllEventbus(){if(this.isDestroyed)throw new ReferenceError("This PluginManager instance has been destroyed.");if(!this._options.noEventRemoval)return this.removeAll()}async setEventbus({eventbus:e,eventPrepend:t="plugins"}={}){if(this.isDestroyed)throw new ReferenceError("This PluginManager instance has been destroyed.");if(!(e instanceof a))throw new TypeError("'eventbus' is not an 'Eventbus'.");if("string"!=typeof t)throw new TypeError("'eventPrepend' is not a 'string'.");if(e===this._eventbus)return this;const n=this._eventPrepend;if(this._eventPrepend=t,this._pluginMap.size>0){await $("onPluginUnload",{},{},this._pluginMap.keys(),this._pluginMap,this._options,!1);for(const n of this._pluginMap.values()){try{n.instance._eventbus=void 0}catch(e){}n.data.manager.eventPrepend=t,n.data.plugin.scopedName=`${t}:${n.name}`,n.eventbusProxy instanceof r&&n.eventbusProxy.destroy(),n.eventbusProxy=new r(e)}await $("onPluginLoad",{},{},this._pluginMap.keys(),this._pluginMap,this._options,!1);for(const s of this._pluginMap.values())this._eventbus&&this._eventbus.trigger("typhonjs:plugin:manager:eventbus:changed",Object.assign({oldEventbus:this._eventbus,oldManagerEventPrepend:n,oldScopedName:`${n}:${s.name}`,newEventbus:e,newManagerEventPrepend:t,newScopedName:`${t}:${s.name}`},JSON.parse(JSON.stringify(s.data))))}return null!==this._eventbus&&(this._eventbus.off(`${n}:async:add`,this._addEventbus,this),this._eventbus.off(`${n}:async:add:all`,this._addAllEventbus,this),this._eventbus.off(`${n}:async:destroy:manager`,this._destroyEventbus,this),this._eventbus.off(`${n}:async:invoke`,this.invokeAsync,this),this._eventbus.off(`${n}:async:invoke:event`,this.invokeAsyncEvent,this),this._eventbus.off(`${n}:async:remove`,this._removeEventbus,this),this._eventbus.off(`${n}:async:remove:all`,this._removeAllEventbus,this),this._eventbus.off(`${n}:create:eventbus:proxy`,this.createEventbusProxy,this),this._eventbus.off(`${n}:get:enabled`,this.getPluginsEnabled,this),this._eventbus.off(`${n}:get:options`,this.getOptions,this),this._eventbus.off(`${n}:has:plugin`,this.hasPlugin,this),this._eventbus.off(`${n}:invoke`,this.invoke,this),this._eventbus.off(`${n}:is:valid:config`,this.isValidConfig,this),this._eventbus.off(`${n}:set:enabled`,this.setPluginsEnabled,this),this._eventbus.off(`${n}:set:options`,this._setOptionsEventbus,this),this._eventbus.off(`${n}:sync:invoke`,this.invokeSync,this),this._eventbus.off(`${n}:sync:invoke:event`,this.invokeSyncEvent,this),this._eventbus.trigger("typhonjs:plugin:manager:eventbus:removed",{oldEventbus:this._eventbus,oldEventPrepend:n,newEventbus:e,newEventPrepend:t})),e.on(`${t}:async:add`,this._addEventbus,this),e.on(`${t}:async:add:all`,this._addAllEventbus,this),e.on(`${t}:async:destroy:manager`,this._destroyEventbus,this),e.on(`${t}:async:invoke`,this.invokeAsync,this),e.on(`${t}:async:invoke:event`,this.invokeAsyncEvent,this),e.on(`${t}:async:remove`,this._removeEventbus,this),e.on(`${t}:async:remove:all`,this._removeAllEventbus,this),e.on(`${t}:create:eventbus:proxy`,this.createEventbusProxy,this),e.on(`${t}:get:enabled`,this.getPluginsEnabled,this),e.on(`${t}:get:options`,this.getOptions,this),e.on(`${t}:has:plugin`,this.hasPlugin,this),e.on(`${t}:invoke`,this.invoke,this),e.on(`${t}:is:valid:config`,this.isValidConfig,this),e.on(`${t}:set:enabled`,this.setPluginsEnabled,this),e.on(`${t}:set:options`,this._setOptionsEventbus,this),e.on(`${t}:sync:invoke`,this.invokeSync,this),e.on(`${t}:sync:invoke:event`,this.invokeSyncEvent,this),e.trigger("typhonjs:plugin:manager:eventbus:set",{oldEventbus:this._eventbus,oldEventPrepend:n,newEventbus:e,newEventPrepend:t}),null!==this._pluginSupport&&void 0!==this._pluginSupport&&this._pluginSupport.setEventbus({oldEventbus:this._eventbus,newEventbus:e,oldPrepend:n,newPrepend:t}),this._eventbus=e,this}setOptions(e={}){if(this.isDestroyed)throw new ReferenceError("This PluginManager instance has been destroyed.");if("object"!=typeof e)throw new TypeError("'options' is not an object.");"boolean"==typeof e.pluginsEnabled&&(this._options.pluginsEnabled=e.pluginsEnabled),"boolean"==typeof e.noEventAdd&&(this._options.noEventAdd=e.noEventAdd),"boolean"==typeof e.noEventDestroy&&(this._options.noEventDestroy=e.noEventDestroy),"boolean"==typeof e.noEventOptions&&(this._options.noEventOptions=e.noEventOptions),"boolean"==typeof e.noEventRemoval&&(this._options.noEventRemoval=e.noEventRemoval),"boolean"==typeof e.throwNoMethod&&(this._options.throwNoMethod=e.throwNoMethod),"boolean"==typeof e.throwNoPlugin&&(this._options.throwNoPlugin=e.throwNoPlugin)}_setOptionsEventbus(e={}){if(this.isDestroyed)throw new ReferenceError("This PluginManager instance has been destroyed.");this._options.noEventOptions||this.setOptions(e)}setPluginsEnabled({enabled:e,pluginNames:t=[]}={}){if(this.isDestroyed)throw new ReferenceError("This PluginManager instance has been destroyed.");if("string"!=typeof t&&!Array.isArray(t))throw new TypeError("'pluginNames' is not a string or array.");if("boolean"!=typeof e)throw new TypeError("'enabled' is not a boolean.");const n=t=>{t instanceof P&&(t.enabled=e,this._eventbus&&this._eventbus.trigger("typhonjs:plugin:manager:plugin:enabled",Object.assign({enabled:e},JSON.parse(JSON.stringify(t.data)))))};if("string"==typeof t&&n(this._pluginMap.get(t)),t.length)for(const e of t)n(this._pluginMap.get(e));else for(const e of this._pluginMap.values())n(e)}}{async _loadModule(t){const{filepath:i,isESM:o,type:r,loadPath:a}=function(e){let t,i,o="module",r=e;try{t=T.resolve(e),i=N(t)}catch(a){e instanceof URL||e.startsWith("file:")?(t=s.fileURLToPath(e),o="url",r=e instanceof URL?e.toString():e):(t=n.resolve(e),o="path",r=t),i=N(t)}return o=`${i?"import":"require"}-${o}`,{filepath:t,isESM:i,type:o,loadPath:r}}(t);if(!e.existsSync(i))throw new Error(`@typhonjs-plugin/manager could not load:\n${a}`);const h=o?await import(s.pathToFileURL(i)):T(i);let l;return null!==this._eventbus&&void 0!==this._eventbus&&this._eventbus.trigger("log:debug",`@typhonjs-plugin/manager - ${o?"import":"require"}: ${a}`),l="function"==typeof h.onPluginLoad?h:h.default?h.default:h,{instance:l,type:r}}}export{a as Eventbus,r as EventbusProxy,x as PluginSupport,k as isValidConfig};
//# sourceMappingURL=PluginManager.js.map
