{"version":3,"file":"index.js","sources":["../../../node_modules/@typhonjs-utils/loader-module/dist/node/ModuleLoader.js","../../../src/manager/PluginEntry.js","../../../node_modules/@typhonjs-utils/object/dist/functions.js","../../../src/manager/support/invoke/PluginInvokeEvent.js","../../../src/manager/support/invoke/invokeAsyncEvent.js","../../../src/manager/support/invoke/invokeSyncEvent.js","../../../src/manager/support/invoke/PluginInvokeSupport.js","../../../src/manager/utils/escapeTarget.js","../../../src/manager/utils/isValidConfig.js","../../../src/manager/utils/resolveModule.js","../../../src/manager/PluginManager.js"],"sourcesContent":["import fs, { realpathSync, statSync, Stats } from 'node:fs';\nimport module, { builtinModules } from 'node:module';\nimport path from 'node:path';\nimport url, { fileURLToPath, URL as URL$1, pathToFileURL } from 'node:url';\nimport assert from 'node:assert';\nimport process$1 from 'node:process';\nimport v8 from 'node:v8';\nimport { format, inspect } from 'node:util';\n\n/**\r\n * Stores the data tracked over traversing the starting directory. And provides a few internal utility methods.\r\n */\r\nclass TraversalData\r\n{\r\n   constructor()\r\n   {\r\n      /**\r\n       * Stores any base directory defined or the root path.\r\n       *\r\n       * @type {string}\r\n       */\r\n      this.baseDir = void 0;\r\n\r\n      /**\r\n       * Stores the base directory as a unix path.\r\n       *\r\n       * @type {string}\r\n       * @private\r\n       */\r\n      this._baseDirUnix = void 0;\r\n\r\n      /**\r\n       * Stores the number of times a package is processed; useful in callbacks.\r\n       *\r\n       * @type {number}\r\n       */\r\n      this.cntr = 0;\r\n\r\n      /**\r\n       * Current directory of traversal.\r\n       *\r\n       * @type {string}\r\n       */\r\n      this.currentDir = void 0;\r\n\r\n      /**\r\n       * Current loaded `package.json` object.\r\n       *\r\n       * @type {object}\r\n       */\r\n      this.packageObj = void 0;\r\n\r\n      /**\r\n       * Path of current loaded `package.json` object\r\n       *\r\n       * @type {string}\r\n       */\r\n      this.packagePath = void 0;\r\n\r\n      /**\r\n       * The root path to stop traversal; determined from starting directory path.\r\n       *\r\n       * @type {string}\r\n       */\r\n      this.rootPath = void 0;\r\n\r\n      /**\r\n       * Stores the root path as a unix path.\r\n       *\r\n       * @type {string}\r\n       * @private\r\n       */\r\n      this._rootPathUnix = void 0;\r\n\r\n      /**\r\n       * Stores the traversal callback function.\r\n       *\r\n       * @type {Function}\r\n       */\r\n      this.callback = void 0;\r\n   }\r\n\r\n   /**\r\n    * Parses the options object passed into the various getPackage functions.\r\n    *\r\n    * @param {TraversalData}  data - A TraversalData instance.\r\n    *\r\n    * @param {object}      options - An object.\r\n    *\r\n    * @param {string|URL}  options.filepath - Initial file or directory path to search for `package.json`.\r\n    *\r\n    * @param {string|URL}  [options.basepath] - Base path to stop traversing. Set to the root path of `filepath` if not\r\n    *                                           provided.\r\n    *\r\n    * @param {Function}    [options.callback] - A function that evaluates any loaded package.json object that passes\r\n    *                                           back a truthy value that stops or continues the traversal.\r\n    *\r\n    * @returns {TraversalData} Returns the parsed TraversalData instance.\r\n    */\r\n   static parse(data, { filepath, basepath = void 0, callback } = {})\r\n   {\r\n      if (typeof filepath !== 'string' && !(filepath instanceof URL))\r\n      {\r\n         throw new TypeError(`'filepath' is not a string or file URL`);\r\n      }\r\n\r\n      if (basepath !== void 0 && typeof basepath !== 'string' && !(basepath instanceof URL))\r\n      {\r\n         throw new TypeError(`'basepath' is not a string or file URL`);\r\n      }\r\n\r\n      if (callback !== void 0 && typeof callback !== 'function')\r\n      {\r\n         throw new TypeError(`'callback' is not a function`);\r\n      }\r\n\r\n      // Convert basepath if an URL to a file path\r\n      if (basepath !== void 0 && (basepath instanceof URL || basepath.startsWith('file:/')))\r\n      {\r\n         basepath = url.fileURLToPath(basepath);\r\n      }\r\n\r\n      // Convert any URL or string file URL to path.\r\n      if (filepath instanceof URL || filepath.startsWith('file:/'))\r\n      {\r\n         filepath = url.fileURLToPath(filepath);\r\n      }\r\n\r\n      // Handle `filepath` as a directory or get directory of path with file name.\r\n      data.currentDir = fs.existsSync(filepath) && fs.lstatSync(filepath).isDirectory() ?\r\n       path.resolve(filepath) : path.resolve(path.dirname(filepath));\r\n\r\n      // Convert basepath to root of resolved file path if not a string.\r\n      if (typeof basepath !== 'string')\r\n      {\r\n         basepath = path.parse(data.currentDir).root;\r\n      }\r\n\r\n      // Handle `basepath` as a directory or convert a path with file name to a directory.\r\n      data.baseDir = fs.existsSync(basepath) && fs.lstatSync(basepath).isDirectory() ? path.resolve(basepath) :\r\n       path.resolve(path.dirname(basepath));\r\n\r\n      // If the resolved paths do not exist then return null.\r\n      if (!fs.existsSync(data.baseDir) || !fs.existsSync(data.currentDir))\r\n      {\r\n         throw new Error(`Could not resolve 'filepath' or 'basepath'`);\r\n      }\r\n\r\n      // Ensure we track the root of the current directory path to stop iteration.\r\n      data.rootPath = path.parse(data.currentDir).root;\r\n\r\n      // Store unix path conversion of base and root paths.\r\n      data._baseDirUnix = TraversalData.toUnixPath(data.baseDir);\r\n      data._rootPathUnix = TraversalData.toUnixPath(data.rootPath);\r\n\r\n      data.callback = callback;\r\n\r\n      return data;\r\n   }\r\n\r\n   /**\r\n    * Convert a file / dir path to a Unix styled path.\r\n    *\r\n    * @param {string} p - A file / dir path.\r\n    *\r\n    * @returns {string|undefined} Unix styled path; on Windows swap `\\` and `\\\\` for `/`.\r\n    */\r\n   static toUnixPath(p)\r\n   {\r\n      return typeof p === 'string' ? p.replace(/\\\\/g, '/').replace(/(?<!^)\\/+/g, '/') : void 0;\r\n   }\r\n\r\n   /**\r\n    * Converts the current state of TraversalData to Unix styled paths to pass to any traversal callback\r\n    * function defined.\r\n    *\r\n    * @returns {TraversalDataObj} The data object to pass to any traversal callback function defined.\r\n    */\r\n   toUnixPaths()\r\n   {\r\n      return {\r\n         baseDir: this._baseDirUnix,\r\n         cntr: this.cntr,\r\n         currentDir: TraversalData.toUnixPath(this.currentDir),\r\n         packageObj: this.packageObj,\r\n         filepath: TraversalData.toUnixPath(this.packagePath),\r\n         relativeDir: TraversalData.toUnixPath(path.relative(process.cwd(), this.currentDir)),\r\n         rootPath: this._rootPathUnix\r\n      };\r\n   }\r\n}\n\n/**\r\n * Attempts to traverse from `filepath` to `basepath` attempting to load `package.json` along with the package path.\r\n *\r\n * Note: If malformed data is presented the result will undefined along with a possible error included in the returned\r\n * object / `PackageObjData`. Also note that a file may be specified that does not exist and the directory will be\r\n * resolved. If that directory exists then resolution will continue.\r\n *\r\n * @param {PackageQueryOptions} options - The package query options.\r\n *\r\n * @returns {PackageObjData} Loaded package.json / path or potentially an error.\r\n */\r\nfunction getPackageWithPath(options)\r\n{\r\n   const isTraversalData = options instanceof TraversalData;\r\n\r\n   if (!isTraversalData && typeof options !== 'object')\r\n   {\r\n      return { error: new TypeError(`'options' is not an object`) };\r\n   }\r\n\r\n   const data = !isTraversalData ? new TraversalData() /* c8 ignore next */ : options;\r\n\r\n   try\r\n   {\r\n      if (!isTraversalData)\r\n      {\r\n         TraversalData.parse(data, options);\r\n      }\r\n\r\n      const context = {};\r\n\r\n      do\r\n      {\r\n         data.packagePath = path.resolve(data.currentDir, 'package.json');\r\n\r\n         // If there is a `package.json` path attempt to load it.\r\n         if (fs.existsSync(data.packagePath))\r\n         {\r\n            data.packageObj = JSON.parse(fs.readFileSync(data.packagePath, 'utf-8'));\r\n\r\n            // If it is a valid object then process it.\r\n            if (typeof data.packageObj === 'object')\r\n            {\r\n               // If there is a provided callback then invoke it with the traversal data with paths converted to\r\n               // Unix style paths. If a truthy value is returned then return the data immediately otherwise\r\n               // the traversal continues.\r\n               if (typeof data.callback === 'function')\r\n               {\r\n                  if (data.callback.call(context, data.toUnixPaths()))\r\n                  {\r\n                     return {\r\n                        packageObj: data.packageObj,\r\n                        filepath: data.packagePath,\r\n                        filepathUnix: TraversalData.toUnixPath(data.packagePath)\r\n                     };\r\n                  }\r\n               }\r\n               else // If there is no callback function then return results with first found `package.json`.\r\n               {\r\n                  return {\r\n                     packageObj: data.packageObj,\r\n                     filepath: data.packagePath,\r\n                     filepathUnix: TraversalData.toUnixPath(data.packagePath)\r\n                  };\r\n               }\r\n\r\n               data.cntr++;\r\n            }\r\n         }\r\n\r\n         // If the current directory equals the base directory then stop traversal.\r\n         if (data.currentDir === data.baseDir) { break; }\r\n\r\n      // If the current directory equals the root path then stop traversal.\r\n      } while ((data.currentDir = path.dirname(data.currentDir)) !== data.rootPath);\r\n   }\r\n   catch (error)\r\n   {\r\n      return { filepath: data.packagePath, filepathUnix: TraversalData.toUnixPath(data.packagePath), error };\r\n   }\r\n\r\n   return { error: new Error(`No 'package.json' located`) };\r\n}\r\n\r\n/**\r\n * Attempts to traverse from `filepath` to `basepath` attempting to access `type` field of `package.json`. The type\r\n * is returned if it is set in the found `package.json` otherwise `commonjs` is returned.\r\n *\r\n * Note: With only `filepath` set this function only reliably returns a positive result when there are no\r\n * intermediary `package.json` files in between a supposed root and path. If provided with malformed\r\n * data or there is any error / edge case triggered then 'commonjs' by default will be returned.\r\n *\r\n * Traversal stops at the first valid `package.json` file as this is how Node works. If the first found `package.json`\r\n * does not have a `type` field then `commonjs` is returned.\r\n *\r\n * @param {PackageQueryOptions} options - The package query options.\r\n *\r\n * @returns {string} Type of package - 'module' for ESM otherwise 'commonjs'.\r\n */\r\nfunction getPackageType$1(options)\r\n{\r\n   const result = getPackageWithPath(options);\r\n\r\n   return typeof result.packageObj === 'object' ?\r\n    result.packageObj.type === 'module' ? 'module' : 'commonjs' : 'commonjs';\r\n}\r\n\r\n/**\r\n * The returned data object from a `getPackageWithPath` query.\r\n *\r\n * @typedef {object} PackageObjData\r\n *\r\n * @property {object|undefined}  [packageObj] - Loaded `package.json` object.\r\n *\r\n * @property {string|undefined}  [filepath] - File path of loaded `package.json` object.\r\n *\r\n * @property {string|undefined}  [filepathUnix] - File path of loaded `package.json` object as Unix styled path.\r\n *\r\n * @property {Error|undefined}   [error] - A potential error instance.\r\n */\r\n\r\n/**\r\n * The returned data object from formatting a `package.json` object.\r\n *\r\n * @typedef {object} PackageObjFormatted\r\n *\r\n * @property {string}   name - Name property.\r\n *\r\n * @property {string}   version - Version property.\r\n *\r\n * @property {string}   type - `module` or `commonjs`.\r\n *\r\n * @property {string}   description - Description property.\r\n *\r\n * @property {string}   homepage - Homepage property.\r\n *\r\n * @property {string}   license - License property.\r\n *\r\n * @property {string}   repository - The repository URL or unparsed repository string.\r\n *\r\n * @property {string}   bugsURL - URL from bugs property.\r\n *\r\n * @property {string}   bugsEmail - Email from bugs property.\r\n *\r\n * @property {string}   formattedMessage - A formatted message describing the package.\r\n */\r\n\r\n/**\r\n * Defines the data object passed to the functions to perform a `package.json` query.\r\n *\r\n * @typedef {object} PackageQueryOptions\r\n *\r\n * @property {string|URL}  filepath - Initial file or directory path to search for `package.json`.\r\n *\r\n * @property {string|URL}  [basepath] - Base path to stop traversing. Set to the root path of `filepath` if not\r\n *                                      provided.\r\n *\r\n * @property {TraversalCallback}  [callback] - A function that evaluates a loaded package.json object and\r\n *                                                 associated traversal data returning a truthy value to stops or\r\n *                                                 continue the traversal.\r\n */\r\n\r\n/**\r\n * An optional callback function for {@link PackageQueryOptions} that evaluates a loaded package.json object and\r\n * associated traversal data returning a truthy value to stop or continue the traversal.\r\n *\r\n * @callback TraversalCallback\r\n *\r\n * @param {TraversalDataObj} data - The traversal data object.\r\n *\r\n * @returns {boolean} True to stop traversal / false to continue.\r\n */\r\n\r\n/**\r\n * Defines the data object passed to any traversal callback function. All paths are converted to Unix style paths,\r\n * so for instance on Windows `\\` and `\\\\` are replaced with `/`.\r\n *\r\n * @typedef {object} TraversalDataObj\r\n *\r\n * @property {string}   baseDir - Stores the `basepath` directory as a Unix styled path.\r\n *\r\n * @property {number}   cntr - Stores the number of times a `package.json` has been processed.\r\n *\r\n * @property {string}   currentDir - Current directory of traversal as a Unix styled path.\r\n *\r\n * @property {object}   packageObj - Current loaded `package.json` object.\r\n *\r\n * @property {string}   filepath - Current loaded `package.json` file path as a Unix styled path.\r\n *\r\n * @property {string}   relativeDir - Current directory of traversal as a relative Unix styled path from `process.cwd`.\r\n *\r\n * @property {string}   rootPath - The root path to stop traversal as a Unix styled path.\r\n */\n\n/**\n * @typedef ErrnoExceptionFields\n * @property {number | undefined} [errnode]\n * @property {string | undefined} [code]\n * @property {string | undefined} [path]\n * @property {string | undefined} [syscall]\n * @property {string | undefined} [url]\n *\n * @typedef {Error & ErrnoExceptionFields} ErrnoException\n */\n\n\nconst own$1 = {}.hasOwnProperty;\n\nconst classRegExp = /^([A-Z][a-z\\d]*)+$/;\n// Sorted by a rough estimate on most frequently used entries.\nconst kTypes = new Set([\n  'string',\n  'function',\n  'number',\n  'object',\n  // Accept 'Function' and 'Object' as alternative to the lower cased version.\n  'Function',\n  'Object',\n  'boolean',\n  'bigint',\n  'symbol'\n]);\n\nconst codes = {};\n\n/**\n * Create a list string in the form like 'A and B' or 'A, B, ..., and Z'.\n * We cannot use Intl.ListFormat because it's not available in\n * --without-intl builds.\n *\n * @param {Array<string>} array\n *   An array of strings.\n * @param {string} [type]\n *   The list type to be inserted before the last element.\n * @returns {string}\n */\nfunction formatList(array, type = 'and') {\n  return array.length < 3\n    ? array.join(` ${type} `)\n    : `${array.slice(0, -1).join(', ')}, ${type} ${array[array.length - 1]}`\n}\n\n/** @type {Map<string, MessageFunction | string>} */\nconst messages = new Map();\nconst nodeInternalPrefix = '__node_internal_';\n/** @type {number} */\nlet userStackTraceLimit;\n\ncodes.ERR_INVALID_ARG_TYPE = createError(\n  'ERR_INVALID_ARG_TYPE',\n  /**\n   * @param {string} name\n   * @param {Array<string> | string} expected\n   * @param {unknown} actual\n   */\n  (name, expected, actual) => {\n    assert(typeof name === 'string', \"'name' must be a string\");\n    if (!Array.isArray(expected)) {\n      expected = [expected];\n    }\n\n    let message = 'The ';\n    if (name.endsWith(' argument')) {\n      // For cases like 'first argument'\n      message += `${name} `;\n    } else {\n      const type = name.includes('.') ? 'property' : 'argument';\n      message += `\"${name}\" ${type} `;\n    }\n\n    message += 'must be ';\n\n    /** @type {Array<string>} */\n    const types = [];\n    /** @type {Array<string>} */\n    const instances = [];\n    /** @type {Array<string>} */\n    const other = [];\n\n    for (const value of expected) {\n      assert(\n        typeof value === 'string',\n        'All expected entries have to be of type string'\n      );\n\n      if (kTypes.has(value)) {\n        types.push(value.toLowerCase());\n      } else if (classRegExp.exec(value) === null) {\n        assert(\n          value !== 'object',\n          'The value \"object\" should be written as \"Object\"'\n        );\n        other.push(value);\n      } else {\n        instances.push(value);\n      }\n    }\n\n    // Special handle `object` in case other instances are allowed to outline\n    // the differences between each other.\n    if (instances.length > 0) {\n      const pos = types.indexOf('object');\n      if (pos !== -1) {\n        types.slice(pos, 1);\n        instances.push('Object');\n      }\n    }\n\n    if (types.length > 0) {\n      message += `${types.length > 1 ? 'one of type' : 'of type'} ${formatList(\n        types,\n        'or'\n      )}`;\n      if (instances.length > 0 || other.length > 0) message += ' or ';\n    }\n\n    if (instances.length > 0) {\n      message += `an instance of ${formatList(instances, 'or')}`;\n      if (other.length > 0) message += ' or ';\n    }\n\n    if (other.length > 0) {\n      if (other.length > 1) {\n        message += `one of ${formatList(other, 'or')}`;\n      } else {\n        if (other[0].toLowerCase() !== other[0]) message += 'an ';\n        message += `${other[0]}`;\n      }\n    }\n\n    message += `. Received ${determineSpecificType(actual)}`;\n\n    return message\n  },\n  TypeError\n);\n\ncodes.ERR_INVALID_MODULE_SPECIFIER = createError(\n  'ERR_INVALID_MODULE_SPECIFIER',\n  /**\n   * @param {string} request\n   * @param {string} reason\n   * @param {string} [base]\n   */\n  (request, reason, base = undefined) => {\n    return `Invalid module \"${request}\" ${reason}${\n      base ? ` imported from ${base}` : ''\n    }`\n  },\n  TypeError\n);\n\ncodes.ERR_INVALID_PACKAGE_CONFIG = createError(\n  'ERR_INVALID_PACKAGE_CONFIG',\n  /**\n   * @param {string} path\n   * @param {string} [base]\n   * @param {string} [message]\n   */\n  (path, base, message) => {\n    return `Invalid package config ${path}${\n      base ? ` while importing ${base}` : ''\n    }${message ? `. ${message}` : ''}`\n  },\n  Error\n);\n\ncodes.ERR_INVALID_PACKAGE_TARGET = createError(\n  'ERR_INVALID_PACKAGE_TARGET',\n  /**\n   * @param {string} pkgPath\n   * @param {string} key\n   * @param {unknown} target\n   * @param {boolean} [isImport=false]\n   * @param {string} [base]\n   */\n  (pkgPath, key, target, isImport = false, base = undefined) => {\n    const relError =\n      typeof target === 'string' &&\n      !isImport &&\n      target.length > 0 &&\n      !target.startsWith('./');\n    if (key === '.') {\n      assert(isImport === false);\n      return (\n        `Invalid \"exports\" main target ${JSON.stringify(target)} defined ` +\n        `in the package config ${pkgPath}package.json${\n          base ? ` imported from ${base}` : ''\n        }${relError ? '; targets must start with \"./\"' : ''}`\n      )\n    }\n\n    return `Invalid \"${\n      isImport ? 'imports' : 'exports'\n    }\" target ${JSON.stringify(\n      target\n    )} defined for '${key}' in the package config ${pkgPath}package.json${\n      base ? ` imported from ${base}` : ''\n    }${relError ? '; targets must start with \"./\"' : ''}`\n  },\n  Error\n);\n\ncodes.ERR_MODULE_NOT_FOUND = createError(\n  'ERR_MODULE_NOT_FOUND',\n  /**\n   * @param {string} path\n   * @param {string} base\n   * @param {boolean} [exactUrl]\n   */\n  (path, base, exactUrl = false) => {\n    return `Cannot find ${\n      exactUrl ? 'module' : 'package'\n    } '${path}' imported from ${base}`\n  },\n  Error\n);\n\ncodes.ERR_NETWORK_IMPORT_DISALLOWED = createError(\n  'ERR_NETWORK_IMPORT_DISALLOWED',\n  \"import of '%s' by %s is not supported: %s\",\n  Error\n);\n\ncodes.ERR_PACKAGE_IMPORT_NOT_DEFINED = createError(\n  'ERR_PACKAGE_IMPORT_NOT_DEFINED',\n  /**\n   * @param {string} specifier\n   * @param {string} packagePath\n   * @param {string} base\n   */\n  (specifier, packagePath, base) => {\n    return `Package import specifier \"${specifier}\" is not defined${\n      packagePath ? ` in package ${packagePath}package.json` : ''\n    } imported from ${base}`\n  },\n  TypeError\n);\n\ncodes.ERR_PACKAGE_PATH_NOT_EXPORTED = createError(\n  'ERR_PACKAGE_PATH_NOT_EXPORTED',\n  /**\n   * @param {string} pkgPath\n   * @param {string} subpath\n   * @param {string} [base]\n   */\n  (pkgPath, subpath, base = undefined) => {\n    if (subpath === '.')\n      return `No \"exports\" main defined in ${pkgPath}package.json${\n        base ? ` imported from ${base}` : ''\n      }`\n    return `Package subpath '${subpath}' is not defined by \"exports\" in ${pkgPath}package.json${\n      base ? ` imported from ${base}` : ''\n    }`\n  },\n  Error\n);\n\ncodes.ERR_UNSUPPORTED_DIR_IMPORT = createError(\n  'ERR_UNSUPPORTED_DIR_IMPORT',\n  \"Directory import '%s' is not supported \" +\n    'resolving ES modules imported from %s',\n  Error\n);\n\ncodes.ERR_UNKNOWN_FILE_EXTENSION = createError(\n  'ERR_UNKNOWN_FILE_EXTENSION',\n  /**\n   * @param {string} ext\n   * @param {string} path\n   */\n  (ext, path) => {\n    return `Unknown file extension \"${ext}\" for ${path}`\n  },\n  TypeError\n);\n\ncodes.ERR_INVALID_ARG_VALUE = createError(\n  'ERR_INVALID_ARG_VALUE',\n  /**\n   * @param {string} name\n   * @param {unknown} value\n   * @param {string} [reason='is invalid']\n   */\n  (name, value, reason = 'is invalid') => {\n    let inspected = inspect(value);\n\n    if (inspected.length > 128) {\n      inspected = `${inspected.slice(0, 128)}...`;\n    }\n\n    const type = name.includes('.') ? 'property' : 'argument';\n\n    return `The ${type} '${name}' ${reason}. Received ${inspected}`\n  },\n  TypeError\n  // Note: extra classes have been shaken out.\n  // , RangeError\n);\n\n/**\n * Utility function for registering the error codes. Only used here. Exported\n * *only* to allow for testing.\n * @param {string} sym\n * @param {MessageFunction | string} value\n * @param {ErrorConstructor} def\n * @returns {new (...args: Array<any>) => Error}\n */\nfunction createError(sym, value, def) {\n  // Special case for SystemError that formats the error message differently\n  // The SystemErrors only have SystemError as their base classes.\n  messages.set(sym, value);\n\n  return makeNodeErrorWithCode(def, sym)\n}\n\n/**\n * @param {ErrorConstructor} Base\n * @param {string} key\n * @returns {ErrorConstructor}\n */\nfunction makeNodeErrorWithCode(Base, key) {\n  // @ts-expect-error It’s a Node error.\n  return NodeError\n  /**\n   * @param {Array<unknown>} args\n   */\n  function NodeError(...args) {\n    const limit = Error.stackTraceLimit;\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\n    const error = new Base();\n    // Reset the limit and setting the name property.\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = limit;\n    const message = getMessage(key, args, error);\n    Object.defineProperties(error, {\n      // Note: no need to implement `kIsNodeError` symbol, would be hard,\n      // probably.\n      message: {\n        value: message,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      },\n      toString: {\n        /** @this {Error} */\n        value() {\n          return `${this.name} [${key}]: ${this.message}`\n        },\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n\n    captureLargerStackTrace(error);\n    // @ts-expect-error It’s a Node error.\n    error.code = key;\n    return error\n  }\n}\n\n/**\n * @returns {boolean}\n */\nfunction isErrorStackTraceLimitWritable() {\n  // Do no touch Error.stackTraceLimit as V8 would attempt to install\n  // it again during deserialization.\n  try {\n    // @ts-expect-error: not in types?\n    if (v8.startupSnapshot.isBuildingSnapshot()) {\n      return false\n    }\n  } catch {}\n\n  const desc = Object.getOwnPropertyDescriptor(Error, 'stackTraceLimit');\n  if (desc === undefined) {\n    return Object.isExtensible(Error)\n  }\n\n  return own$1.call(desc, 'writable') && desc.writable !== undefined\n    ? desc.writable\n    : desc.set !== undefined\n}\n\n/**\n * This function removes unnecessary frames from Node.js core errors.\n * @template {(...args: unknown[]) => unknown} T\n * @param {T} fn\n * @returns {T}\n */\nfunction hideStackFrames(fn) {\n  // We rename the functions that will be hidden to cut off the stacktrace\n  // at the outermost one\n  const hidden = nodeInternalPrefix + fn.name;\n  Object.defineProperty(fn, 'name', {value: hidden});\n  return fn\n}\n\nconst captureLargerStackTrace = hideStackFrames(\n  /**\n   * @param {Error} error\n   * @returns {Error}\n   */\n  // @ts-expect-error: fine\n  function (error) {\n    const stackTraceLimitIsWritable = isErrorStackTraceLimitWritable();\n    if (stackTraceLimitIsWritable) {\n      userStackTraceLimit = Error.stackTraceLimit;\n      Error.stackTraceLimit = Number.POSITIVE_INFINITY;\n    }\n\n    Error.captureStackTrace(error);\n\n    // Reset the limit\n    if (stackTraceLimitIsWritable) Error.stackTraceLimit = userStackTraceLimit;\n\n    return error\n  }\n);\n\n/**\n * @param {string} key\n * @param {Array<unknown>} args\n * @param {Error} self\n * @returns {string}\n */\nfunction getMessage(key, args, self) {\n  const message = messages.get(key);\n  assert(message !== undefined, 'expected `message` to be found');\n\n  if (typeof message === 'function') {\n    assert(\n      message.length <= args.length, // Default options do not count.\n      `Code: ${key}; The provided arguments length (${args.length}) does not ` +\n        `match the required ones (${message.length}).`\n    );\n    return Reflect.apply(message, self, args)\n  }\n\n  const regex = /%[dfijoOs]/g;\n  let expectedLength = 0;\n  while (regex.exec(message) !== null) expectedLength++;\n  assert(\n    expectedLength === args.length,\n    `Code: ${key}; The provided arguments length (${args.length}) does not ` +\n      `match the required ones (${expectedLength}).`\n  );\n  if (args.length === 0) return message\n\n  args.unshift(message);\n  return Reflect.apply(format, null, args)\n}\n\n/**\n * Determine the specific type of a value for type-mismatch errors.\n * @param {unknown} value\n * @returns {string}\n */\nfunction determineSpecificType(value) {\n  if (value === null || value === undefined) {\n    return String(value)\n  }\n\n  if (typeof value === 'function' && value.name) {\n    return `function ${value.name}`\n  }\n\n  if (typeof value === 'object') {\n    if (value.constructor && value.constructor.name) {\n      return `an instance of ${value.constructor.name}`\n    }\n\n    return `${inspect(value, {depth: -1})}`\n  }\n\n  let inspected = inspect(value, {colors: false});\n\n  if (inspected.length > 28) {\n    inspected = `${inspected.slice(0, 25)}...`;\n  }\n\n  return `type ${typeof value} (${inspected})`\n}\n\n// Manually “tree shaken” from:\n// <https://github.com/nodejs/node/blob/45f5c9b/lib/internal/modules/package_json_reader.js>\n// Last checked on: Nov 2, 2023.\n// Removed the native dependency.\n// Also: no need to cache, we do that in resolve already.\n\n\nconst hasOwnProperty$1 = {}.hasOwnProperty;\n\nconst {ERR_INVALID_PACKAGE_CONFIG: ERR_INVALID_PACKAGE_CONFIG$1} = codes;\n\n/** @type {Map<string, PackageConfig>} */\nconst cache = new Map();\n\nconst reader = {read};\n\n/**\n * @param {string} jsonPath\n * @param {{specifier: URL | string, base?: URL}} options\n * @returns {PackageConfig}\n */\nfunction read(jsonPath, {base, specifier}) {\n  const existing = cache.get(jsonPath);\n\n  if (existing) {\n    return existing\n  }\n\n  /** @type {string | undefined} */\n  let string;\n\n  try {\n    string = fs.readFileSync(path.toNamespacedPath(jsonPath), 'utf8');\n  } catch (error) {\n    const exception = /** @type {ErrnoException} */ (error);\n\n    if (exception.code !== 'ENOENT') {\n      throw exception\n    }\n  }\n\n  /** @type {PackageConfig} */\n  const result = {\n    exists: false,\n    pjsonPath: jsonPath,\n    main: undefined,\n    name: undefined,\n    type: 'none', // Ignore unknown types for forwards compatibility\n    exports: undefined,\n    imports: undefined\n  };\n\n  if (string !== undefined) {\n    /** @type {Record<string, unknown>} */\n    let parsed;\n\n    try {\n      parsed = JSON.parse(string);\n    } catch (error_) {\n      const cause = /** @type {ErrnoException} */ (error_);\n      const error = new ERR_INVALID_PACKAGE_CONFIG$1(\n        jsonPath,\n        (base ? `\"${specifier}\" from ` : '') + fileURLToPath(base || specifier),\n        cause.message\n      );\n      // @ts-expect-error: fine.\n      error.cause = cause;\n      throw error\n    }\n\n    result.exists = true;\n\n    if (\n      hasOwnProperty$1.call(parsed, 'name') &&\n      typeof parsed.name === 'string'\n    ) {\n      result.name = parsed.name;\n    }\n\n    if (\n      hasOwnProperty$1.call(parsed, 'main') &&\n      typeof parsed.main === 'string'\n    ) {\n      result.main = parsed.main;\n    }\n\n    if (hasOwnProperty$1.call(parsed, 'exports')) {\n      // @ts-expect-error: assume valid.\n      result.exports = parsed.exports;\n    }\n\n    if (hasOwnProperty$1.call(parsed, 'imports')) {\n      // @ts-expect-error: assume valid.\n      result.imports = parsed.imports;\n    }\n\n    // Ignore unknown types for forwards compatibility\n    if (\n      hasOwnProperty$1.call(parsed, 'type') &&\n      (parsed.type === 'commonjs' || parsed.type === 'module')\n    ) {\n      result.type = parsed.type;\n    }\n  }\n\n  cache.set(jsonPath, result);\n\n  return result\n}\n\n// Manually “tree shaken” from:\n// <https://github.com/nodejs/node/blob/45f5c9b/lib/internal/modules/esm/package_config.js>\n// Last checked on: Nov 2, 2023.\n\n\n/**\n * @param {URL | string} resolved\n * @returns {PackageConfig}\n */\nfunction getPackageScopeConfig(resolved) {\n  let packageJSONUrl = new URL$1('package.json', resolved);\n\n  while (true) {\n    const packageJSONPath = packageJSONUrl.pathname;\n    if (packageJSONPath.endsWith('node_modules/package.json')) {\n      break\n    }\n\n    const packageConfig = reader.read(\n      fileURLToPath(packageJSONUrl),\n      {specifier: resolved}\n    );\n\n    if (packageConfig.exists) {\n      return packageConfig\n    }\n\n    const lastPackageJSONUrl = packageJSONUrl;\n    packageJSONUrl = new URL$1('../package.json', packageJSONUrl);\n\n    // Terminates at root where ../package.json equals ../../package.json\n    // (can't just check \"/package.json\" for Windows support).\n    if (packageJSONUrl.pathname === lastPackageJSONUrl.pathname) {\n      break\n    }\n  }\n\n  const packageJSONPath = fileURLToPath(packageJSONUrl);\n\n  return {\n    pjsonPath: packageJSONPath,\n    exists: false,\n    main: undefined,\n    name: undefined,\n    type: 'none',\n    exports: undefined,\n    imports: undefined\n  }\n}\n\n// Manually “tree shaken” from:\n// <https://github.com/nodejs/node/blob/45f5c9b/lib/internal/modules/esm/resolve.js>\n// Last checked on: Nov 2, 2023.\n//\n// This file solves a circular dependency.\n// In Node.js, `getPackageType` is in `resolve.js`.\n// `resolve.js` imports `get-format.js`, which needs `getPackageType`.\n// We split that up so that bundlers don’t fail.\n\n\n/**\n * @param {URL} url\n * @returns {PackageType}\n */\nfunction getPackageType(url) {\n  const packageConfig = getPackageScopeConfig(url);\n  return packageConfig.type\n}\n\n// Manually “tree shaken” from:\n// <https://github.com/nodejs/node/blob/45f5c9b/lib/internal/modules/esm/get_format.js>\n// Last checked on: Nov 2, 2023.\n\n\nconst {ERR_UNKNOWN_FILE_EXTENSION} = codes;\n\nconst hasOwnProperty = {}.hasOwnProperty;\n\n/** @type {Record<string, string>} */\nconst extensionFormatMap = {\n  // @ts-expect-error: hush.\n  __proto__: null,\n  '.cjs': 'commonjs',\n  '.js': 'module',\n  '.json': 'json',\n  '.mjs': 'module'\n};\n\n/**\n * @param {string | null} mime\n * @returns {string | null}\n */\nfunction mimeToFormat(mime) {\n  if (\n    mime &&\n    /\\s*(text|application)\\/javascript\\s*(;\\s*charset=utf-?8\\s*)?/i.test(mime)\n  )\n    return 'module'\n  if (mime === 'application/json') return 'json'\n  return null\n}\n\n/**\n * @callback ProtocolHandler\n * @param {URL} parsed\n * @param {{parentURL: string, source?: Buffer}} context\n * @param {boolean} ignoreErrors\n * @returns {string | null | void}\n */\n\n/**\n * @type {Record<string, ProtocolHandler>}\n */\nconst protocolHandlers = {\n  // @ts-expect-error: hush.\n  __proto__: null,\n  'data:': getDataProtocolModuleFormat,\n  'file:': getFileProtocolModuleFormat,\n  'http:': getHttpProtocolModuleFormat,\n  'https:': getHttpProtocolModuleFormat,\n  'node:'() {\n    return 'builtin'\n  }\n};\n\n/**\n * @param {URL} parsed\n */\nfunction getDataProtocolModuleFormat(parsed) {\n  const {1: mime} = /^([^/]+\\/[^;,]+)[^,]*?(;base64)?,/.exec(\n    parsed.pathname\n  ) || [null, null, null];\n  return mimeToFormat(mime)\n}\n\n/**\n * Returns the file extension from a URL.\n *\n * Should give similar result to\n * `require('node:path').extname(require('node:url').fileURLToPath(url))`\n * when used with a `file:` URL.\n *\n * @param {URL} url\n * @returns {string}\n */\nfunction extname(url) {\n  const pathname = url.pathname;\n  let index = pathname.length;\n\n  while (index--) {\n    const code = pathname.codePointAt(index);\n\n    if (code === 47 /* `/` */) {\n      return ''\n    }\n\n    if (code === 46 /* `.` */) {\n      return pathname.codePointAt(index - 1) === 47 /* `/` */\n        ? ''\n        : pathname.slice(index)\n    }\n  }\n\n  return ''\n}\n\n/**\n * @type {ProtocolHandler}\n */\nfunction getFileProtocolModuleFormat(url, _context, ignoreErrors) {\n  const ext = extname(url);\n\n  if (ext === '.js') {\n    const packageType = getPackageType(url);\n\n    if (packageType !== 'none') {\n      return packageType\n    }\n\n    return 'commonjs'\n  }\n\n  if (ext === '') {\n    const packageType = getPackageType(url);\n\n    // Legacy behavior\n    if (packageType === 'none' || packageType === 'commonjs') {\n      return 'commonjs'\n    }\n\n    // Note: we don’t implement WASM, so we don’t need\n    // `getFormatOfExtensionlessFile` from `formats`.\n    return 'module'\n  }\n\n  const format = extensionFormatMap[ext];\n  if (format) return format\n\n  // Explicit undefined return indicates load hook should rerun format check\n  if (ignoreErrors) {\n    return undefined\n  }\n\n  const filepath = fileURLToPath(url);\n  throw new ERR_UNKNOWN_FILE_EXTENSION(ext, filepath)\n}\n\nfunction getHttpProtocolModuleFormat() {\n  // To do: HTTPS imports.\n}\n\n/**\n * @param {URL} url\n * @param {{parentURL: string}} context\n * @returns {string | null}\n */\nfunction defaultGetFormatWithoutErrors(url, context) {\n  const protocol = url.protocol;\n\n  if (!hasOwnProperty.call(protocolHandlers, protocol)) {\n    return null\n  }\n\n  return protocolHandlers[protocol](url, context, true) || null\n}\n\n// Manually “tree shaken” from:\n// <https://github.com/nodejs/node/blob/45f5c9b/lib/internal/modules/esm/utils.js>\n// Last checked on: Nov 2, 2023.\n\n\nconst {ERR_INVALID_ARG_VALUE} = codes;\n\n// In Node itself these values are populated from CLI arguments, before any\n// user code runs.\n// Here we just define the defaults.\nconst DEFAULT_CONDITIONS = Object.freeze(['node', 'import']);\nconst DEFAULT_CONDITIONS_SET = new Set(DEFAULT_CONDITIONS);\n\n/**\n * Returns the default conditions for ES module loading.\n */\nfunction getDefaultConditions() {\n  return DEFAULT_CONDITIONS\n}\n\n/**\n * Returns the default conditions for ES module loading, as a Set.\n */\nfunction getDefaultConditionsSet() {\n  return DEFAULT_CONDITIONS_SET\n}\n\n/**\n * @param {Array<string>} [conditions]\n * @returns {Set<string>}\n */\nfunction getConditionsSet(conditions) {\n  if (conditions !== undefined && conditions !== getDefaultConditions()) {\n    if (!Array.isArray(conditions)) {\n      throw new ERR_INVALID_ARG_VALUE(\n        'conditions',\n        conditions,\n        'expected an array'\n      )\n    }\n\n    return new Set(conditions)\n  }\n\n  return getDefaultConditionsSet()\n}\n\n// Manually “tree shaken” from:\n// <https://github.com/nodejs/node/blob/45f5c9b/lib/internal/modules/esm/resolve.js>\n// Last checked on: Nov 2, 2023.\n\n\nconst RegExpPrototypeSymbolReplace = RegExp.prototype[Symbol.replace];\n\nconst {\n  ERR_NETWORK_IMPORT_DISALLOWED,\n  ERR_INVALID_MODULE_SPECIFIER,\n  ERR_INVALID_PACKAGE_CONFIG,\n  ERR_INVALID_PACKAGE_TARGET,\n  ERR_MODULE_NOT_FOUND,\n  ERR_PACKAGE_IMPORT_NOT_DEFINED,\n  ERR_PACKAGE_PATH_NOT_EXPORTED,\n  ERR_UNSUPPORTED_DIR_IMPORT\n} = codes;\n\nconst own = {}.hasOwnProperty;\n\nconst invalidSegmentRegEx =\n  /(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))?(\\\\|\\/|$)/i;\nconst deprecatedInvalidSegmentRegEx =\n  /(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))(\\\\|\\/|$)/i;\nconst invalidPackageNameRegEx = /^\\.|%|\\\\/;\nconst patternRegEx = /\\*/g;\nconst encodedSepRegEx = /%2f|%5c/i;\n/** @type {Set<string>} */\nconst emittedPackageWarnings = new Set();\n\nconst doubleSlashRegEx = /[/\\\\]{2}/;\n\n/**\n *\n * @param {string} target\n * @param {string} request\n * @param {string} match\n * @param {URL} packageJsonUrl\n * @param {boolean} internal\n * @param {URL} base\n * @param {boolean} isTarget\n */\nfunction emitInvalidSegmentDeprecation(\n  target,\n  request,\n  match,\n  packageJsonUrl,\n  internal,\n  base,\n  isTarget\n) {\n  // @ts-expect-error: apparently it does exist, TS.\n  if (process$1.noDeprecation) {\n    return\n  }\n\n  const pjsonPath = fileURLToPath(packageJsonUrl);\n  const double = doubleSlashRegEx.exec(isTarget ? target : request) !== null;\n  process$1.emitWarning(\n    `Use of deprecated ${\n      double ? 'double slash' : 'leading or trailing slash matching'\n    } resolving \"${target}\" for module ` +\n      `request \"${request}\" ${\n        request === match ? '' : `matched to \"${match}\" `\n      }in the \"${\n        internal ? 'imports' : 'exports'\n      }\" field module resolution of the package at ${pjsonPath}${\n        base ? ` imported from ${fileURLToPath(base)}` : ''\n      }.`,\n    'DeprecationWarning',\n    'DEP0166'\n  );\n}\n\n/**\n * @param {URL} url\n * @param {URL} packageJsonUrl\n * @param {URL} base\n * @param {string} [main]\n * @returns {void}\n */\nfunction emitLegacyIndexDeprecation(url, packageJsonUrl, base, main) {\n  // @ts-expect-error: apparently it does exist, TS.\n  if (process$1.noDeprecation) {\n    return\n  }\n\n  const format = defaultGetFormatWithoutErrors(url, {parentURL: base.href});\n  if (format !== 'module') return\n  const urlPath = fileURLToPath(url.href);\n  const pkgPath = fileURLToPath(new URL$1('.', packageJsonUrl));\n  const basePath = fileURLToPath(base);\n  if (!main) {\n    process$1.emitWarning(\n      `No \"main\" or \"exports\" field defined in the package.json for ${pkgPath} resolving the main entry point \"${urlPath.slice(\n        pkgPath.length\n      )}\", imported from ${basePath}.\\nDefault \"index\" lookups for the main are deprecated for ES modules.`,\n      'DeprecationWarning',\n      'DEP0151'\n    );\n  } else if (path.resolve(pkgPath, main) !== urlPath) {\n    process$1.emitWarning(\n      `Package ${pkgPath} has a \"main\" field set to \"${main}\", ` +\n        `excluding the full filename and extension to the resolved file at \"${urlPath.slice(\n          pkgPath.length\n        )}\", imported from ${basePath}.\\n Automatic extension resolution of the \"main\" field is ` +\n        'deprecated for ES modules.',\n      'DeprecationWarning',\n      'DEP0151'\n    );\n  }\n}\n\n/**\n * @param {string} path\n * @returns {Stats}\n */\nfunction tryStatSync(path) {\n  // Note: from Node 15 onwards we can use `throwIfNoEntry: false` instead.\n  try {\n    return statSync(path)\n  } catch {\n    return new Stats()\n  }\n}\n\n/**\n * Legacy CommonJS main resolution:\n * 1. let M = pkg_url + (json main field)\n * 2. TRY(M, M.js, M.json, M.node)\n * 3. TRY(M/index.js, M/index.json, M/index.node)\n * 4. TRY(pkg_url/index.js, pkg_url/index.json, pkg_url/index.node)\n * 5. NOT_FOUND\n *\n * @param {URL} url\n * @returns {boolean}\n */\nfunction fileExists(url) {\n  const stats = statSync(url, {throwIfNoEntry: false});\n  const isFile = stats ? stats.isFile() : undefined;\n  return isFile === null || isFile === undefined ? false : isFile\n}\n\n/**\n * @param {URL} packageJsonUrl\n * @param {PackageConfig} packageConfig\n * @param {URL} base\n * @returns {URL}\n */\nfunction legacyMainResolve(packageJsonUrl, packageConfig, base) {\n  /** @type {URL | undefined} */\n  let guess;\n  if (packageConfig.main !== undefined) {\n    guess = new URL$1(packageConfig.main, packageJsonUrl);\n    // Note: fs check redundances will be handled by Descriptor cache here.\n    if (fileExists(guess)) return guess\n\n    const tries = [\n      `./${packageConfig.main}.js`,\n      `./${packageConfig.main}.json`,\n      `./${packageConfig.main}.node`,\n      `./${packageConfig.main}/index.js`,\n      `./${packageConfig.main}/index.json`,\n      `./${packageConfig.main}/index.node`\n    ];\n    let i = -1;\n\n    while (++i < tries.length) {\n      guess = new URL$1(tries[i], packageJsonUrl);\n      if (fileExists(guess)) break\n      guess = undefined;\n    }\n\n    if (guess) {\n      emitLegacyIndexDeprecation(\n        guess,\n        packageJsonUrl,\n        base,\n        packageConfig.main\n      );\n      return guess\n    }\n    // Fallthrough.\n  }\n\n  const tries = ['./index.js', './index.json', './index.node'];\n  let i = -1;\n\n  while (++i < tries.length) {\n    guess = new URL$1(tries[i], packageJsonUrl);\n    if (fileExists(guess)) break\n    guess = undefined;\n  }\n\n  if (guess) {\n    emitLegacyIndexDeprecation(guess, packageJsonUrl, base, packageConfig.main);\n    return guess\n  }\n\n  // Not found.\n  throw new ERR_MODULE_NOT_FOUND(\n    fileURLToPath(new URL$1('.', packageJsonUrl)),\n    fileURLToPath(base)\n  )\n}\n\n/**\n * @param {URL} resolved\n * @param {URL} base\n * @param {boolean} [preserveSymlinks]\n * @returns {URL}\n */\nfunction finalizeResolution(resolved, base, preserveSymlinks) {\n  if (encodedSepRegEx.exec(resolved.pathname) !== null) {\n    throw new ERR_INVALID_MODULE_SPECIFIER(\n      resolved.pathname,\n      'must not include encoded \"/\" or \"\\\\\" characters',\n      fileURLToPath(base)\n    )\n  }\n\n  /** @type {string} */\n  let filePath;\n\n  try {\n    filePath = fileURLToPath(resolved);\n  } catch (error) {\n    const cause = /** @type {ErrnoException} */ (error);\n    Object.defineProperty(cause, 'input', {value: String(resolved)});\n    Object.defineProperty(cause, 'module', {value: String(base)});\n    throw cause\n  }\n\n  const stats = tryStatSync(\n    filePath.endsWith('/') ? filePath.slice(-1) : filePath\n  );\n\n  if (stats.isDirectory()) {\n    const error = new ERR_UNSUPPORTED_DIR_IMPORT(filePath, fileURLToPath(base));\n    // @ts-expect-error Add this for `import.meta.resolve`.\n    error.url = String(resolved);\n    throw error\n  }\n\n  if (!stats.isFile()) {\n    const error = new ERR_MODULE_NOT_FOUND(\n      filePath || resolved.pathname,\n      base && fileURLToPath(base),\n      true\n    );\n    // @ts-expect-error Add this for `import.meta.resolve`.\n    error.url = String(resolved);\n    throw error\n  }\n\n  if (!preserveSymlinks) {\n    const real = realpathSync(filePath);\n    const {search, hash} = resolved;\n    resolved = pathToFileURL(real + (filePath.endsWith(path.sep) ? '/' : ''));\n    resolved.search = search;\n    resolved.hash = hash;\n  }\n\n  return resolved\n}\n\n/**\n * @param {string} specifier\n * @param {URL | undefined} packageJsonUrl\n * @param {URL} base\n * @returns {Error}\n */\nfunction importNotDefined(specifier, packageJsonUrl, base) {\n  return new ERR_PACKAGE_IMPORT_NOT_DEFINED(\n    specifier,\n    packageJsonUrl && fileURLToPath(new URL$1('.', packageJsonUrl)),\n    fileURLToPath(base)\n  )\n}\n\n/**\n * @param {string} subpath\n * @param {URL} packageJsonUrl\n * @param {URL} base\n * @returns {Error}\n */\nfunction exportsNotFound(subpath, packageJsonUrl, base) {\n  return new ERR_PACKAGE_PATH_NOT_EXPORTED(\n    fileURLToPath(new URL$1('.', packageJsonUrl)),\n    subpath,\n    base && fileURLToPath(base)\n  )\n}\n\n/**\n * @param {string} request\n * @param {string} match\n * @param {URL} packageJsonUrl\n * @param {boolean} internal\n * @param {URL} [base]\n * @returns {never}\n */\nfunction throwInvalidSubpath(request, match, packageJsonUrl, internal, base) {\n  const reason = `request is not a valid match in pattern \"${match}\" for the \"${\n    internal ? 'imports' : 'exports'\n  }\" resolution of ${fileURLToPath(packageJsonUrl)}`;\n  throw new ERR_INVALID_MODULE_SPECIFIER(\n    request,\n    reason,\n    base && fileURLToPath(base)\n  )\n}\n\n/**\n * @param {string} subpath\n * @param {unknown} target\n * @param {URL} packageJsonUrl\n * @param {boolean} internal\n * @param {URL} [base]\n * @returns {Error}\n */\nfunction invalidPackageTarget(subpath, target, packageJsonUrl, internal, base) {\n  target =\n    typeof target === 'object' && target !== null\n      ? JSON.stringify(target, null, '')\n      : `${target}`;\n\n  return new ERR_INVALID_PACKAGE_TARGET(\n    fileURLToPath(new URL$1('.', packageJsonUrl)),\n    subpath,\n    target,\n    internal,\n    base && fileURLToPath(base)\n  )\n}\n\n/**\n * @param {string} target\n * @param {string} subpath\n * @param {string} match\n * @param {URL} packageJsonUrl\n * @param {URL} base\n * @param {boolean} pattern\n * @param {boolean} internal\n * @param {boolean} isPathMap\n * @param {Set<string> | undefined} conditions\n * @returns {URL}\n */\nfunction resolvePackageTargetString(\n  target,\n  subpath,\n  match,\n  packageJsonUrl,\n  base,\n  pattern,\n  internal,\n  isPathMap,\n  conditions\n) {\n  if (subpath !== '' && !pattern && target[target.length - 1] !== '/')\n    throw invalidPackageTarget(match, target, packageJsonUrl, internal, base)\n\n  if (!target.startsWith('./')) {\n    if (internal && !target.startsWith('../') && !target.startsWith('/')) {\n      let isURL = false;\n\n      try {\n        new URL$1(target);\n        isURL = true;\n      } catch {\n        // Continue regardless of error.\n      }\n\n      if (!isURL) {\n        const exportTarget = pattern\n          ? RegExpPrototypeSymbolReplace.call(\n              patternRegEx,\n              target,\n              () => subpath\n            )\n          : target + subpath;\n\n        return packageResolve(exportTarget, packageJsonUrl, conditions)\n      }\n    }\n\n    throw invalidPackageTarget(match, target, packageJsonUrl, internal, base)\n  }\n\n  if (invalidSegmentRegEx.exec(target.slice(2)) !== null) {\n    if (deprecatedInvalidSegmentRegEx.exec(target.slice(2)) === null) {\n      if (!isPathMap) {\n        const request = pattern\n          ? match.replace('*', () => subpath)\n          : match + subpath;\n        const resolvedTarget = pattern\n          ? RegExpPrototypeSymbolReplace.call(\n              patternRegEx,\n              target,\n              () => subpath\n            )\n          : target;\n        emitInvalidSegmentDeprecation(\n          resolvedTarget,\n          request,\n          match,\n          packageJsonUrl,\n          internal,\n          base,\n          true\n        );\n      }\n    } else {\n      throw invalidPackageTarget(match, target, packageJsonUrl, internal, base)\n    }\n  }\n\n  const resolved = new URL$1(target, packageJsonUrl);\n  const resolvedPath = resolved.pathname;\n  const packagePath = new URL$1('.', packageJsonUrl).pathname;\n\n  if (!resolvedPath.startsWith(packagePath))\n    throw invalidPackageTarget(match, target, packageJsonUrl, internal, base)\n\n  if (subpath === '') return resolved\n\n  if (invalidSegmentRegEx.exec(subpath) !== null) {\n    const request = pattern\n      ? match.replace('*', () => subpath)\n      : match + subpath;\n    if (deprecatedInvalidSegmentRegEx.exec(subpath) === null) {\n      if (!isPathMap) {\n        const resolvedTarget = pattern\n          ? RegExpPrototypeSymbolReplace.call(\n              patternRegEx,\n              target,\n              () => subpath\n            )\n          : target;\n        emitInvalidSegmentDeprecation(\n          resolvedTarget,\n          request,\n          match,\n          packageJsonUrl,\n          internal,\n          base,\n          false\n        );\n      }\n    } else {\n      throwInvalidSubpath(request, match, packageJsonUrl, internal, base);\n    }\n  }\n\n  if (pattern) {\n    return new URL$1(\n      RegExpPrototypeSymbolReplace.call(\n        patternRegEx,\n        resolved.href,\n        () => subpath\n      )\n    )\n  }\n\n  return new URL$1(subpath, resolved)\n}\n\n/**\n * @param {string} key\n * @returns {boolean}\n */\nfunction isArrayIndex(key) {\n  const keyNumber = Number(key);\n  if (`${keyNumber}` !== key) return false\n  return keyNumber >= 0 && keyNumber < 0xff_ff_ff_ff\n}\n\n/**\n * @param {URL} packageJsonUrl\n * @param {unknown} target\n * @param {string} subpath\n * @param {string} packageSubpath\n * @param {URL} base\n * @param {boolean} pattern\n * @param {boolean} internal\n * @param {boolean} isPathMap\n * @param {Set<string> | undefined} conditions\n * @returns {URL | null}\n */\nfunction resolvePackageTarget(\n  packageJsonUrl,\n  target,\n  subpath,\n  packageSubpath,\n  base,\n  pattern,\n  internal,\n  isPathMap,\n  conditions\n) {\n  if (typeof target === 'string') {\n    return resolvePackageTargetString(\n      target,\n      subpath,\n      packageSubpath,\n      packageJsonUrl,\n      base,\n      pattern,\n      internal,\n      isPathMap,\n      conditions\n    )\n  }\n\n  if (Array.isArray(target)) {\n    /** @type {Array<unknown>} */\n    const targetList = target;\n    if (targetList.length === 0) return null\n\n    /** @type {ErrnoException | null | undefined} */\n    let lastException;\n    let i = -1;\n\n    while (++i < targetList.length) {\n      const targetItem = targetList[i];\n      /** @type {URL | null} */\n      let resolveResult;\n      try {\n        resolveResult = resolvePackageTarget(\n          packageJsonUrl,\n          targetItem,\n          subpath,\n          packageSubpath,\n          base,\n          pattern,\n          internal,\n          isPathMap,\n          conditions\n        );\n      } catch (error) {\n        const exception = /** @type {ErrnoException} */ (error);\n        lastException = exception;\n        if (exception.code === 'ERR_INVALID_PACKAGE_TARGET') continue\n        throw error\n      }\n\n      if (resolveResult === undefined) continue\n\n      if (resolveResult === null) {\n        lastException = null;\n        continue\n      }\n\n      return resolveResult\n    }\n\n    if (lastException === undefined || lastException === null) {\n      return null\n    }\n\n    throw lastException\n  }\n\n  if (typeof target === 'object' && target !== null) {\n    const keys = Object.getOwnPropertyNames(target);\n    let i = -1;\n\n    while (++i < keys.length) {\n      const key = keys[i];\n      if (isArrayIndex(key)) {\n        throw new ERR_INVALID_PACKAGE_CONFIG(\n          fileURLToPath(packageJsonUrl),\n          base,\n          '\"exports\" cannot contain numeric property keys.'\n        )\n      }\n    }\n\n    i = -1;\n\n    while (++i < keys.length) {\n      const key = keys[i];\n      if (key === 'default' || (conditions && conditions.has(key))) {\n        // @ts-expect-error: indexable.\n        const conditionalTarget = /** @type {unknown} */ (target[key]);\n        const resolveResult = resolvePackageTarget(\n          packageJsonUrl,\n          conditionalTarget,\n          subpath,\n          packageSubpath,\n          base,\n          pattern,\n          internal,\n          isPathMap,\n          conditions\n        );\n        if (resolveResult === undefined) continue\n        return resolveResult\n      }\n    }\n\n    return null\n  }\n\n  if (target === null) {\n    return null\n  }\n\n  throw invalidPackageTarget(\n    packageSubpath,\n    target,\n    packageJsonUrl,\n    internal,\n    base\n  )\n}\n\n/**\n * @param {unknown} exports\n * @param {URL} packageJsonUrl\n * @param {URL} base\n * @returns {boolean}\n */\nfunction isConditionalExportsMainSugar(exports, packageJsonUrl, base) {\n  if (typeof exports === 'string' || Array.isArray(exports)) return true\n  if (typeof exports !== 'object' || exports === null) return false\n\n  const keys = Object.getOwnPropertyNames(exports);\n  let isConditionalSugar = false;\n  let i = 0;\n  let j = -1;\n  while (++j < keys.length) {\n    const key = keys[j];\n    const curIsConditionalSugar = key === '' || key[0] !== '.';\n    if (i++ === 0) {\n      isConditionalSugar = curIsConditionalSugar;\n    } else if (isConditionalSugar !== curIsConditionalSugar) {\n      throw new ERR_INVALID_PACKAGE_CONFIG(\n        fileURLToPath(packageJsonUrl),\n        base,\n        '\"exports\" cannot contain some keys starting with \\'.\\' and some not.' +\n          ' The exports object must either be an object of package subpath keys' +\n          ' or an object of main entry condition name keys only.'\n      )\n    }\n  }\n\n  return isConditionalSugar\n}\n\n/**\n * @param {string} match\n * @param {URL} pjsonUrl\n * @param {URL} base\n */\nfunction emitTrailingSlashPatternDeprecation(match, pjsonUrl, base) {\n  // @ts-expect-error: apparently it does exist, TS.\n  if (process$1.noDeprecation) {\n    return\n  }\n\n  const pjsonPath = fileURLToPath(pjsonUrl);\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match)) return\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\n  process$1.emitWarning(\n    `Use of deprecated trailing slash pattern mapping \"${match}\" in the ` +\n      `\"exports\" field module resolution of the package at ${pjsonPath}${\n        base ? ` imported from ${fileURLToPath(base)}` : ''\n      }. Mapping specifiers ending in \"/\" is no longer supported.`,\n    'DeprecationWarning',\n    'DEP0155'\n  );\n}\n\n/**\n * @param {URL} packageJsonUrl\n * @param {string} packageSubpath\n * @param {Record<string, unknown>} packageConfig\n * @param {URL} base\n * @param {Set<string> | undefined} conditions\n * @returns {URL}\n */\nfunction packageExportsResolve(\n  packageJsonUrl,\n  packageSubpath,\n  packageConfig,\n  base,\n  conditions\n) {\n  let exports = packageConfig.exports;\n\n  if (isConditionalExportsMainSugar(exports, packageJsonUrl, base)) {\n    exports = {'.': exports};\n  }\n\n  if (\n    own.call(exports, packageSubpath) &&\n    !packageSubpath.includes('*') &&\n    !packageSubpath.endsWith('/')\n  ) {\n    // @ts-expect-error: indexable.\n    const target = exports[packageSubpath];\n    const resolveResult = resolvePackageTarget(\n      packageJsonUrl,\n      target,\n      '',\n      packageSubpath,\n      base,\n      false,\n      false,\n      false,\n      conditions\n    );\n    if (resolveResult === null || resolveResult === undefined) {\n      throw exportsNotFound(packageSubpath, packageJsonUrl, base)\n    }\n\n    return resolveResult\n  }\n\n  let bestMatch = '';\n  let bestMatchSubpath = '';\n  const keys = Object.getOwnPropertyNames(exports);\n  let i = -1;\n\n  while (++i < keys.length) {\n    const key = keys[i];\n    const patternIndex = key.indexOf('*');\n\n    if (\n      patternIndex !== -1 &&\n      packageSubpath.startsWith(key.slice(0, patternIndex))\n    ) {\n      // When this reaches EOL, this can throw at the top of the whole function:\n      //\n      // if (StringPrototypeEndsWith(packageSubpath, '/'))\n      //   throwInvalidSubpath(packageSubpath)\n      //\n      // To match \"imports\" and the spec.\n      if (packageSubpath.endsWith('/')) {\n        emitTrailingSlashPatternDeprecation(\n          packageSubpath,\n          packageJsonUrl,\n          base\n        );\n      }\n\n      const patternTrailer = key.slice(patternIndex + 1);\n\n      if (\n        packageSubpath.length >= key.length &&\n        packageSubpath.endsWith(patternTrailer) &&\n        patternKeyCompare(bestMatch, key) === 1 &&\n        key.lastIndexOf('*') === patternIndex\n      ) {\n        bestMatch = key;\n        bestMatchSubpath = packageSubpath.slice(\n          patternIndex,\n          packageSubpath.length - patternTrailer.length\n        );\n      }\n    }\n  }\n\n  if (bestMatch) {\n    // @ts-expect-error: indexable.\n    const target = /** @type {unknown} */ (exports[bestMatch]);\n    const resolveResult = resolvePackageTarget(\n      packageJsonUrl,\n      target,\n      bestMatchSubpath,\n      bestMatch,\n      base,\n      true,\n      false,\n      packageSubpath.endsWith('/'),\n      conditions\n    );\n\n    if (resolveResult === null || resolveResult === undefined) {\n      throw exportsNotFound(packageSubpath, packageJsonUrl, base)\n    }\n\n    return resolveResult\n  }\n\n  throw exportsNotFound(packageSubpath, packageJsonUrl, base)\n}\n\n/**\n * @param {string} a\n * @param {string} b\n */\nfunction patternKeyCompare(a, b) {\n  const aPatternIndex = a.indexOf('*');\n  const bPatternIndex = b.indexOf('*');\n  const baseLengthA = aPatternIndex === -1 ? a.length : aPatternIndex + 1;\n  const baseLengthB = bPatternIndex === -1 ? b.length : bPatternIndex + 1;\n  if (baseLengthA > baseLengthB) return -1\n  if (baseLengthB > baseLengthA) return 1\n  if (aPatternIndex === -1) return 1\n  if (bPatternIndex === -1) return -1\n  if (a.length > b.length) return -1\n  if (b.length > a.length) return 1\n  return 0\n}\n\n/**\n * @param {string} name\n * @param {URL} base\n * @param {Set<string>} [conditions]\n * @returns {URL}\n */\nfunction packageImportsResolve(name, base, conditions) {\n  if (name === '#' || name.startsWith('#/') || name.endsWith('/')) {\n    const reason = 'is not a valid internal imports specifier name';\n    throw new ERR_INVALID_MODULE_SPECIFIER(name, reason, fileURLToPath(base))\n  }\n\n  /** @type {URL | undefined} */\n  let packageJsonUrl;\n\n  const packageConfig = getPackageScopeConfig(base);\n\n  if (packageConfig.exists) {\n    packageJsonUrl = pathToFileURL(packageConfig.pjsonPath);\n    const imports = packageConfig.imports;\n    if (imports) {\n      if (own.call(imports, name) && !name.includes('*')) {\n        const resolveResult = resolvePackageTarget(\n          packageJsonUrl,\n          imports[name],\n          '',\n          name,\n          base,\n          false,\n          true,\n          false,\n          conditions\n        );\n        if (resolveResult !== null && resolveResult !== undefined) {\n          return resolveResult\n        }\n      } else {\n        let bestMatch = '';\n        let bestMatchSubpath = '';\n        const keys = Object.getOwnPropertyNames(imports);\n        let i = -1;\n\n        while (++i < keys.length) {\n          const key = keys[i];\n          const patternIndex = key.indexOf('*');\n\n          if (patternIndex !== -1 && name.startsWith(key.slice(0, -1))) {\n            const patternTrailer = key.slice(patternIndex + 1);\n            if (\n              name.length >= key.length &&\n              name.endsWith(patternTrailer) &&\n              patternKeyCompare(bestMatch, key) === 1 &&\n              key.lastIndexOf('*') === patternIndex\n            ) {\n              bestMatch = key;\n              bestMatchSubpath = name.slice(\n                patternIndex,\n                name.length - patternTrailer.length\n              );\n            }\n          }\n        }\n\n        if (bestMatch) {\n          const target = imports[bestMatch];\n          const resolveResult = resolvePackageTarget(\n            packageJsonUrl,\n            target,\n            bestMatchSubpath,\n            bestMatch,\n            base,\n            true,\n            true,\n            false,\n            conditions\n          );\n\n          if (resolveResult !== null && resolveResult !== undefined) {\n            return resolveResult\n          }\n        }\n      }\n    }\n  }\n\n  throw importNotDefined(name, packageJsonUrl, base)\n}\n\n// Note: In Node.js, `getPackageType` is here.\n// To prevent a circular dependency, we move it to\n// `resolve-get-package-type.js`.\n\n/**\n * @param {string} specifier\n * @param {URL} base\n */\nfunction parsePackageName(specifier, base) {\n  let separatorIndex = specifier.indexOf('/');\n  let validPackageName = true;\n  let isScoped = false;\n  if (specifier[0] === '@') {\n    isScoped = true;\n    if (separatorIndex === -1 || specifier.length === 0) {\n      validPackageName = false;\n    } else {\n      separatorIndex = specifier.indexOf('/', separatorIndex + 1);\n    }\n  }\n\n  const packageName =\n    separatorIndex === -1 ? specifier : specifier.slice(0, separatorIndex);\n\n  // Package name cannot have leading . and cannot have percent-encoding or\n  // \\\\ separators.\n  if (invalidPackageNameRegEx.exec(packageName) !== null) {\n    validPackageName = false;\n  }\n\n  if (!validPackageName) {\n    throw new ERR_INVALID_MODULE_SPECIFIER(\n      specifier,\n      'is not a valid package name',\n      fileURLToPath(base)\n    )\n  }\n\n  const packageSubpath =\n    '.' + (separatorIndex === -1 ? '' : specifier.slice(separatorIndex));\n\n  return {packageName, packageSubpath, isScoped}\n}\n\n/**\n * @param {string} specifier\n * @param {URL} base\n * @param {Set<string> | undefined} conditions\n * @returns {URL}\n */\nfunction packageResolve(specifier, base, conditions) {\n  if (builtinModules.includes(specifier)) {\n    return new URL$1('node:' + specifier)\n  }\n\n  const {packageName, packageSubpath, isScoped} = parsePackageName(\n    specifier,\n    base\n  );\n\n  // ResolveSelf\n  const packageConfig = getPackageScopeConfig(base);\n\n  // Can’t test.\n  /* c8 ignore next 16 */\n  if (packageConfig.exists) {\n    const packageJsonUrl = pathToFileURL(packageConfig.pjsonPath);\n    if (\n      packageConfig.name === packageName &&\n      packageConfig.exports !== undefined &&\n      packageConfig.exports !== null\n    ) {\n      return packageExportsResolve(\n        packageJsonUrl,\n        packageSubpath,\n        packageConfig,\n        base,\n        conditions\n      )\n    }\n  }\n\n  let packageJsonUrl = new URL$1(\n    './node_modules/' + packageName + '/package.json',\n    base\n  );\n  let packageJsonPath = fileURLToPath(packageJsonUrl);\n  /** @type {string} */\n  let lastPath;\n  do {\n    const stat = tryStatSync(packageJsonPath.slice(0, -13));\n    if (!stat.isDirectory()) {\n      lastPath = packageJsonPath;\n      packageJsonUrl = new URL$1(\n        (isScoped ? '../../../../node_modules/' : '../../../node_modules/') +\n          packageName +\n          '/package.json',\n        packageJsonUrl\n      );\n      packageJsonPath = fileURLToPath(packageJsonUrl);\n      continue\n    }\n\n    // Package match.\n    const packageConfig = reader.read(packageJsonPath, {\n      base,\n      specifier\n    });\n    if (packageConfig.exports !== undefined && packageConfig.exports !== null) {\n      return packageExportsResolve(\n        packageJsonUrl,\n        packageSubpath,\n        packageConfig,\n        base,\n        conditions\n      )\n    }\n\n    if (packageSubpath === '.') {\n      return legacyMainResolve(packageJsonUrl, packageConfig, base)\n    }\n\n    return new URL$1(packageSubpath, packageJsonUrl)\n    // Cross-platform root check.\n  } while (packageJsonPath.length !== lastPath.length)\n\n  throw new ERR_MODULE_NOT_FOUND(packageName, fileURLToPath(base), false)\n}\n\n/**\n * @param {string} specifier\n * @returns {boolean}\n */\nfunction isRelativeSpecifier(specifier) {\n  if (specifier[0] === '.') {\n    if (specifier.length === 1 || specifier[1] === '/') return true\n    if (\n      specifier[1] === '.' &&\n      (specifier.length === 2 || specifier[2] === '/')\n    ) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * @param {string} specifier\n * @returns {boolean}\n */\nfunction shouldBeTreatedAsRelativeOrAbsolutePath(specifier) {\n  if (specifier === '') return false\n  if (specifier[0] === '/') return true\n  return isRelativeSpecifier(specifier)\n}\n\n/**\n * The “Resolver Algorithm Specification” as detailed in the Node docs (which is\n * sync and slightly lower-level than `resolve`).\n *\n * @param {string} specifier\n *   `/example.js`, `./example.js`, `../example.js`, `some-package`, `fs`, etc.\n * @param {URL} base\n *   Full URL (to a file) that `specifier` is resolved relative from.\n * @param {Set<string>} [conditions]\n *   Conditions.\n * @param {boolean} [preserveSymlinks]\n *   Keep symlinks instead of resolving them.\n * @returns {URL}\n *   A URL object to the found thing.\n */\nfunction moduleResolve(specifier, base, conditions, preserveSymlinks) {\n  const protocol = base.protocol;\n  const isRemote = protocol === 'http:' || protocol === 'https:';\n  // Order swapped from spec for minor perf gain.\n  // Ok since relative URLs cannot parse as URLs.\n  /** @type {URL | undefined} */\n  let resolved;\n\n  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\n    resolved = new URL$1(specifier, base);\n  } else if (!isRemote && specifier[0] === '#') {\n    resolved = packageImportsResolve(specifier, base, conditions);\n  } else {\n    try {\n      resolved = new URL$1(specifier);\n    } catch {\n      if (!isRemote) {\n        resolved = packageResolve(specifier, base, conditions);\n      }\n    }\n  }\n\n  assert(resolved !== undefined, 'expected to be defined');\n\n  if (resolved.protocol !== 'file:') {\n    return resolved\n  }\n\n  return finalizeResolution(resolved, base, preserveSymlinks)\n}\n\n/**\n * @param {string} specifier\n * @param {URL | undefined} parsed\n * @param {URL | undefined} parsedParentURL\n */\nfunction checkIfDisallowedImport(specifier, parsed, parsedParentURL) {\n  if (parsedParentURL) {\n    // Avoid accessing the `protocol` property due to the lazy getters.\n    const parentProtocol = parsedParentURL.protocol;\n\n    if (parentProtocol === 'http:' || parentProtocol === 'https:') {\n      if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\n        // Avoid accessing the `protocol` property due to the lazy getters.\n        const parsedProtocol = parsed?.protocol;\n\n        // `data:` and `blob:` disallowed due to allowing file: access via\n        // indirection\n        if (\n          parsedProtocol &&\n          parsedProtocol !== 'https:' &&\n          parsedProtocol !== 'http:'\n        ) {\n          throw new ERR_NETWORK_IMPORT_DISALLOWED(\n            specifier,\n            parsedParentURL,\n            'remote imports cannot import from a local location.'\n          )\n        }\n\n        return {url: parsed?.href || ''}\n      }\n\n      if (builtinModules.includes(specifier)) {\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\n          specifier,\n          parsedParentURL,\n          'remote imports cannot import from a local location.'\n        )\n      }\n\n      throw new ERR_NETWORK_IMPORT_DISALLOWED(\n        specifier,\n        parsedParentURL,\n        'only relative and absolute specifiers are supported.'\n      )\n    }\n  }\n}\n\n// Note: this is from:\n// <https://github.com/nodejs/node/blob/3e74590/lib/internal/url.js#L687>\n/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * @template {unknown} Value\n * @param {Value} self\n * @returns {Value is URL}\n */\nfunction isURL(self) {\n  return Boolean(\n    self &&\n      typeof self === 'object' &&\n      'href' in self &&\n      typeof self.href === 'string' &&\n      'protocol' in self &&\n      typeof self.protocol === 'string' &&\n      self.href &&\n      self.protocol\n  )\n}\n\n/**\n * Validate user-input in `context` supplied by a custom loader.\n *\n * @param {unknown} parentURL\n * @returns {asserts parentURL is URL | string | undefined}\n */\nfunction throwIfInvalidParentURL(parentURL) {\n  if (parentURL === undefined) {\n    return // Main entry point, so no parent\n  }\n\n  if (typeof parentURL !== 'string' && !isURL(parentURL)) {\n    throw new codes.ERR_INVALID_ARG_TYPE(\n      'parentURL',\n      ['string', 'URL'],\n      parentURL\n    )\n  }\n}\n\n/**\n * @param {string} specifier\n * @param {{parentURL?: string, conditions?: Array<string>}} context\n * @returns {{url: string, format?: string | null}}\n */\nfunction defaultResolve(specifier, context = {}) {\n  const {parentURL} = context;\n  assert(parentURL !== undefined, 'expected `parentURL` to be defined');\n  throwIfInvalidParentURL(parentURL);\n\n  /** @type {URL | undefined} */\n  let parsedParentURL;\n  if (parentURL) {\n    try {\n      parsedParentURL = new URL$1(parentURL);\n    } catch {\n      // Ignore exception\n    }\n  }\n\n  /** @type {URL | undefined} */\n  let parsed;\n  try {\n    parsed = shouldBeTreatedAsRelativeOrAbsolutePath(specifier)\n      ? new URL$1(specifier, parsedParentURL)\n      : new URL$1(specifier);\n\n    // Avoid accessing the `protocol` property due to the lazy getters.\n    const protocol = parsed.protocol;\n\n    if (protocol === 'data:') {\n      return {url: parsed.href, format: null}\n    }\n  } catch {\n    // Ignore exception\n  }\n\n  // There are multiple deep branches that can either throw or return; instead\n  // of duplicating that deeply nested logic for the possible returns, DRY and\n  // check for a return. This seems the least gnarly.\n  const maybeReturn = checkIfDisallowedImport(\n    specifier,\n    parsed,\n    parsedParentURL\n  );\n\n  if (maybeReturn) return maybeReturn\n\n  // This must come after checkIfDisallowedImport\n  if (parsed && parsed.protocol === 'node:') return {url: specifier}\n\n  const conditions = getConditionsSet(context.conditions);\n\n  const url = moduleResolve(specifier, new URL$1(parentURL), conditions, false);\n\n  return {\n    // Do NOT cast `url` to a string: that will work even when there are real\n    // problems, silencing them\n    url: url.href,\n    format: defaultGetFormatWithoutErrors(url, {parentURL})\n  }\n}\n\n/**\n * @typedef {import('./lib/errors.js').ErrnoException} ErrnoException\n */\n\n\n/**\n * Match `import.meta.resolve` except that `parent` is required (you can pass\n * `import.meta.url`).\n *\n * @param {string} specifier\n *   The module specifier to resolve relative to parent\n *   (`/example.js`, `./example.js`, `../example.js`, `some-package`, `fs`,\n *   etc).\n * @param {string} parent\n *   The absolute parent module URL to resolve from.\n *   You must pass `import.meta.url` or something else.\n * @returns {string}\n *   Returns a string to a full `file:`, `data:`, or `node:` URL\n *   to the found thing.\n */\nfunction resolve(specifier, parent) {\n  if (!parent) {\n    throw new Error(\n      'Please pass `parent`: `import-meta-resolve` cannot ponyfill that'\n    )\n  }\n\n  try {\n    return defaultResolve(specifier, {parentURL: parent}).url\n  } catch (error) {\n    // See: <https://github.com/nodejs/node/blob/45f5c9b/lib/internal/modules/esm/initialize_import_meta.js#L34>\n    const exception = /** @type {ErrnoException} */ (error);\n\n    if (\n      (exception.code === 'ERR_UNSUPPORTED_DIR_IMPORT' ||\n        exception.code === 'ERR_MODULE_NOT_FOUND') &&\n      typeof exception.url === 'string'\n    ) {\n      return exception.url\n    }\n\n    throw error\n  }\n}\n\n/**\r\n * Provides a custom error for Node to combine CJS and ESM module not found errors.\r\n */\r\nclass ModuleLoadError extends Error\r\n{\r\n   /**\r\n    * @param {object} options - Options object.\r\n    *\r\n    * @param {string} options.message - Error message.\r\n    *\r\n    * @param {string} options.code - Error code.\r\n    */\r\n   constructor({ message, code })\r\n   {\r\n      super(`[${code}] ${message}`);\r\n      this.name = 'ModuleLoadError';\r\n      this.code = code;\r\n   }\r\n}\n\nconst requireMod = module.createRequire(import.meta.url);\r\n\r\n/**\r\n * Provides universal loading of ES Modules / CommonJS on Node and ES Modules in the browser.\r\n *\r\n * {@link ModuleLoaderObj} is returned with the loaded module along with metadata that describes the loading mechanism.\r\n */\r\nclass ModuleLoader\r\n{\r\n   /**\r\n    * URL matching RegExp\r\n    *\r\n    * @type {RegExp}\r\n    */\r\n   static #URL_REGEX = /^(https?:\\/\\/|file:\\/\\/)/;\r\n\r\n   /**\r\n    * @template M, E\r\n    *\r\n    * Loads an ES Module via import dynamic or CommonJS via require in Node passing back an object containing info\r\n    * about the loading process.\r\n    *\r\n    * @param {object}      options - Options object.\r\n    *\r\n    * @param {string|URL}  options.modulepath - A module name, file path, or URL.\r\n    *\r\n    * @param {(M) => E}    [options.resolveModule] - An optional function which resolves the import to set `instance`.\r\n    *\r\n    * @returns {Promise<ModuleLoaderObj<M, E>>} The module / instance and data about the loading process.\r\n    */\r\n   static async load({ modulepath, resolveModule = void 0 })\r\n   {\r\n      if (!(modulepath instanceof URL) && typeof modulepath !== 'string')\r\n      {\r\n         throw new TypeError(`'modulepath' is not a string or URL`);\r\n      }\r\n\r\n      if (resolveModule !== void 0 && typeof resolveModule !== 'function')\r\n      {\r\n         throw new TypeError(`'resolveModule' is not a function`);\r\n      }\r\n\r\n      const { filepath, isESM, type, loadpath } = ModuleLoader.#resolvePath(modulepath);\r\n\r\n      try\r\n      {\r\n         const module = isESM ? await import(url.pathToFileURL(filepath)) : requireMod(filepath);\r\n\r\n         const instance = resolveModule !== void 0 ? resolveModule(module) : module;\r\n\r\n         return { filepath, instance, loadpath, isESM, module, modulepath, type };\r\n      }\r\n      catch (error)\r\n      {\r\n         // The CJS and ESM loaders of Node have different error codes. Collect both of these as one error with clear\r\n         // stack trace from ModuleLoader.\r\n         if (error.code === 'MODULE_NOT_FOUND' || error.code === 'ERR_MODULE_NOT_FOUND')\r\n         {\r\n            throw new ModuleLoadError({\r\n               message: `${isESM ? 'import()' : 'require'} failed to load ${loadpath}`,\r\n               code: 'MODULE_NOT_FOUND'\r\n            });\r\n         }\r\n\r\n         throw error;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * For `.js` files uses `getPackageType` to determine if `type` is set to `module` in associated `package.json`. If\r\n    * the `modulePath` provided ends in `.mjs` it is assumed to be ESM.\r\n    *\r\n    * @param {string} filepath - File path to load.\r\n    *\r\n    * @returns {boolean} If the filepath is an ES Module.\r\n    */\r\n   static #isPathModule(filepath)\r\n   {\r\n      const extension = path.extname(filepath).toLowerCase();\r\n\r\n      switch (extension)\r\n      {\r\n         case '.js':\r\n            return getPackageType$1({ filepath }) === 'module';\r\n\r\n         case '.mjs':\r\n            return true;\r\n\r\n         default:\r\n            return false;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * @param {*}  value - Value to test.\r\n    *\r\n    * @returns {boolean} Is the value a URL.\r\n    */\r\n   static #isURL(value)\r\n   {\r\n      return value instanceof URL || value.match(ModuleLoader.#URL_REGEX);\r\n   }\r\n\r\n   /**\r\n    * Resolves a module path first by `require.resolve` to allow Node to resolve an actual module. If this fails then\r\n    * the `modulepath` is resolved as a file path.\r\n    *\r\n    * @param {string|URL}  modulepath - A module name, file path, URL to load.\r\n    *\r\n    * @returns {{filepath: string, isESM: boolean, type: string, loadpath: string}} An object including file path and\r\n    *                                                                               whether the module is ESM.\r\n    */\r\n   static #resolvePath(modulepath)\r\n   {\r\n      let filepath, isESM;\r\n      let type = ModuleLoader.#isURL(modulepath) ? 'url' : 'module';\r\n\r\n      let loadpath = modulepath;\r\n\r\n      try\r\n      {\r\n         // The `import-meta-resolve` package is more heavyweight, but does work more reliably.\r\n         filepath = url.fileURLToPath(resolve(loadpath, import.meta.url));\r\n\r\n         // `import-meta-resolve` no longer throws an error for when the filepath does not exist. To support relative\r\n         // filepath loading do check if the returned file path exists and if not throw locally.\r\n         const stat = fs.statSync(filepath);\r\n         /* c8 ignore next 1 */\r\n         if (!stat.isFile()) { throw new Error(); }\r\n\r\n         isESM = ModuleLoader.#isPathModule(filepath);\r\n      }\r\n      catch (error)\r\n      {\r\n         if (ModuleLoader.#isURL(modulepath))\r\n         {\r\n            filepath = url.fileURLToPath(modulepath);\r\n            type = 'url';\r\n\r\n            /* c8 ignore next 1 */\r\n            loadpath = modulepath instanceof URL ? modulepath.toString() : modulepath;\r\n         }\r\n         else\r\n         {\r\n            filepath = path.resolve(modulepath);\r\n            type = 'path';\r\n\r\n            loadpath = filepath;\r\n         }\r\n\r\n         isESM = ModuleLoader.#isPathModule(filepath);\r\n      }\r\n\r\n      type = `${isESM ? 'import' : 'require'}-${type}`;\r\n\r\n      return { filepath, isESM, type, loadpath };\r\n   }\r\n}\r\n\r\n/**\r\n * @template M, E\r\n *\r\n * @typedef {object} ModuleLoaderObj The object passed back from `ModuleLoader.load`.\r\n *\r\n * @property {string}      filepath If available the file path on Node otherwise this will match `loadpath` in the\r\n * browser.\r\n *\r\n * @property {E}           instance Either the module itself or any particular export the `resolveModule` function\r\n * selects.\r\n *\r\n * @property {boolean}     isESM Indicates if the import was an ES Module.\r\n *\r\n * @property {string}      loadpath A string representation of the module path being loaded.\r\n *\r\n * @property {M}           module The direct module import.\r\n *\r\n * @property {string|URL}  modulepath The initial string or URL sent to ModuleLoader.\r\n *\r\n * @property {(\r\n *    'import-module' |\r\n *    'import-path' |\r\n *    'import-url' |\r\n *    'require-module' |\r\n *    'require-path' |\r\n *    'require-url'\r\n * )} type The type and how the module was loaded.\r\n */\n\nexport { ModuleLoadError, ModuleLoader };\n//# sourceMappingURL=ModuleLoader.js.map\n","/**\r\n * Defines a class holding the data associated with a plugin including its instance.\r\n */\r\nexport class PluginEntry\r\n{\r\n   /**\r\n    * Data describing the plugin, manager, and optional module data.\r\n    *\r\n    * @type {import('.').PluginData}\r\n    */\r\n   #data;\r\n\r\n   /**\r\n    * The plugin enabled state.\r\n    *\r\n    * @type {boolean}\r\n    */\r\n   #enabled;\r\n\r\n   /**\r\n    * The plugin name.\r\n    *\r\n    * @type {string}\r\n    */\r\n   #name;\r\n\r\n   /**\r\n    * Any stored import.meta data.\r\n    *\r\n    * @type {object}\r\n    */\r\n   #importmeta;\r\n\r\n   /**\r\n    * The loaded plugin instance.\r\n    *\r\n    * @type {object}\r\n    */\r\n   #instance;\r\n\r\n   /**\r\n    * An EventbusProxy associated with the plugin wrapping the plugin manager eventbus.\r\n    *\r\n    * @type {import('#runtime/plugin/manager/eventbus').EventbusProxy}\r\n    */\r\n   #eventbusProxy;\r\n\r\n   /**\r\n    * Stores the proxied event names, callback functions, context and guarded state when this plugin is disabled.\r\n    *\r\n    * @type {Array<[string, Function, object, import('#runtime/plugin/manager/eventbus').EventOptionsOut]>}\r\n    */\r\n   #events;\r\n\r\n   /**\r\n    * Instantiates a PluginEntry.\r\n    *\r\n    * @param {string}      name - The plugin name.\r\n    *\r\n    * @param {import('.').PluginData}  data - Describes the plugin, manager, and optional module data.\r\n    *\r\n    * @param {object}      instance - The loaded plugin instance.\r\n    *\r\n    * @param {import('#runtime/plugin/manager/eventbus').EventbusProxy}  eventbusProxy - The EventbusProxy associated with the plugin\r\n    *        wrapping the plugin manager eventbus.\r\n    */\r\n   constructor(name, data, instance, eventbusProxy = void 0)\r\n   {\r\n      this.#data = data;\r\n\r\n      this.#enabled = true;\r\n\r\n      this.#name = name;\r\n\r\n      this.#instance = instance;\r\n\r\n      this.#eventbusProxy = eventbusProxy;\r\n   }\r\n\r\n   /**\r\n    * Get plugin data.\r\n    *\r\n    * @returns {import('.').PluginData} The associated PluginData.\r\n    */\r\n   get data() { return this.#data; }\r\n\r\n   /**\r\n    * Get enabled.\r\n    *\r\n    * @returns {boolean} Current enabled state.\r\n    */\r\n   get enabled() { return this.#enabled; }\r\n\r\n   /**\r\n    * Get any stored import.meta object.\r\n    *\r\n    * @returns {undefined|object} Any set import.meta info.\r\n    */\r\n   get importmeta() { return this.#importmeta; }\r\n\r\n   /**\r\n    * Reset will cleanup most resources for remove / reload. 'remove' should manually destroy #eventbusProxy.\r\n    */\r\n   reset()\r\n   {\r\n      try\r\n      {\r\n         this.#events = void 0;\r\n         this.#importmeta = void 0;\r\n\r\n         // Automatically remove any potential reference to a stored event proxy instance.\r\n         delete this.#instance._eventbus;\r\n      }\r\n      catch (err) { /* noop */ }\r\n   }\r\n\r\n   /**\r\n    * Set enabled.\r\n    *\r\n    * @param {boolean} enabled - New enabled state.\r\n    */\r\n   set enabled(enabled)\r\n   {\r\n      this.#enabled = enabled;\r\n\r\n      // If enabled and there are stored events then turn them on with the eventbus proxy.\r\n      if (enabled)\r\n      {\r\n         if (this.#eventbusProxy !== void 0 && Array.isArray(this.#events))\r\n         {\r\n            for (const event of this.#events)\r\n            {\r\n               this.#eventbusProxy.on(...event);\r\n            }\r\n\r\n            this.#events = void 0;\r\n         }\r\n      }\r\n      else // Store any proxied events and unregister the proxied events.\r\n      {\r\n         if (this.#eventbusProxy !== void 0)\r\n         {\r\n            this.#events = Array.from(this.#eventbusProxy.proxyEntries());\r\n            this.#eventbusProxy.off();\r\n         }\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Get associated EventbusProxy.\r\n    *\r\n    * @returns {import('#runtime/plugin/manager/eventbus').EventbusProxy} Associated EventbusProxy.\r\n    */\r\n   get eventbusProxy() { return this.#eventbusProxy; }\r\n\r\n   /**\r\n    * Get plugin instance.\r\n    *\r\n    * @returns {object} The plugin instance.\r\n    */\r\n   get instance() { return this.#instance; }\r\n\r\n   /**\r\n    * Get plugin name.\r\n    *\r\n    * @returns {string} Plugin name.\r\n    */\r\n   get name() { return this.#name; }\r\n\r\n\r\n   /**\r\n    * Set associated EventbusProxy.\r\n    *\r\n    * @param {import('#runtime/plugin/manager/eventbus').EventbusProxy} eventbusProxy - EventbusProxy instance to associate.\r\n    */\r\n   set eventbusProxy(eventbusProxy) { this.#eventbusProxy = eventbusProxy; }\r\n\r\n   /**\r\n    * Set any associated import.meta data.\r\n    *\r\n    * @param {object} importmeta - import.meta data.\r\n    */\r\n   set importmeta(importmeta) { this.#importmeta = importmeta; }\r\n\r\n   /**\r\n    * Set plugin instance.\r\n    *\r\n    * @param {object} instance - The plugin instance.\r\n    */\r\n   set instance(instance) { this.#instance = instance; }\r\n}\r\n","function set(obj, key, val) {\n\tif (typeof val.value === 'object') val.value = klona(val.value);\n\tif (!val.enumerable || val.get || val.set || !val.configurable || !val.writable || key === '__proto__') {\n\t\tObject.defineProperty(obj, key, val);\n\t} else obj[key] = val.value;\n}\n\nfunction klona(x) {\n\tif (typeof x !== 'object') return x;\n\n\tvar i=0, k, list, tmp, str=Object.prototype.toString.call(x);\n\n\tif (str === '[object Object]') {\n\t\ttmp = Object.create(x.__proto__ || null);\n\t} else if (str === '[object Array]') {\n\t\ttmp = Array(x.length);\n\t} else if (str === '[object Set]') {\n\t\ttmp = new Set;\n\t\tx.forEach(function (val) {\n\t\t\ttmp.add(klona(val));\n\t\t});\n\t} else if (str === '[object Map]') {\n\t\ttmp = new Map;\n\t\tx.forEach(function (val, key) {\n\t\t\ttmp.set(klona(key), klona(val));\n\t\t});\n\t} else if (str === '[object Date]') {\n\t\ttmp = new Date(+x);\n\t} else if (str === '[object RegExp]') {\n\t\ttmp = new RegExp(x.source, x.flags);\n\t} else if (str === '[object DataView]') {\n\t\ttmp = new x.constructor( klona(x.buffer) );\n\t} else if (str === '[object ArrayBuffer]') {\n\t\ttmp = x.slice(0);\n\t} else if (str.slice(-6) === 'Array]') {\n\t\t// ArrayBuffer.isView(x)\n\t\t// ~> `new` bcuz `Buffer.slice` => ref\n\t\ttmp = new x.constructor(x);\n\t}\n\n\tif (tmp) {\n\t\tfor (list=Object.getOwnPropertySymbols(x); i < list.length; i++) {\n\t\t\tset(tmp, list[i], Object.getOwnPropertyDescriptor(x, list[i]));\n\t\t}\n\n\t\tfor (i=0, list=Object.getOwnPropertyNames(x); i < list.length; i++) {\n\t\t\tif (Object.hasOwnProperty.call(tmp, k=list[i]) && tmp[k] === x[k]) continue;\n\t\t\tset(tmp, k, Object.getOwnPropertyDescriptor(x, k));\n\t\t}\n\t}\n\n\treturn tmp || x;\n}\n\n/**\n * Provides common object manipulation utilities including depth traversal, obtaining accessors, safely setting values /\n * equality tests, and validation.\n */\nconst s_TAG_OBJECT = '[object Object]';\nconst s_TAG_MAP = '[object Map]';\nconst s_TAG_SET = '[object Set]';\nconst s_TAG_STRING = '[object String]';\n/**\n * Freezes all entries traversed that are objects including entries in arrays.\n *\n * @param {object | []}   data - An object or array.\n *\n * @param {Set<string>}   [skipFreezeKeys] - A Set of strings indicating keys of objects to not freeze.\n *\n * @returns {object | []} The frozen object.\n */\nfunction deepFreeze(data, skipFreezeKeys) {\n    /* c8 ignore next 1 */\n    if (typeof data !== 'object') {\n        throw new TypeError(`'data' is not an 'object'.`);\n    }\n    /* c8 ignore next 4 */\n    if (skipFreezeKeys !== void 0 && !(skipFreezeKeys instanceof Set)) {\n        throw new TypeError(`'skipFreezeKeys' is not an 'Set'.`);\n    }\n    return _deepFreeze(data, skipFreezeKeys);\n}\n/**\n * Recursively deep merges all source objects into the target object in place. Like `Object.assign` if you provide `{}`\n * as the target a copy is produced. If the target and source property are object literals they are merged.\n * Deleting keys is supported by specifying a property starting with `-=`.\n *\n * @param {object}      target - Target object.\n *\n * @param {...object}   sourceObj - One or more source objects.\n *\n * @returns {object}    Target object.\n */\nfunction deepMerge(target = {}, ...sourceObj) {\n    if (Object.prototype.toString.call(target) !== s_TAG_OBJECT) {\n        throw new TypeError(`deepMerge error: 'target' is not an 'object'.`);\n    }\n    for (let cntr = 0; cntr < sourceObj.length; cntr++) {\n        if (Object.prototype.toString.call(sourceObj[cntr]) !== s_TAG_OBJECT) {\n            throw new TypeError(`deepMerge error: 'sourceObj[${cntr}]' is not an 'object'.`);\n        }\n    }\n    return _deepMerge(target, ...sourceObj);\n}\n/**\n * Performs a naive depth traversal of an object / array. The data structure _must not_ have circular references.\n * The result of the callback function is used to modify in place the given data.\n *\n * @param {object | []}   data - An object or array.\n *\n * @param {(any) => any}  func - A callback function to process leaf values in children arrays or object members.\n *\n * @param {boolean}       modify - If true then the result of the callback function is used to modify in place\n *                                  the given data.\n *\n * @returns {*} The data object.\n */\nfunction depthTraverse(data, func, modify = false) {\n    /* c8 ignore next 1 */\n    if (typeof data !== 'object') {\n        throw new TypeError(`'data' is not an 'object'.`);\n    }\n    /* c8 ignore next 1 */\n    if (typeof func !== 'function') {\n        throw new TypeError(`'func' is not a 'function'.`);\n    }\n    return _depthTraverse(data, func, modify);\n}\n/**\n * Returns a list of accessor keys by traversing the given object.\n *\n * @param {object}   data - An object to traverse for accessor keys.\n *\n * @returns {string[]} Accessor list.\n */\nfunction getAccessorList(data) {\n    if (typeof data !== 'object') {\n        throw new TypeError(`getAccessorList error: 'data' is not an 'object'.`);\n    }\n    return _getAccessorList(data);\n}\n/**\n * Provides a method to determine if the passed in Svelte component has a getter & setter accessor.\n *\n * @param {object}   object - An object.\n *\n * @param {string}   accessor - Accessor to test.\n *\n * @returns {boolean} Whether the component has the getter and setter for accessor.\n */\nfunction hasAccessor(object, accessor) {\n    if (typeof object !== 'object' || object === null || object === void 0) {\n        return false;\n    }\n    // Check for instance accessor.\n    const iDescriptor = Object.getOwnPropertyDescriptor(object, accessor);\n    if (iDescriptor !== void 0 && iDescriptor.get !== void 0 && iDescriptor.set !== void 0) {\n        return true;\n    }\n    // Walk parent prototype chain. Check for descriptor at each prototype level.\n    for (let o = Object.getPrototypeOf(object); o; o = Object.getPrototypeOf(o)) {\n        const descriptor = Object.getOwnPropertyDescriptor(o, accessor);\n        if (descriptor !== void 0 && descriptor.get !== void 0 && descriptor.set !== void 0) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Provides a method to determine if the passed in Svelte component has a getter accessor.\n *\n * @param {object}   object - An object.\n *\n * @param {string}   accessor - Accessor to test.\n *\n * @returns {boolean} Whether the component has the getter for accessor.\n */\nfunction hasGetter(object, accessor) {\n    if (typeof object !== 'object' || object === null || object === void 0) {\n        return false;\n    }\n    // Check for instance accessor.\n    const iDescriptor = Object.getOwnPropertyDescriptor(object, accessor);\n    if (iDescriptor !== void 0 && iDescriptor.get !== void 0) {\n        return true;\n    }\n    // Walk parent prototype chain. Check for descriptor at each prototype level.\n    for (let o = Object.getPrototypeOf(object); o; o = Object.getPrototypeOf(o)) {\n        const descriptor = Object.getOwnPropertyDescriptor(o, accessor);\n        if (descriptor !== void 0 && descriptor.get !== void 0) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Returns whether the target is or has the given prototype walking up the prototype chain.\n *\n * @param {unknown}  target - Any target to test.\n *\n * @param {new (...args: any[]) => any} Prototype - Prototype function / class constructor to find.\n *\n * @returns {boolean} Target matches prototype.\n */\nfunction hasPrototype(target, Prototype) {\n    /* c8 ignore next */\n    if (typeof target !== 'function') {\n        return false;\n    }\n    if (target === Prototype) {\n        return true;\n    }\n    // Walk parent prototype chain. Check for descriptor at each prototype level.\n    for (let proto = Object.getPrototypeOf(target); proto; proto = Object.getPrototypeOf(proto)) {\n        if (proto === Prototype) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Provides a method to determine if the passed in Svelte component has a setter accessor.\n *\n * @param {object}   object - An object.\n *\n * @param {string}   accessor - Accessor to test.\n *\n * @returns {boolean} Whether the component has the setter for accessor.\n */\nfunction hasSetter(object, accessor) {\n    if (typeof object !== 'object' || object === null || object === void 0) {\n        return false;\n    }\n    // Check for instance accessor.\n    const iDescriptor = Object.getOwnPropertyDescriptor(object, accessor);\n    if (iDescriptor !== void 0 && iDescriptor.set !== void 0) {\n        return true;\n    }\n    // Walk parent prototype chain. Check for descriptor at each prototype level.\n    for (let o = Object.getPrototypeOf(object); o; o = Object.getPrototypeOf(o)) {\n        const descriptor = Object.getOwnPropertyDescriptor(o, accessor);\n        if (descriptor !== void 0 && descriptor.set !== void 0) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Tests for whether an object is async iterable.\n *\n * @param {unknown} value - Any value.\n *\n * @returns {boolean} Whether value is async iterable.\n */\nfunction isAsyncIterable(value) {\n    if (typeof value !== 'object' || value === null || value === void 0) {\n        return false;\n    }\n    return Symbol.asyncIterator in value;\n}\n/**\n * Tests for whether an object is iterable.\n *\n * @param {unknown} value - Any value.\n *\n * @returns {boolean} Whether object is iterable.\n */\nfunction isIterable(value) {\n    if (value === null || value === void 0 || typeof value !== 'object') {\n        return false;\n    }\n    return Symbol.iterator in value;\n}\n/**\n * Tests for whether object is not null, typeof object, and not an array.\n *\n * @param {unknown} value - Any value.\n *\n * @returns {boolean} Is it an object.\n */\nfunction isObject(value) {\n    return value !== null && typeof value === 'object' && !Array.isArray(value);\n}\n/**\n * Tests for whether the given value is a plain object.\n *\n * An object is plain if it is created by either: `{}`, `new Object()` or `Object.create(null)`.\n *\n * @param {unknown} value - Any value\n *\n * @returns {boolean} Is it a plain object.\n */\nfunction isPlainObject(value) {\n    if (Object.prototype.toString.call(value) !== s_TAG_OBJECT) {\n        return false;\n    }\n    const prototype = Object.getPrototypeOf(value);\n    return prototype === null || prototype === Object.prototype;\n}\n/**\n * Safely returns keys on an object or an empty array if not an object.\n *\n * @param {object} object - An object.\n *\n * @returns {string[]}  Object keys or empty array.\n */\nfunction objectKeys(object) {\n    return isObject(object) ? Object.keys(object) : [];\n}\n/**\n * Safely returns an objects size. Note for String objects unicode is not taken into consideration.\n *\n * @param {any} object - Any value, but size returned for object / Map / Set / arrays / strings.\n *\n * @returns {number} Size of object.\n */\nfunction objectSize(object) {\n    if (object === void 0 || object === null || typeof object !== 'object') {\n        return 0;\n    }\n    const tag = Object.prototype.toString.call(object);\n    if (tag === s_TAG_MAP || tag === s_TAG_SET) {\n        return object.size;\n    }\n    if (tag === s_TAG_STRING) {\n        return object.length;\n    }\n    return Object.keys(object).length;\n}\n/**\n * Provides a way to safely access an objects data / entries given an accessor string which describes the\n * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n * to walk.\n *\n * @param {object}   data - An object to access entry data.\n *\n * @param {string}   accessor - A string describing the entries to access with keys separated by `.`.\n *\n * @param {any}      [defaultValue] - (Optional) A default value to return if an entry for accessor is not found.\n *\n * @returns {object} The data object.\n */\nfunction safeAccess(data, accessor, defaultValue) {\n    if (typeof data !== 'object') {\n        return defaultValue;\n    }\n    if (typeof accessor !== 'string') {\n        return defaultValue;\n    }\n    const access = accessor.split('.');\n    // Walk through the given object by the accessor indexes.\n    for (let cntr = 0; cntr < access.length; cntr++) {\n        // If the next level of object access is undefined or null then return the empty string.\n        if (typeof data[access[cntr]] === 'undefined' || data[access[cntr]] === null) {\n            return defaultValue;\n        }\n        data = data[access[cntr]];\n    }\n    return data;\n}\n/**\n * Provides a way to safely batch set an objects data / entries given an array of accessor strings which describe the\n * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n * to walk. If value is an object the accessor will be used to access a target value from `value` which is\n * subsequently set to `data` by the given operation. If `value` is not an object it will be used as the target\n * value to set across all accessors.\n *\n * @param {object}   data - An object to access entry data.\n *\n * @param {string[]} accessors - A string describing the entries to access.\n *\n * @param {any}      value - A new value to set if an entry for accessor is found.\n *\n * @param {SafeSetOperation}   [operation='set'] - Operation to perform including: 'add', 'div', 'mult', 'set',\n *        'set-undefined', 'sub'.\n *\n * @param {any}      [defaultAccessValue=0] - A new value to set if an entry for accessor is found.\n *\n * @param {boolean}  [createMissing=true] - If true missing accessor entries will be created as objects automatically.\n */\nfunction safeBatchSet(data, accessors, value, operation = 'set', defaultAccessValue = 0, createMissing = true) {\n    if (typeof data !== 'object') {\n        throw new TypeError(`safeBatchSet error: 'data' is not an 'object'.`);\n    }\n    if (!Array.isArray(accessors)) {\n        throw new TypeError(`safeBatchSet error: 'accessors' is not an 'array'.`);\n    }\n    if (typeof value === 'object') {\n        accessors.forEach((accessor) => {\n            const targetValue = safeAccess(value, accessor, defaultAccessValue);\n            safeSet(data, accessor, targetValue, operation, createMissing);\n        });\n    }\n    else {\n        accessors.forEach((accessor) => {\n            safeSet(data, accessor, value, operation, createMissing);\n        });\n    }\n}\n/**\n * Compares a source object and values of entries against a target object. If the entries in the source object match\n * the target object then `true` is returned otherwise `false`. If either object is undefined or null then false\n * is returned.\n *\n * @param {object}   source - Source object.\n *\n * @param {object}   target - Target object.\n *\n * @returns {boolean} True if equal.\n */\nfunction safeEqual(source, target) {\n    if (typeof source === 'undefined' || source === null || typeof target === 'undefined' || target === null) {\n        return false;\n    }\n    const sourceAccessors = getAccessorList(source);\n    for (let cntr = 0; cntr < sourceAccessors.length; cntr++) {\n        const accessor = sourceAccessors[cntr];\n        const sourceObjectValue = safeAccess(source, accessor);\n        const targetObjectValue = safeAccess(target, accessor);\n        if (sourceObjectValue !== targetObjectValue) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Provides a way to safely set an objects data / entries given an accessor string which describes the\n * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n * to walk.\n *\n * @param {object}   data - An object to access entry data.\n *\n * @param {string}   accessor - A string describing the entries to access.\n *\n * @param {any}      value - A new value to set if an entry for accessor is found.\n *\n * @param {SafeSetOperation}   [operation='set'] - Operation to perform including: 'add', 'div', 'mult', 'set',\n *        'set-undefined', 'sub'.\n *\n * @param {boolean}  [createMissing=true] - If true missing accessor entries will be created as objects\n *        automatically.\n *\n * @returns {boolean} True if successful.\n */\nfunction safeSet(data, accessor, value, operation = 'set', createMissing = true) {\n    if (typeof data !== 'object') {\n        throw new TypeError(`safeSet error: 'data' is not an 'object'.`);\n    }\n    if (typeof accessor !== 'string') {\n        throw new TypeError(`safeSet error: 'accessor' is not a 'string'.`);\n    }\n    const access = accessor.split('.');\n    // Walk through the given object by the accessor indexes.\n    for (let cntr = 0; cntr < access.length; cntr++) {\n        // If data is an array perform validation that the accessor is a positive integer otherwise quit.\n        if (Array.isArray(data)) {\n            const number = (+access[cntr]);\n            if (!Number.isInteger(number) || number < 0) {\n                return false;\n            }\n        }\n        if (cntr === access.length - 1) {\n            switch (operation) {\n                case 'add':\n                    data[access[cntr]] += value;\n                    break;\n                case 'div':\n                    data[access[cntr]] /= value;\n                    break;\n                case 'mult':\n                    data[access[cntr]] *= value;\n                    break;\n                case 'set':\n                    data[access[cntr]] = value;\n                    break;\n                case 'set-undefined':\n                    if (typeof data[access[cntr]] === 'undefined') {\n                        data[access[cntr]] = value;\n                    }\n                    break;\n                case 'sub':\n                    data[access[cntr]] -= value;\n                    break;\n            }\n        }\n        else {\n            // If createMissing is true and the next level of object access is undefined then create a new object entry.\n            if (createMissing && typeof data[access[cntr]] === 'undefined') {\n                data[access[cntr]] = {};\n            }\n            // Abort if the next level is null or not an object and containing a value.\n            if (data[access[cntr]] === null || typeof data[access[cntr]] !== 'object') {\n                return false;\n            }\n            data = data[access[cntr]];\n        }\n    }\n    return true;\n}\n/**\n * Performs bulk setting of values to the given data object.\n *\n * @param {object}            data - The data object to set data.\n *\n * @param {Record<string, any>}  accessorValues - Object of accessor keys to values to set.\n *\n * @param {SafeSetOperation}  [operation='set'] - Operation to perform including: 'add', 'div', 'mult', 'set', 'sub';\n *        default (`set`).\n *\n * @param {boolean}           [createMissing=true] - If true missing accessor entries will be created as objects\n *        automatically.\n */\nfunction safeSetAll(data, accessorValues, operation = 'set', createMissing = true) {\n    if (typeof data !== 'object') {\n        throw new TypeError(`safeSetAll error: 'data' is not an 'object'.`);\n    }\n    if (typeof accessorValues !== 'object') {\n        throw new TypeError(`safeSetAll error: 'accessorValues' is not an 'object'.`);\n    }\n    for (const accessor of Object.keys(accessorValues)) {\n        if (!Object.prototype.hasOwnProperty.call(accessorValues, accessor)) {\n            continue;\n        }\n        safeSet(data, accessor, accessorValues[accessor], operation, createMissing);\n    }\n}\n/**\n * Performs bulk validation of data given an object, `validationData`, which describes all entries to test.\n *\n * @param {object}                           data - The data object to test.\n *\n * @param {Record<string, ValidationEntry>}  validationData - Key is the accessor / value is a validation entry.\n *\n * @param {string}                           [dataName='data'] - Optional name of data.\n *\n * @returns {boolean} True if validation passes otherwise an exception is thrown.\n */\nfunction validate(data, validationData = {}, dataName = 'data') {\n    if (typeof data !== 'object') {\n        throw new TypeError(`validate error: '${dataName}' is not an 'object'.`);\n    }\n    if (typeof validationData !== 'object') {\n        throw new TypeError(`validate error: 'validationData' is not an 'object'.`);\n    }\n    let result;\n    for (const key of Object.keys(validationData)) {\n        if (!Object.prototype.hasOwnProperty.call(validationData, key)) {\n            continue;\n        }\n        const entry = validationData[key];\n        switch (entry.test) {\n            case 'array':\n                result = validateArray(data, key, entry, dataName);\n                break;\n            case 'entry':\n                result = validateEntry(data, key, entry, dataName);\n                break;\n            case 'entry|array':\n                result = validateEntryOrArray(data, key, entry, dataName);\n                break;\n        }\n    }\n    return result;\n}\n/**\n * Validates all array entries against potential type and expected tests.\n *\n * @param {object}            data - The data object to test.\n *\n * @param {string}            accessor - A string describing the entries to access.\n *\n * @param {ValidationEntry}   entry - Validation entry object\n *\n * @param {string}            [dataName='data'] - Optional name of data.\n *\n * @returns {boolean} True if validation passes otherwise an exception is thrown.\n */\nfunction validateArray(data, accessor, entry, dataName = 'data') {\n    const valEntry = Object.assign({ required: true, error: true }, entry);\n    const dataArray = safeAccess(data, accessor);\n    // A non-required entry is missing so return without validation.\n    if (!valEntry?.required && typeof dataArray === 'undefined') {\n        return true;\n    }\n    if (!Array.isArray(dataArray)) {\n        if (valEntry.error) {\n            throw _validateError(TypeError, `'${dataName}.${accessor}' is not an 'array'.`);\n        }\n        else {\n            return false;\n        }\n    }\n    if (typeof valEntry.type === 'string') {\n        for (let cntr = 0; cntr < dataArray.length; cntr++) {\n            if (!(typeof dataArray[cntr] === valEntry.type)) {\n                if (valEntry.error) {\n                    const dataEntryString = typeof dataArray[cntr] === 'object' ? JSON.stringify(dataArray[cntr]) :\n                        dataArray[cntr];\n                    throw _validateError(TypeError, `'${dataName}.${accessor}[${cntr}]': '${dataEntryString}' is not a '${valEntry.type}'.`);\n                }\n                else {\n                    return false;\n                }\n            }\n        }\n    }\n    // If expected is a function then test all array entries against the test function. If expected is a Set then\n    // test all array entries for inclusion in the set. Otherwise, if expected is a string then test that all array\n    // entries as a `typeof` test against expected.\n    if (Array.isArray(valEntry.expected)) {\n        for (let cntr = 0; cntr < dataArray.length; cntr++) {\n            if (!valEntry.expected.includes(dataArray[cntr])) {\n                if (valEntry.error) {\n                    const dataEntryString = typeof dataArray[cntr] === 'object' ? JSON.stringify(dataArray[cntr]) :\n                        dataArray[cntr];\n                    throw _validateError(Error, `'${dataName}.${accessor}[${cntr}]': '${dataEntryString}' is not an expected value: ${JSON.stringify(valEntry.expected)}.`);\n                }\n                else {\n                    return false;\n                }\n            }\n        }\n    }\n    else if (valEntry.expected instanceof Set) {\n        for (let cntr = 0; cntr < dataArray.length; cntr++) {\n            if (!valEntry.expected.has(dataArray[cntr])) {\n                if (valEntry.error) {\n                    const dataEntryString = typeof dataArray[cntr] === 'object' ? JSON.stringify(dataArray[cntr]) :\n                        dataArray[cntr];\n                    throw _validateError(Error, `'${dataName}.${accessor}[${cntr}]': '${dataEntryString}' is not an expected value: ${JSON.stringify(valEntry.expected)}.`);\n                }\n                else {\n                    return false;\n                }\n            }\n        }\n    }\n    else if (typeof valEntry.expected === 'function') {\n        for (let cntr = 0; cntr < dataArray.length; cntr++) {\n            try {\n                const result = valEntry.expected(dataArray[cntr]);\n                if (typeof result === 'undefined' || !result) {\n                    throw new Error(valEntry.message);\n                }\n            }\n            catch (err) {\n                if (valEntry.error) {\n                    const dataEntryString = typeof dataArray[cntr] === 'object' ? JSON.stringify(dataArray[cntr]) :\n                        dataArray[cntr];\n                    throw _validateError(Error, `'${dataName}.${accessor}[${cntr}]': '${dataEntryString}' failed validation: ${err.message}.`);\n                }\n                else {\n                    return false;\n                }\n            }\n        }\n    }\n    return true;\n}\n/**\n * Validates data entry with a typeof check and potentially tests against the values in any given expected set.\n *\n * @param {object}            data - The object data to validate.\n *\n * @param {string}            accessor - A string describing the entries to access.\n *\n * @param {ValidationEntry}   entry - Validation entry.\n *\n * @param {string}            [dataName='data'] - Optional name of data.\n *\n * @returns {boolean} True if validation passes otherwise an exception is thrown.\n */\nfunction validateEntry(data, accessor, entry, dataName = 'data') {\n    const valEntry = Object.assign({ required: true, error: true }, entry);\n    const dataEntry = safeAccess(data, accessor);\n    // A non-required entry is missing so return without validation.\n    if (!valEntry.required && typeof dataEntry === 'undefined') {\n        return true;\n    }\n    if (valEntry.type && typeof dataEntry !== valEntry.type) {\n        if (valEntry.error) {\n            throw _validateError(TypeError, `'${dataName}.${accessor}' is not a '${valEntry.type}'.`);\n        }\n        else {\n            return false;\n        }\n    }\n    if ((valEntry.expected instanceof Set && !valEntry.expected.has(dataEntry)) ||\n        (Array.isArray(valEntry.expected) && !valEntry.expected.includes(dataEntry))) {\n        if (valEntry.error) {\n            const dataEntryString = typeof dataEntry === 'object' ? JSON.stringify(dataEntry) : dataEntry;\n            throw _validateError(Error, `'${dataName}.${accessor}': '${dataEntryString}' is not an expected value: ${JSON.stringify(valEntry.expected)}.`);\n        }\n        else {\n            return false;\n        }\n    }\n    else if (typeof valEntry.expected === 'function') {\n        try {\n            const result = valEntry.expected(dataEntry);\n            if (typeof result === 'undefined' || !result) {\n                throw new Error(valEntry.message);\n            }\n        }\n        catch (err) {\n            if (valEntry.error) {\n                const dataEntryString = typeof dataEntry === 'object' ? JSON.stringify(dataEntry) : dataEntry;\n                throw _validateError(Error, `'${dataName}.${accessor}': '${dataEntryString}' failed to validate: ${err.message}.`);\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * Dispatches validation of data entry to string or array validation depending on data entry type.\n *\n * @param {object}            data - The data object to test.\n *\n * @param {string}            accessor - A string describing the entries to access.\n *\n * @param {ValidationEntry}   [entry] - A validation entry.\n *\n * @param {string}            [dataName='data'] - Optional name of data.\n *\n * @returns {boolean} True if validation passes otherwise an exception is thrown.\n */\nfunction validateEntryOrArray(data, accessor, entry, dataName = 'data') {\n    const dataEntry = safeAccess(data, accessor);\n    let result;\n    if (Array.isArray(dataEntry)) {\n        result = validateArray(data, accessor, entry, dataName);\n    }\n    else {\n        result = validateEntry(data, accessor, entry, dataName);\n    }\n    return result;\n}\n// Module private ---------------------------------------------------------------------------------------------------\n/**\n * Private implementation of depth traversal.\n *\n * @param {any}         data - An object or array or any leaf.\n *\n * @param {Set<string>} [skipFreezeKeys] - An array of strings indicating keys of objects to not freeze.\n *\n * @returns {*} The frozen object.\n * @ignore\n * @private\n */\nfunction _deepFreeze(data, skipFreezeKeys) {\n    if (Array.isArray(data)) {\n        for (let cntr = 0; cntr < data.length; cntr++) {\n            _deepFreeze(data[cntr], skipFreezeKeys);\n        }\n    }\n    else if (isObject(data)) {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key) && !skipFreezeKeys?.has?.(key)) {\n                _deepFreeze(data[key], skipFreezeKeys);\n            }\n        }\n    }\n    return Object.freeze(data);\n}\n/**\n * Internal implementation for `deepMerge`.\n *\n * @param {object}      target - Target object.\n *\n * @param {...object}   sourceObj - One or more source objects.\n *\n * @returns {object}    Target object.\n */\nfunction _deepMerge(target = {}, ...sourceObj) {\n    // Iterate and merge all source objects into target.\n    for (let cntr = 0; cntr < sourceObj.length; cntr++) {\n        const obj = sourceObj[cntr];\n        for (const prop in obj) {\n            if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n                // Handle the special property starting with '-=' to delete keys.\n                if (prop.startsWith('-=')) {\n                    delete target[prop.slice(2)];\n                    continue;\n                }\n                // If target already has prop and both target[prop] and obj[prop] are object literals then merge them\n                // otherwise assign obj[prop] to target[prop].\n                target[prop] = Object.prototype.hasOwnProperty.call(target, prop) && target[prop]?.constructor === Object &&\n                    obj[prop]?.constructor === Object ? _deepMerge({}, target[prop], obj[prop]) : obj[prop];\n            }\n        }\n    }\n    return target;\n}\n/**\n * Private implementation of depth traversal.\n *\n * @param {any}      data - An object, array, or any leaf value\n *\n * @param {Function} func - A callback function to process leaf values in children arrays or object members.\n *\n * @param {boolean}  modify - If true then the result of the callback function is used to modify in place the\n *        given data.\n *\n * @returns {*} The data object.\n * @ignore\n * @private\n */\nfunction _depthTraverse(data, func, modify = false) {\n    if (modify) {\n        if (Array.isArray(data)) {\n            for (let cntr = 0; cntr < data.length; cntr++) {\n                data[cntr] = _depthTraverse(data[cntr], func, modify);\n            }\n        }\n        else if (isObject(data)) {\n            for (const key in data) {\n                if (Object.prototype.hasOwnProperty.call(data, key)) {\n                    data[key] = _depthTraverse(data[key], func, modify);\n                }\n            }\n        }\n        else {\n            data = func(data);\n        }\n    }\n    else {\n        if (Array.isArray(data)) {\n            for (let cntr = 0; cntr < data.length; cntr++) {\n                _depthTraverse(data[cntr], func, modify);\n            }\n        }\n        else if (typeof data === 'object') {\n            for (const key in data) {\n                if (Object.prototype.hasOwnProperty.call(data, key)) {\n                    _depthTraverse(data[key], func, modify);\n                }\n            }\n        }\n        else {\n            func(data);\n        }\n    }\n    return data;\n}\n/**\n * Private implementation of `getAccessorList`.\n *\n * @param {object}   data - An object to traverse.\n *\n * @returns {string[]} Accessor list.\n * @ignore\n * @private\n */\nfunction _getAccessorList(data) {\n    const accessors = [];\n    for (const key in data) {\n        if (Object.prototype.hasOwnProperty.call(data, key)) {\n            if (typeof data[key] === 'object') {\n                const childKeys = _getAccessorList(data[key]);\n                childKeys.forEach((childKey) => {\n                    accessors.push(Array.isArray(childKey) ? `${key}.${childKey.join('.')}` : `${key}.${childKey}`);\n                });\n            }\n            else {\n                accessors.push(key);\n            }\n        }\n    }\n    return accessors;\n}\n/**\n * Creates a new error of type `clazz` adding the field `_objectValidateError` set to true.\n *\n * @param {Error}    clazz - Error class to instantiate.\n *\n * @param {string}   message - An error message.\n *\n * @returns {*} Error of the clazz.\n * @ignore\n * @private\n */\nfunction _validateError(clazz, message = void 0) {\n    const error = new clazz(message);\n    error._objectValidateError = true;\n    return error;\n}\n\nexport { deepFreeze, deepMerge, depthTraverse, getAccessorList, hasAccessor, hasGetter, hasPrototype, hasSetter, isAsyncIterable, isIterable, isObject, isPlainObject, klona, objectKeys, objectSize, safeAccess, safeBatchSet, safeEqual, safeSet, safeSetAll, validate, validateArray, validateEntry, validateEntryOrArray };\n//# sourceMappingURL=functions.js.map\n","/**\r\n * PluginEvent - Provides the data / event passed to all invoked methods in\r\n * {@link PluginInvokeSupport#invokeSyncEvent}. The `event.data` field is returned to the caller. Before returning\r\n * though additional the following additional metadata is attached:\r\n *\r\n * (number)    `$$plugin_invoke_count` - The count of plugins invoked.\r\n *\r\n * (string[])  `$$plugin_invoke_names` - The names of plugins invoked.\r\n */\r\nexport class PluginInvokeEvent\r\n{\r\n   /**\r\n    * Initializes PluginEvent.\r\n    *\r\n    * @param {object} copyProps - Event data to copy.\r\n    *\r\n    * @param {object} passthruProps - Event data to pass through.\r\n    */\r\n   constructor(copyProps = {}, passthruProps = {})\r\n   {\r\n      /**\r\n       * Provides the unified event data assigning any pass through data to the copied data supplied. Invoked functions\r\n       * may add to or modify this data.\r\n       *\r\n       * @type {import('../../').PluginEventData}\r\n       */\r\n      this.data = Object.assign(JSON.parse(JSON.stringify(copyProps)), passthruProps);\r\n\r\n      /**\r\n       * Unique data available in each plugin invoked.\r\n       *\r\n       * @type {import('#runtime/plugin/manager/eventbus').EventbusProxy} - The active EventbusProxy for that particular plugin.\r\n       */\r\n      this.eventbus = null;\r\n\r\n      /**\r\n       * Unique data available in each plugin invoked.\r\n       *\r\n       * @type {string} - The active plugin name.\r\n       */\r\n      this.pluginName = '';\r\n\r\n      /**\r\n       * Unique data available in each plugin invoked.\r\n       *\r\n       * @type {object} - The active plugin options.\r\n       */\r\n      this.pluginOptions = '';\r\n   }\r\n}\r\n","import { isIterable }         from '@typhonjs-utils/object';\r\n\r\nimport { PluginInvokeEvent }  from './PluginInvokeEvent.js';\r\n\r\n/**\r\n * Private implementation to invoke asynchronous events. This allows internal calls in PluginManager for\r\n * `onPluginLoad` and `onPluginUnload` callbacks to bypass optional error checking.\r\n *\r\n * This dispatch method asynchronously passes to and returns from any invoked targets a PluginEvent. Any invoked plugin\r\n * may return a Promise which is awaited upon by `Promise.all` before returning the PluginEvent data via a Promise.\r\n *\r\n * @param {object}                     opts - Options object.\r\n *\r\n * @param {string}                     opts.method - Method name to invoke.\r\n *\r\n * @param {import('../../').PluginManager}              opts.manager - A plugin manager instance.\r\n *\r\n * @param {object}                     [opts.copyProps] - Properties that are copied.\r\n *\r\n * @param {object}                     [opts.passthruProps] - Properties that are passed through.\r\n *\r\n * @param {string|Iterable<string>}    [opts.plugins] - Specific plugin name or iterable list of plugin names to invoke.\r\n *\r\n * @param {object}                     [opts.options] - Defines options for throwing exceptions. Turned off by default.\r\n *\r\n * @param {boolean}                    [opts.errorCheck=true] - If false optional error checking is disabled.\r\n *\r\n * @returns {Promise<import('../../').PluginEventData>} The PluginEvent data.\r\n */\r\nexport async function invokeAsyncEvent({ method, manager, copyProps = {}, passthruProps = {}, plugins = void 0,\r\n options = void 0, errorCheck = true })\r\n{\r\n   if (typeof method !== 'string') { throw new TypeError(`'method' is not a string.`); }\r\n   if (typeof passthruProps !== 'object') { throw new TypeError(`'passthruProps' is not an object.`); }\r\n   if (typeof copyProps !== 'object') { throw new TypeError(`'copyProps' is not an object.`); }\r\n\r\n   if (options === void 0) { options = manager.getOptions(); }\r\n   if (plugins === void 0) { plugins = manager.getPluginMapKeys(); }\r\n\r\n   if (typeof plugins !== 'string' && !isIterable(plugins))\r\n   {\r\n      throw new TypeError(`'plugins' is not a string or iterable.`);\r\n   }\r\n\r\n   // Track how many plugins were invoked.\r\n   let pluginInvokeCount = 0;\r\n   const pluginInvokeNames = [];\r\n\r\n   // Track if a plugin method is invoked\r\n   let hasMethod = false;\r\n   let hasPlugin = false;\r\n\r\n   // Create plugin event.\r\n   const ev = new PluginInvokeEvent(copyProps, passthruProps);\r\n\r\n   const results = [];\r\n\r\n   if (typeof plugins === 'string')\r\n   {\r\n      const entry = manager.getPluginEntry(plugins);\r\n\r\n      if (entry !== void 0 && entry.enabled && entry.instance)\r\n      {\r\n         hasPlugin = true;\r\n\r\n         if (typeof entry.instance[method] === 'function')\r\n         {\r\n            ev.eventbus = entry.eventbusProxy;\r\n            ev.pluginName = entry.name;\r\n            ev.pluginOptions = entry.data.plugin.options;\r\n\r\n            const result = entry.instance[method](ev);\r\n\r\n            if (typeof result !== 'undefined' && result !== null) { results.push(result); }\r\n\r\n            hasMethod = true;\r\n            pluginInvokeCount++;\r\n            pluginInvokeNames.push(entry.name);\r\n         }\r\n      }\r\n   }\r\n   else\r\n   {\r\n      for (const name of plugins)\r\n      {\r\n         const entry = manager.getPluginEntry(name);\r\n\r\n         if (entry !== void 0 && entry.enabled && entry.instance)\r\n         {\r\n            hasPlugin = true;\r\n\r\n            if (typeof entry.instance[method] === 'function')\r\n            {\r\n               ev.eventbus = entry.eventbusProxy;\r\n               ev.pluginName = entry.name;\r\n               ev.pluginOptions = entry.data.plugin.options;\r\n\r\n               const result = entry.instance[method](ev);\r\n\r\n               if (typeof result !== 'undefined' && result !== null) { results.push(result); }\r\n\r\n               hasMethod = true;\r\n               pluginInvokeCount++;\r\n               pluginInvokeNames.push(entry.name);\r\n            }\r\n         }\r\n      }\r\n   }\r\n\r\n   if (errorCheck && options.throwNoPlugin && !hasPlugin)\r\n   {\r\n      throw new Error(`PluginManager failed to find any target plugins.`);\r\n   }\r\n\r\n   if (errorCheck && options.throwNoMethod && !hasMethod)\r\n   {\r\n      throw new Error(`PluginManager failed to invoke '${method}'.`);\r\n   }\r\n\r\n   // Add meta data for plugin invoke count.\r\n   ev.data.$$plugin_invoke_count = pluginInvokeCount;\r\n   ev.data.$$plugin_invoke_names = pluginInvokeNames;\r\n\r\n   await Promise.all(results);\r\n\r\n   return ev.data;\r\n}\r\n","import { isIterable }         from '@typhonjs-utils/object';\r\n\r\nimport { PluginInvokeEvent }  from './PluginInvokeEvent.js';\r\n\r\n/**\r\n * Private implementation to invoke synchronous events. This allows internal calls in PluginManager for\r\n * `onPluginLoad` and `onPluginUnload` callbacks to bypass optional error checking.\r\n *\r\n * This dispatch method synchronously passes to and returns from any invoked targets a PluginEvent.\r\n *\r\n * @param {object}                     opts - Options object.\r\n *\r\n * @param {string}                     opts.method - Method name to invoke.\r\n *\r\n * @param {import('../../').PluginManager}              opts.manager - A plugin manager instance.\r\n *\r\n * @param {object}                     [opts.copyProps] - Properties that are copied.\r\n *\r\n * @param {object}                     [opts.passthruProps] - Properties that are passed through.\r\n *\r\n * @param {string|Iterable<string>}    [opts.plugins] - Specific plugin name or iterable list of plugin names to invoke.\r\n *\r\n * @param {object}                     [opts.options] - Defines options for throwing exceptions. Turned off by default.\r\n *\r\n * @param {boolean}                    [opts.errorCheck=true] - If false optional error checking is disabled.\r\n *\r\n * @returns {import('../../').PluginEventData} The PluginEvent data.\r\n */\r\nexport function invokeSyncEvent({ method, manager, copyProps = {}, passthruProps = {}, plugins = void 0,\r\n options = void 0, errorCheck = true })\r\n{\r\n   if (typeof method !== 'string') { throw new TypeError(`'method' is not a string.`); }\r\n   if (typeof passthruProps !== 'object') { throw new TypeError(`'passthruProps' is not an object.`); }\r\n   if (typeof copyProps !== 'object') { throw new TypeError(`'copyProps' is not an object.`); }\r\n\r\n   if (options === void 0) { options = manager.getOptions(); }\r\n   if (plugins === void 0) { plugins = manager.getPluginMapKeys(); }\r\n\r\n   if (typeof plugins !== 'string' && !isIterable(plugins))\r\n   {\r\n      throw new TypeError(`'plugins' is not a string or iterable.`);\r\n   }\r\n\r\n   // Track how many plugins were invoked.\r\n   let pluginInvokeCount = 0;\r\n   const pluginInvokeNames = [];\r\n\r\n   // Track if a plugin method is invoked\r\n   let hasMethod = false;\r\n   let hasPlugin = false;\r\n\r\n   // Create plugin event.\r\n   const ev = new PluginInvokeEvent(copyProps, passthruProps);\r\n\r\n   if (typeof plugins === 'string')\r\n   {\r\n      const entry = manager.getPluginEntry(plugins);\r\n\r\n      if (entry !== void 0 && entry.enabled && entry.instance)\r\n      {\r\n         hasPlugin = true;\r\n\r\n         if (typeof entry.instance[method] === 'function')\r\n         {\r\n            ev.eventbus = entry.eventbusProxy;\r\n            ev.pluginName = entry.name;\r\n            ev.pluginOptions = entry.data.plugin.options;\r\n\r\n            entry.instance[method](ev);\r\n\r\n            hasMethod = true;\r\n            pluginInvokeCount++;\r\n            pluginInvokeNames.push(entry.name);\r\n         }\r\n      }\r\n   }\r\n   else\r\n   {\r\n      for (const name of plugins)\r\n      {\r\n         const entry = manager.getPluginEntry(name);\r\n\r\n         if (entry !== void 0 && entry.enabled && entry.instance)\r\n         {\r\n            hasPlugin = true;\r\n\r\n            if (typeof entry.instance[method] === 'function')\r\n            {\r\n               ev.eventbus = entry.eventbusProxy;\r\n               ev.pluginName = entry.name;\r\n               ev.pluginOptions = entry.data.plugin.options;\r\n\r\n               entry.instance[method](ev);\r\n\r\n               hasMethod = true;\r\n               pluginInvokeCount++;\r\n               pluginInvokeNames.push(entry.name);\r\n            }\r\n         }\r\n      }\r\n   }\r\n\r\n   if (errorCheck && options.throwNoPlugin && !hasPlugin)\r\n   {\r\n      throw new Error(`PluginManager failed to find any target plugins.`);\r\n   }\r\n\r\n   if (errorCheck && options.throwNoMethod && !hasMethod)\r\n   {\r\n      throw new Error(`PluginManager failed to invoke '${method}'.`);\r\n   }\r\n\r\n   // Add meta data for plugin invoke count.\r\n   ev.data.$$plugin_invoke_count = pluginInvokeCount;\r\n   ev.data.$$plugin_invoke_names = pluginInvokeNames;\r\n\r\n   return ev.data;\r\n}\r\n","import { isIterable }         from '@typhonjs-utils/object';\r\n\r\nimport { invokeAsyncEvent }   from './invokeAsyncEvent.js';\r\nimport { invokeSyncEvent }    from './invokeSyncEvent.js';\r\n\r\n/**\r\n * @typedef {import('../../interfaces').PluginSupportImpl} MyInterface\r\n */\r\n\r\n/**\r\n * PluginInvokeSupport adds direct method invocation support to PluginManager via the eventbus and alternately through\r\n * a wrapped instance of PluginManager depending on the use case.\r\n *\r\n * There are two types of invocation methods the first spreads an array of arguments to the invoked method. The second\r\n * constructs a {@link PluginInvokeEvent} to pass to the method with a single parameter.\r\n *\r\n * TODO: more info and wiki link\r\n *\r\n * When added to a PluginManager through constructor initialization the following events are registered on the plugin\r\n * manager eventbus:\r\n *\r\n * `plugins:async:invoke` - {@link PluginInvokeSupport#invokeAsync}\r\n *\r\n * `plugins:async:invoke:event` - {@link PluginInvokeSupport#invokeAsyncEvent}\r\n *\r\n * `plugins:get:method:names` - {@link PluginInvokeSupport#getMethodNames}\r\n *\r\n * `plugins:has:method` - {@link PluginInvokeSupport#hasMethod}\r\n *\r\n * `plugins:invoke` - {@link PluginInvokeSupport#invoke}\r\n *\r\n * `plugins:sync:invoke` - {@link PluginInvokeSupport#invokeSync}\r\n *\r\n * `plugins:sync:invoke:event` - {@link PluginInvokeSupport#invokeSyncEvent}\r\n *\r\n * @example\r\n * ```js\r\n * // One can also indirectly invoke any method of the plugin.\r\n * // Any plugin with a method named `aCoolMethod` is invoked.\r\n * eventbus.triggerSync('plugins:invoke:sync:event', { method: 'aCoolMethod' });\r\n *\r\n * // A specific invocation just for the 'an-npm-plugin-enabled-module'\r\n * eventbus.triggerSync('plugins:invoke:sync:event', {\r\n *    method: 'aCoolMethod',\r\n *    plugins: 'an-npm-plugin-enabled-module'\r\n * });\r\n *\r\n * // There are two other properties `copyProps` and `passthruProps` which can be set with object data to _copy_ or\r\n * // _pass through_ to the invoked method.\r\n * ```\r\n *\r\n * @implements {MyInterface}\r\n */\r\nexport class PluginInvokeSupport\r\n{\r\n   /**\r\n    * @type {import('../..').PluginManager}\r\n    */\r\n   #pluginManager = null;\r\n\r\n   /**\r\n    * Create PluginInvokeSupport\r\n    *\r\n    * @param {import('../..').PluginManager} pluginManager - The plugin manager to associate.\r\n    */\r\n   constructor(pluginManager)\r\n   {\r\n      this.#pluginManager = pluginManager;\r\n   }\r\n\r\n   /**\r\n    * Returns whether the associated plugin manager has been destroyed.\r\n    *\r\n    * @returns {boolean} Returns whether the plugin manager has been destroyed.\r\n    */\r\n   get isDestroyed()\r\n   {\r\n      return this.#pluginManager === null || this.#pluginManager.isDestroyed;\r\n   }\r\n\r\n   /**\r\n    * Returns the associated plugin manager options.\r\n    *\r\n    * @returns {import('../../').PluginManagerOptions} The associated plugin manager options.\r\n    */\r\n   get options()\r\n   {\r\n      /* c8 ignore next 1 */\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      return this.#pluginManager.getOptions();\r\n   }\r\n\r\n   /**\r\n    * Gets the associated plugin manager.\r\n    *\r\n    * @returns {import('../../').PluginManager} The associated plugin manager\r\n    */\r\n   get pluginManager()\r\n   {\r\n      /* c8 ignore next 1 */\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      return this.#pluginManager;\r\n   }\r\n\r\n   /**\r\n    * Destroys all managed plugins after unloading them.\r\n    *\r\n    * @param {object}     opts - An options object.\r\n    *\r\n    * @param {import('#runtime/plugin/manager/eventbus').Eventbus}   opts.eventbus - The eventbus to disassociate.\r\n    *\r\n    * @param {string}     opts.eventPrepend - The current event prepend.\r\n    */\r\n   async destroy({ eventbus, eventPrepend })\r\n   {\r\n      if (eventbus !== null && eventbus !== void 0)\r\n      {\r\n         eventbus.off(`${eventPrepend}:async:invoke`, this.invokeAsync, this);\r\n         eventbus.off(`${eventPrepend}:async:invoke:event`, this.invokeAsyncEvent, this);\r\n         eventbus.off(`${eventPrepend}:get:method:names`, this.getMethodNames, this);\r\n         eventbus.off(`${eventPrepend}:has:method`, this.hasMethod, this);\r\n         eventbus.off(`${eventPrepend}:invoke`, this.invoke, this);\r\n         eventbus.off(`${eventPrepend}:sync:invoke`, this.invokeSync, this);\r\n         eventbus.off(`${eventPrepend}:sync:invoke:event`, this.invokeSyncEvent, this);\r\n      }\r\n\r\n      this.#pluginManager = null;\r\n   }\r\n\r\n   /**\r\n    * Returns method names for a specific plugin, list of plugins, or all plugins. The enabled state can be specified\r\n    * along with sorting methods by plugin name.\r\n    *\r\n    * @param {object}                  [opts] - Options object. If undefined all plugin data is returned.\r\n    *\r\n    * @param {boolean}                 [opts.enabled] - If enabled is a boolean it will return plugin methods names\r\n    *                                                   given the respective enabled state.\r\n    *\r\n    * @param {string|Iterable<string>} [opts.plugins] - Plugin name or iterable list of names.\r\n    *\r\n    * @returns {string[]} A list of method names\r\n    */\r\n   getMethodNames({ enabled = void 0, plugins = [] } = {})\r\n   {\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      if (enabled !== void 0 && typeof enabled !== 'boolean')\r\n      {\r\n         throw new TypeError(`'enabled' is not a boolean.`);\r\n      }\r\n\r\n      if (typeof plugins !== 'string' && !isIterable(plugins))\r\n      {\r\n         throw new TypeError(`'plugins' is not a string or iterable.`);\r\n      }\r\n\r\n      // Create an array from a single plugin name.\r\n      if (typeof plugins === 'string')\r\n      {\r\n         plugins = [plugins];\r\n      }\r\n\r\n      const anyEnabledState = enabled === void 0;\r\n\r\n      const results = {};\r\n\r\n      let count = 0;\r\n\r\n      for (const name of plugins)\r\n      {\r\n         const entry = this.pluginManager.getPluginEntry(name);\r\n\r\n         if (entry !== void 0 && entry.instance && (anyEnabledState || entry.enabled === enabled))\r\n         {\r\n            for (const name of s_GET_ALL_PROPERTY_NAMES(entry.instance))\r\n            {\r\n               // Skip any names that are not a function or are the constructor.\r\n               if (typeof entry.instance[name] === 'function' && name !== 'constructor') { results[name] = true; }\r\n            }\r\n         }\r\n\r\n         count++;\r\n      }\r\n\r\n      // Iterable plugins had no entries so return all plugin data.\r\n      if (count === 0)\r\n      {\r\n         for (const entry of this.pluginManager.getPluginMapValues())\r\n         {\r\n            if (entry.instance && (anyEnabledState || entry.enabled === enabled))\r\n            {\r\n               for (const name of s_GET_ALL_PROPERTY_NAMES(entry.instance))\r\n               {\r\n                  // Skip any names that are not a function or are the constructor.\r\n                  if (typeof entry.instance[name] === 'function' && name !== 'constructor') { results[name] = true; }\r\n               }\r\n            }\r\n         }\r\n      }\r\n\r\n      return Object.keys(results).sort();\r\n   }\r\n\r\n   /**\r\n    * Checks if the provided method name exists across all plugins or specific plugins if defined.\r\n    *\r\n    * @param {object}                  opts - Options object.\r\n    *\r\n    * @param {string}                  opts.method - Method name to test.\r\n    *\r\n    * @param {string|Iterable<string>} [opts.plugins] - Plugin name or iterable list of names to check for method. If\r\n    *                                                   undefined all plugins must contain the method.\r\n    *\r\n    * @returns {boolean} - True method is found.\r\n    */\r\n   hasMethod({ method, plugins = [] })\r\n   {\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      if (typeof method !== 'string')\r\n      {\r\n         throw new TypeError(`'method' is not a string.`);\r\n      }\r\n\r\n      if (typeof plugins !== 'string' && !isIterable(plugins))\r\n      {\r\n         throw new TypeError(`'plugins' is not a string or iterable.`);\r\n      }\r\n\r\n      // Return a single boolean enabled result for a single plugin if found.\r\n      if (typeof plugins === 'string')\r\n      {\r\n         const entry = this.pluginManager.getPluginEntry(plugins);\r\n         return entry !== void 0 && typeof entry.instance[method] === 'function';\r\n      }\r\n\r\n      let count = 0;\r\n\r\n      for (const name of plugins)\r\n      {\r\n         const entry = this.pluginManager.getPluginEntry(name);\r\n\r\n         if (entry !== void 0 && typeof entry.instance[method] !== 'function') { return false; }\r\n\r\n         count++;\r\n      }\r\n\r\n      // Iterable plugins had no entries so check all plugin data.\r\n      if (count === 0)\r\n      {\r\n         for (const entry of this.pluginManager.getPluginMapValues())\r\n         {\r\n            if (typeof entry.instance[method] !== 'function') { return false; }\r\n         }\r\n      }\r\n\r\n      return true;\r\n   }\r\n\r\n   /**\r\n    * This dispatch method simply invokes any plugin targets for the given method name.\r\n    *\r\n    * @param {object}   opts - Options object.\r\n    *\r\n    * @param {string}   opts.method - Method name to invoke.\r\n    *\r\n    * @param {*[]}      [opts.args] - Method arguments. This array will be spread as multiple arguments.\r\n    *\r\n    * @param {string|Iterable<string>} [opts.plugins] - Specific plugin name or iterable list of plugin names to invoke.\r\n    */\r\n   invoke({ method, args = void 0, plugins = void 0 })\r\n   {\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      if (typeof method !== 'string') { throw new TypeError(`'method' is not a string.`); }\r\n\r\n      if (args !== void 0 && !Array.isArray(args)) { throw new TypeError(`'args' is not an array.`); }\r\n\r\n      if (plugins === void 0) { plugins = this.pluginManager.getPluginMapKeys(); }\r\n\r\n      if (typeof plugins !== 'string' && !isIterable(plugins))\r\n      {\r\n         throw new TypeError(`'plugins' is not a string or iterable.`);\r\n      }\r\n\r\n      // Track if a plugin method is invoked.\r\n      let hasMethod = false;\r\n      let hasPlugin = false;\r\n\r\n      const isArgsArray = Array.isArray(args);\r\n\r\n      if (typeof plugins === 'string')\r\n      {\r\n         const entry = this.pluginManager.getPluginEntry(plugins);\r\n\r\n         if (entry !== void 0 && entry.enabled && entry.instance)\r\n         {\r\n            hasPlugin = true;\r\n\r\n            if (typeof entry.instance[method] === 'function')\r\n            {\r\n               isArgsArray ? entry.instance[method](...args) : entry.instance[method]();\r\n\r\n               hasMethod = true;\r\n            }\r\n         }\r\n      }\r\n      else\r\n      {\r\n         for (const name of plugins)\r\n         {\r\n            const entry = this.pluginManager.getPluginEntry(name);\r\n\r\n            if (entry !== void 0 && entry.enabled && entry.instance)\r\n            {\r\n               hasPlugin = true;\r\n\r\n               if (typeof entry.instance[method] === 'function')\r\n               {\r\n                  isArgsArray ? entry.instance[method](...args) : entry.instance[method]();\r\n\r\n                  hasMethod = true;\r\n               }\r\n            }\r\n         }\r\n      }\r\n\r\n      if (this.options.throwNoPlugin && !hasPlugin)\r\n      {\r\n         throw new Error(`PluginManager failed to find any target plugins.`);\r\n      }\r\n\r\n      if (this.options.throwNoMethod && !hasMethod)\r\n      {\r\n         throw new Error(`PluginManager failed to invoke '${method}'.`);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * This dispatch method is asynchronous and adds any returned results to an array which is resolved via Promise.all\r\n    * Any target invoked may return a Promise or any result.\r\n    *\r\n    * @param {object}   opts - Options object.\r\n    *\r\n    * @param {string}   opts.method - Method name to invoke.\r\n    *\r\n    * @param {*[]}      [opts.args] - Method arguments. This array will be spread as multiple arguments.\r\n    *\r\n    * @param {string|Iterable<string>} [opts.plugins] - Specific plugin name or iterable list of plugin names to invoke.\r\n    *\r\n    * @returns {Promise<*|*[]>} A single result or array of results.\r\n    */\r\n   async invokeAsync({ method, args = void 0, plugins = void 0 })\r\n   {\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      if (typeof method !== 'string') { throw new TypeError(`'method' is not a string.`); }\r\n\r\n      if (args !== void 0 && !Array.isArray(args)) { throw new TypeError(`'args' is not an array.`); }\r\n\r\n      if (plugins === void 0) { plugins = this.pluginManager.getPluginMapKeys(); }\r\n\r\n      if (typeof plugins !== 'string' && !isIterable(plugins))\r\n      {\r\n         throw new TypeError(`'plugins' is not a string or iterable.`);\r\n      }\r\n\r\n      // Track if a plugin method is invoked.\r\n      let hasMethod = false;\r\n      let hasPlugin = false;\r\n\r\n      // Capture results.\r\n      let result = void 0;\r\n      const results = [];\r\n\r\n      const isArgsArray = Array.isArray(args);\r\n\r\n      if (typeof plugins === 'string')\r\n      {\r\n         const plugin = this.pluginManager.getPluginEntry(plugins);\r\n\r\n         if (plugin !== void 0 && plugin.enabled && plugin.instance)\r\n         {\r\n            hasPlugin = true;\r\n\r\n            if (typeof plugin.instance[method] === 'function')\r\n            {\r\n               result = isArgsArray ? plugin.instance[method](...args) : plugin.instance[method]();\r\n\r\n               // If we received a valid result push it to the results.\r\n               if (result !== void 0) { results.push(result); }\r\n\r\n               hasMethod = true;\r\n            }\r\n         }\r\n      }\r\n      else\r\n      {\r\n         for (const name of plugins)\r\n         {\r\n            const plugin = this.pluginManager.getPluginEntry(name);\r\n\r\n            if (plugin !== void 0 && plugin.enabled && plugin.instance)\r\n            {\r\n               hasPlugin = true;\r\n\r\n               if (typeof plugin.instance[method] === 'function')\r\n               {\r\n                  result = isArgsArray ? plugin.instance[method](...args) : plugin.instance[method]();\r\n\r\n                  // If we received a valid result push it to the results.\r\n                  if (result !== void 0) { results.push(result); }\r\n\r\n                  hasMethod = true;\r\n               }\r\n            }\r\n         }\r\n      }\r\n\r\n      if (this.options.throwNoPlugin && !hasPlugin)\r\n      {\r\n         throw new Error(`PluginManager failed to find any target plugins.`);\r\n      }\r\n\r\n      if (this.options.throwNoMethod && !hasMethod)\r\n      {\r\n          throw new Error(`PluginManager failed to invoke '${method}'.`);\r\n      }\r\n\r\n      // If there are multiple results then use Promise.all otherwise Promise.resolve.\r\n      return results.length > 1 ? Promise.all(results).then((values) =>\r\n      {\r\n         const filtered = values.filter((entry) => entry !== void 0);\r\n         switch (filtered.length)\r\n         {\r\n            case 0: return void 0;\r\n            case 1: return filtered[0];\r\n            default: return filtered;\r\n         }\r\n      }) : result;\r\n   }\r\n\r\n   /**\r\n    * This dispatch method synchronously passes to and returns from any invoked targets a PluginEvent.\r\n    *\r\n    * @param {object}   opts - Options object.\r\n    *\r\n    * @param {string}   opts.method - Method name to invoke.\r\n    *\r\n    * @param {object}   [opts.copyProps] - Properties that are copied.\r\n    *\r\n    * @param {object}   [opts.passthruProps] - Properties that are passed through.\r\n    *\r\n    * @param {string | Iterable<string>} [opts.plugins] - Specific plugin name or iterable list of plugin names to invoke.\r\n    *\r\n    * @returns {Promise<import('../../').PluginEventData>} The PluginEvent data.\r\n    */\r\n   async invokeAsyncEvent({ method, copyProps = {}, passthruProps = {}, plugins = void 0 })\r\n   {\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      // Invokes the private internal async events method.\r\n      return invokeAsyncEvent({ method, manager: this.pluginManager, copyProps, passthruProps, plugins });\r\n   }\r\n\r\n   /**\r\n    * This dispatch method synchronously passes back a single value or an array with all results returned by any\r\n    * invoked targets.\r\n    *\r\n    * @param {object}   opts - Options object.\r\n    *\r\n    * @param {string}   opts.method - Method name to invoke.\r\n    *\r\n    * @param {*[]}      [opts.args] - Method arguments. This array will be spread as multiple arguments.\r\n    *\r\n    * @param {string|Iterable<string>} [opts.plugins] - Specific plugin name or iterable list of plugin names to invoke.\r\n    *\r\n    * @returns {*|*[]} A single result or array of results.\r\n    */\r\n   invokeSync({ method, args = void 0, plugins = void 0 })\r\n   {\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      if (typeof method !== 'string') { throw new TypeError(`'method' is not a string.`); }\r\n\r\n      if (args !== void 0 && !Array.isArray(args)) { throw new TypeError(`'args' is not an array.`); }\r\n\r\n      if (plugins === void 0) { plugins = this.pluginManager.getPluginMapKeys(); }\r\n\r\n      if (typeof plugins !== 'string' && !isIterable(plugins))\r\n      {\r\n         throw new TypeError(`'plugins' is not a string or iterable.`);\r\n      }\r\n\r\n      // Track if a plugin method is invoked.\r\n      let hasMethod = false;\r\n      let hasPlugin = false;\r\n\r\n      // Capture results.\r\n      let result = void 0;\r\n      const results = [];\r\n\r\n      const isArgsArray = Array.isArray(args);\r\n\r\n      if (typeof plugins === 'string')\r\n      {\r\n         const plugin = this.pluginManager.getPluginEntry(plugins);\r\n\r\n         if (plugin !== void 0 && plugin.enabled && plugin.instance)\r\n         {\r\n            hasPlugin = true;\r\n\r\n            if (typeof plugin.instance[method] === 'function')\r\n            {\r\n               result = isArgsArray ? plugin.instance[method](...args) : plugin.instance[method]();\r\n\r\n               // If we received a valid result push it to the results.\r\n               if (result !== void 0) { results.push(result); }\r\n\r\n               hasMethod = true;\r\n            }\r\n         }\r\n      }\r\n      else\r\n      {\r\n         for (const name of plugins)\r\n         {\r\n            const plugin = this.pluginManager.getPluginEntry(name);\r\n\r\n            if (plugin !== void 0 && plugin.enabled && plugin.instance)\r\n            {\r\n               hasPlugin = true;\r\n\r\n               if (typeof plugin.instance[method] === 'function')\r\n               {\r\n                  result = isArgsArray ? plugin.instance[method](...args) : plugin.instance[method]();\r\n\r\n                  // If we received a valid result push it to the results.\r\n                  if (result !== void 0) { results.push(result); }\r\n\r\n                  hasMethod = true;\r\n               }\r\n            }\r\n         }\r\n      }\r\n\r\n      if (this.options.throwNoPlugin && !hasPlugin)\r\n      {\r\n         throw new Error(`PluginManager failed to find any target plugins.`);\r\n      }\r\n\r\n      if (this.options.throwNoMethod && !hasMethod)\r\n      {\r\n         throw new Error(`PluginManager failed to invoke '${method}'.`);\r\n      }\r\n\r\n      // Return the results array if there are more than one or just a single result.\r\n      return results.length > 1 ? results : result;\r\n   }\r\n\r\n   /**\r\n    * This dispatch method synchronously passes to and returns from any invoked targets a PluginEvent.\r\n    *\r\n    * @param {object}            opts - Options object.\r\n    *\r\n    * @param {string}            opts.method - Method name to invoke.\r\n    *\r\n    * @param {object}            [opts.copyProps] - Properties that are copied.\r\n    *\r\n    * @param {object}            [opts.passthruProps] - Properties that are passed through.\r\n    *\r\n    * @param {string|Iterable<string>} [opts.plugins] - Specific plugin name or iterable list of plugin names to invoke.\r\n    *\r\n    * @returns {import('../../').PluginEventData} The PluginEvent data.\r\n    */\r\n   invokeSyncEvent({ method, copyProps = {}, passthruProps = {}, plugins = void 0 })\r\n   {\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      // Invokes the private internal sync events method.\r\n      return invokeSyncEvent({ method, manager: this.pluginManager, copyProps, passthruProps, plugins });\r\n   }\r\n\r\n   /**\r\n    * Sets the eventbus associated with this plugin manager. If any previous eventbus was associated all plugin manager\r\n    * events will be removed then added to the new eventbus. If there are any existing plugins being managed their\r\n    * events will be removed from the old eventbus and then `onPluginLoad` will be called with the new eventbus.\r\n    *\r\n    * @param {object}     opts - An options object.\r\n    *\r\n    * @param {import('#runtime/plugin/manager/eventbus').Eventbus}   opts.oldEventbus - The old eventbus to disassociate.\r\n    *\r\n    * @param {import('#runtime/plugin/manager/eventbus').Eventbus}   opts.newEventbus - The new eventbus to associate.\r\n    *\r\n    * @param {string}     opts.oldPrepend - The old event prepend.\r\n    *\r\n    * @param {string}     opts.newPrepend - The new event prepend.\r\n    */\r\n   setEventbus({ oldEventbus, newEventbus, oldPrepend, newPrepend })\r\n   {\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      if (oldEventbus !== null && oldEventbus !== void 0)\r\n      {\r\n         oldEventbus.off(`${oldPrepend}:async:invoke`, this.invokeAsync, this);\r\n         oldEventbus.off(`${oldPrepend}:async:invoke:event`, this.invokeAsyncEvent, this);\r\n         oldEventbus.off(`${oldPrepend}:get:method:names`, this.getMethodNames, this);\r\n         oldEventbus.off(`${oldPrepend}:has:method`, this.hasMethod, this);\r\n         oldEventbus.off(`${oldPrepend}:invoke`, this.invoke, this);\r\n         oldEventbus.off(`${oldPrepend}:sync:invoke`, this.invokeSync, this);\r\n         oldEventbus.off(`${oldPrepend}:sync:invoke:event`, this.invokeSyncEvent, this);\r\n      }\r\n\r\n      if (newEventbus !== null && newEventbus !== void 0)\r\n      {\r\n         newEventbus.on(`${newPrepend}:async:invoke`, this.invokeAsync, this, { guard: true });\r\n         newEventbus.on(`${newPrepend}:async:invoke:event`, this.invokeAsyncEvent, this, { guard: true });\r\n         newEventbus.on(`${newPrepend}:get:method:names`, this.getMethodNames, this, { guard: true });\r\n         newEventbus.on(`${newPrepend}:has:method`, this.hasMethod, this, { guard: true });\r\n         newEventbus.on(`${newPrepend}:invoke`, this.invoke, this, { guard: true });\r\n         newEventbus.on(`${newPrepend}:sync:invoke`, this.invokeSync, this, { guard: true });\r\n         newEventbus.on(`${newPrepend}:sync:invoke:event`, this.invokeSyncEvent, this, { guard: true });\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Set optional parameters.\r\n    *\r\n    * @param {import('../../').PluginManagerOptions} options Defines optional parameters to set.\r\n    */\r\n   setOptions(options)  // eslint-disable-line no-unused-vars\r\n   {\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n   }\r\n}\r\n\r\n// Module Private ----------------------------------------------------------------------------------------------------\r\n\r\n/**\r\n * Walks an objects inheritance tree collecting property names stopping before `Object` is reached.\r\n *\r\n * @param {object}   obj - object to walks.\r\n *\r\n * @returns {string[]} A list of property names.\r\n * @ignore\r\n */\r\nconst s_GET_ALL_PROPERTY_NAMES = (obj) =>\r\n{\r\n   const props = [];\r\n\r\n   do\r\n   {\r\n      Object.getOwnPropertyNames(obj).forEach((prop) => { if (props.indexOf(prop) === -1) { props.push(prop); } });\r\n      obj = Object.getPrototypeOf(obj);\r\n   } while (obj !== void 0 && obj !== null && !(obj === Object.prototype));\r\n\r\n   return props;\r\n};\r\n","const s_REGEX_ESCAPE_RELATIVE = /^([.]{1,2}[\\\\|/])+/g;\r\nconst s_REGEX_ESCAPE_FORWARD = /[\\\\]/g;\r\nconst s_REGEX_STRING_URL = /^(https?|file):/g;\r\n\r\n/**\r\n * Creates an escaped path which is suitable for use in RegExp construction.\r\n *\r\n * Note: This function will throw if a malformed URL string is the target. In AbstractPluginManager this function\r\n * is used after the module has been loaded / is a good target.\r\n *\r\n * @param {string|URL}  target - Target full / relative path or URL to escape.\r\n *\r\n * @returns {string} The escaped target.\r\n */\r\nexport function escapeTarget(target)\r\n{\r\n   if (typeof target !== 'string' && !(target instanceof URL))\r\n   {\r\n      throw new TypeError(`'target' is not a string or URL.`);\r\n   }\r\n\r\n   /** @type {string} */\r\n   let targetEscaped = typeof target === 'string' ? target : void 0;\r\n\r\n   if (target instanceof URL)\r\n   {\r\n      targetEscaped = target.pathname;\r\n   }\r\n   else if (target.match(s_REGEX_STRING_URL))\r\n   {\r\n      targetEscaped = new URL(target).pathname;\r\n   }\r\n\r\n   targetEscaped = targetEscaped.replace(s_REGEX_ESCAPE_RELATIVE, '');\r\n   targetEscaped = targetEscaped.replace(s_REGEX_ESCAPE_FORWARD, '\\\\\\\\');\r\n\r\n   return targetEscaped;\r\n}\r\n","/**\r\n * Performs validation of a PluginConfig.\r\n *\r\n * @param {import('..').PluginConfig}   pluginConfig A PluginConfig to validate.\r\n *\r\n * @returns {boolean} True if the given PluginConfig is valid.\r\n */\r\nexport function isValidConfig(pluginConfig)\r\n{\r\n   if (typeof pluginConfig !== 'object') { return false; }\r\n\r\n   if (typeof pluginConfig.name !== 'string') { return false; }\r\n\r\n   if (typeof pluginConfig.target !== 'undefined' && typeof pluginConfig.target !== 'string' &&\r\n    !(pluginConfig.target instanceof URL))\r\n   {\r\n      return false;\r\n   }\r\n\r\n   if (typeof pluginConfig.options !== 'undefined' && typeof pluginConfig.options !== 'object') { return false; }\r\n\r\n   return true;\r\n}\r\n","/**\r\n * Resolves a dynamically imported module for PluginManager. This function is passed to `@typhonjs-utils/loader-module`.\r\n *\r\n * @param {object}   module - The imported module.\r\n *\r\n * @returns {*} The export most likely to match a valid plugin.\r\n */\r\nexport function resolveModule(module)\r\n{\r\n   // If the module has a named export for `onPluginLoad` then take the module.\r\n   if (typeof module.onPluginLoad === 'function')\r\n   {\r\n      return module;\r\n   }\r\n   // Then potentially resolve any default export / static class.\r\n   else if (module.default)\r\n   {\r\n      return module.default;\r\n   }\r\n   // Finally resolve as just the module.\r\n   else\r\n   {\r\n      return module;\r\n   }\r\n}\r\n","import {\r\n   Eventbus,\r\n   EventbusProxy,\r\n   EventbusSecure }           from '#runtime/plugin/manager/eventbus';\r\n\r\nimport { ModuleLoader }       from '#runtime/util/loader-module';\r\n\r\nimport { PluginEntry }        from './PluginEntry.js';\r\n\r\nimport { invokeAsyncEvent }   from './support/invoke/index.js';\r\n\r\nimport {\r\n   escapeTarget,\r\n   isValidConfig,\r\n   resolveModule }            from './utils/index.js';\r\n\r\nimport {\r\n   deepFreeze,\r\n   isIterable,\r\n   isObject }                 from '#runtime/util/object';\r\n\r\n/**\r\n * Provides a lightweight plugin manager for Node / NPM & the browser with eventbus integration for plugins in a safe\r\n * and protected manner across NPM modules, local files, and preloaded object instances. This pattern facilitates\r\n * message passing between modules versus direct dependencies / method invocation.\r\n *\r\n * A default eventbus will be created, but you may also pass in an eventbus from `@typhonjs-plugin/eventbus` and the\r\n * plugin manager will register by default under these event categories:\r\n *\r\n * `plugins:async:add` - {@link PluginManager#add}\r\n *\r\n * `plugins:async:add:all` - {@link PluginManager#addAll}\r\n *\r\n * `plugins:async:destroy:manager` - {@link PluginManager#destroy}\r\n *\r\n * `plugins:async:remove` - {@link PluginManager#remove}\r\n *\r\n * `plugins:async:remove:all` - {@link PluginManager#removeAll}\r\n *\r\n * `plugins:get:enabled` - {@link PluginManager#getEnabled}\r\n *\r\n * `plugins:get:options` - {@link PluginManager#getOptions}\r\n *\r\n * `plugins:get:plugin:by:event` - {@link PluginManager#getPluginByEvent}\r\n *\r\n * `plugins:get:plugin:data` - {@link PluginManager#getPluginData}\r\n *\r\n * `plugins:get:plugin:events` - {@link PluginManager#getPluginEvents}\r\n *\r\n * `plugins:get:plugin:names` - {@link PluginManager#getPluginNames}\r\n *\r\n * `plugins:has:plugin` - {@link PluginManager#hasPlugins}\r\n *\r\n * `plugins:is:valid:config` - {@link PluginManager#isValidConfig}\r\n *\r\n * `plugins:set:enabled` - {@link PluginManager#setEnabled}\r\n *\r\n * `plugins:set:options` - {@link PluginManager#setOptions}\r\n *\r\n * Automatically when a plugin is loaded and unloaded respective functions `onPluginLoad` and `onPluginUnload` will\r\n * be attempted to be invoked on the plugin. This is an opportunity for the plugin to receive any associated eventbus\r\n * and wire itself into it. It should be noted that a protected proxy around the eventbus is passed to the plugins\r\n * such that when the plugin is removed automatically all events registered on the eventbus are cleaned up without\r\n * a plugin author needing to do this manually in the `onPluginUnload` callback. This solves any dangling event binding\r\n * issues.\r\n *\r\n * By supporting ES Modules / CommonJS in Node and ES Modules in the browser the plugin manager is by nature\r\n * asynchronous for the core methods of adding / removing plugins and destroying the manager. The lifecycle methods\r\n * `onPluginLoad` and `onPluginUnload` will be awaited on such that if a plugin returns a Promise or is an async method\r\n * then it will complete before execution continues.\r\n *\r\n * It is recommended to interact with the plugin manager eventbus through an eventbus proxy. The\r\n * `createEventbusProxy` method will return a proxy to the default or currently set eventbus.\r\n *\r\n * It should be noted that this module re-exports `@typhonjs-plugin/eventbus` which is available as named exports via\r\n * the `eventbus` subpath export:\r\n * ```js\r\n * // Main Eventbus implementations:\r\n * import { Eventbus, EventbusProxy, EventbusSecure } from '@typhonjs-plugin/manager/eventbus';\r\n *\r\n * // Consistent bus instances useful for testing and broad accessibility:\r\n * import { mainEventbus, pluginEventbus, testEventbus } from '@typhonjs-plugin/manager/eventbus/buses';\r\n * ```\r\n *\r\n * This reexport is for convenience as it provides one single distribution for Node & browser usage.\r\n *\r\n * If external eventbus functionality is enabled by passing in an eventbus in the constructor of PluginManager it is\r\n * important especially if using an existing process / global level eventbus instance from either this module or\r\n * `@typhonjs-plugin/eventbus` to call {@link PluginManager#destroy} to clean up all plugin eventbus resources and the\r\n * plugin manager event bindings; this is primarily a testing concern when running repeated tests over a reused\r\n * eventbus.\r\n *\r\n * For more information on Eventbus functionality please see:\r\n *\r\n * @see https://www.npmjs.com/package/@typhonjs-plugin/eventbus\r\n *\r\n * The PluginManager instance can be extended through runtime composition by passing in _classes_ that implement\r\n * {@link PluginSupportImpl}. One such implementation is available {@link PluginInvokeSupport} which enables directly\r\n * invoking methods of all or specific plugins. Please see the documentation for PluginInvokeSupport for more details.\r\n *\r\n * Several abbreviated examples follow. Please see the wiki for more details:\r\n * TODO: add wiki link\r\n *\r\n * @example\r\n * import { PluginManager } from '@typhonjs-plugin/manager';\r\n *\r\n * const pluginManager = new PluginManager();\r\n *\r\n * await pluginManager.add({ name: 'an-npm-plugin-enabled-module' });\r\n * await pluginManager.add({ name: 'my-local-module', target: './myModule.js' });\r\n *\r\n * const eventbus = pluginManager.createEventbusProxy();\r\n *\r\n * // Let's say an-npm-plugin-enabled-module responds to 'cool:event' which returns 'true'.\r\n * // Let's say my-local-module responds to 'hot:event' which returns 'false'.\r\n * // Both of the plugin / modules will have 'onPluginLoaded' invoked with a proxy to the eventbus and any plugin\r\n * // options defined.\r\n *\r\n * // One can then use the eventbus functionality to invoke associated module / plugin methods even retrieving results.\r\n * assert(eventbus.triggerSync('cool:event') === true);\r\n * assert(eventbus.triggerSync('hot:event') === false);\r\n */\r\nexport class PluginManager\r\n{\r\n   /**\r\n    * Stores the associated eventbus.\r\n    *\r\n    * @type {import('#runtime/plugin/manager/eventbus').Eventbus}\r\n    */\r\n   #eventbus = null;\r\n\r\n   /**\r\n    * Stores any EventbusProxy instances created, so that they may be automatically destroyed.\r\n    *\r\n    * @type {import('#runtime/plugin/manager/eventbus').EventbusProxy[]}\r\n    */\r\n   #eventbusProxies = [];\r\n\r\n   /**\r\n    * Stores any EventbusSecure instances created, so that they may be automatically destroyed.\r\n    *\r\n    * @type {import('#runtime/plugin/manager/eventbus').EventbusSecureObj[]}\r\n    */\r\n   #eventbusSecure = [];\r\n\r\n   /**\r\n    * Defines various options for the plugin manager. By default plugins are enabled, no event invoke, and no\r\n    * event set options are enabled; the latter two preventing invoke dispatch methods functioning on the eventbus\r\n    * along with not being able to set the plugin manager options by the eventbus. These must be explicitly turned\r\n    * off.\r\n    *\r\n    * @type {import('.').PluginManagerOptions}\r\n    */\r\n   #options =\r\n   {\r\n      noEventAdd: false,\r\n      noEventDestroy: true,\r\n      noEventRemoval: false,\r\n      noEventSetEnabled: true,\r\n      noEventSetOptions: true,\r\n      throwNoMethod: false,\r\n      throwNoPlugin: false\r\n   };\r\n\r\n   /**\r\n    * Stores the plugins currently being loaded by plugin name. During the add process this is important to track\r\n    * in cases when PluginManager is being used incorrectly in a non-async / await manner.\r\n    *\r\n    * @type {Set<string>}\r\n    */\r\n   #pluginAddSet = new Set();\r\n\r\n   /**\r\n    * Stores the plugins by name with an associated PluginEntry.\r\n    *\r\n    * @type {Map<string, import('./PluginEntry.js').PluginEntry>}\r\n    */\r\n   #pluginMap = new Map();\r\n\r\n   /**\r\n    * Provides an array of PluginSupportImpl interfaces to extend the plugin manager through the eventbus API.\r\n    *\r\n    * @type {import('./interfaces').PluginSupportImpl[]}\r\n    */\r\n   #pluginSupport = [];\r\n\r\n   /**\r\n    * Instantiates PluginManager\r\n    *\r\n    * @param {object}   [options] - Provides various configuration options:\r\n    *\r\n    * @param {import('#runtime/plugin/manager/eventbus').Eventbus} [options.eventbus] - An instance of '@typhonjs-plugin/eventbus'\r\n    *        used as the plugin eventbus. If not provided a default eventbus is created.\r\n    *\r\n    * @param {string}   [options.eventPrepend='plugin'] - A customized name to prepend PluginManager events on the\r\n    *                                                     eventbus.\r\n    *\r\n    * @param {import('.').PluginManagerOptions}  [options.manager] - The plugin manager options.\r\n    *\r\n    * @param {(\r\n    *    import('./interfaces').PluginSupportConstructor |\r\n    *    Iterable<import('./interfaces').PluginSupportConstructor>\r\n    * )} [options.PluginSupport] - Optional classes to pass in which extends the plugin manager. A default\r\n    * implementation is available: {@link PluginInvokeSupport}\r\n    */\r\n   constructor(options = {})\r\n   {\r\n      if (!isObject(options)) { throw new TypeError(`'options' is not an object.`); }\r\n\r\n      if (options.eventbus !== void 0 && !isObject(options.eventbus))\r\n      {\r\n         throw new TypeError(`'options.eventbus' is not an Eventbus.`);\r\n      }\r\n\r\n      if (options.eventPrepend !== void 0 && typeof options.eventPrepend !== 'string')\r\n      {\r\n         throw new TypeError(`'options.eventPrepend' is not a string.`);\r\n      }\r\n\r\n      if (options.manager !== void 0 && !isObject(options.manager))\r\n      {\r\n         throw new TypeError(`'options.manager' is not an object.`);\r\n      }\r\n\r\n      if (options.PluginSupport !== void 0 && typeof options.PluginSupport !== 'function' &&\r\n       !isIterable(options.PluginSupport))\r\n      {\r\n         throw new TypeError(\r\n          `'options.PluginSupport' must be a constructor function or iterable of such matching PluginSupportImpl.`);\r\n      }\r\n\r\n      // Instantiate any PluginSupport classes\r\n      if (isIterable(options.PluginSupport) && Symbol.iterator in options.PluginSupport)\r\n      {\r\n         for (const PluginSupport of options.PluginSupport)\r\n         {\r\n            this.#pluginSupport.push(new PluginSupport(this));\r\n         }\r\n      }\r\n      else if (options.PluginSupport !== void 0 && !(Symbol.iterator in options.PluginSupport))\r\n      {\r\n         const PluginSupport = options.PluginSupport;\r\n         this.#pluginSupport.push(new PluginSupport(this));\r\n      }\r\n\r\n      this.setOptions(options.manager || {});\r\n\r\n      this.setEventbus({\r\n         eventbus: options.eventbus !== void 0 ? options.eventbus : new Eventbus(),\r\n         eventPrepend: options.eventPrepend\r\n      });\r\n   }\r\n\r\n   /**\r\n    * Adds a plugin by the given configuration parameters. A plugin `name` is always required. If no other options\r\n    * are provided then the `name` doubles as the NPM module / local file to load. The loading first checks for an\r\n    * existing `instance` to use as the plugin. Then the `target` is chosen as the NPM module / local file to load.\r\n    * By passing in `options` this will be stored and accessible to the plugin during all callbacks.\r\n    *\r\n    * @param {import('.').PluginConfig}   pluginConfig - Defines the plugin to load.\r\n    *\r\n    * @param {object}         [moduleData] - Optional object hash to associate with plugin.\r\n    *\r\n    * @returns {Promise<import('.').PluginData>} The PluginData that represents the plugin added.\r\n    */\r\n   async add(pluginConfig, moduleData)\r\n   {\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      if (typeof pluginConfig !== 'object') { throw new TypeError(`'pluginConfig' is not an object.`); }\r\n\r\n      if (typeof pluginConfig.name !== 'string')\r\n      {\r\n         throw new TypeError(\r\n          `'pluginConfig.name' is not a string for entry:\\n${JSON.stringify(pluginConfig, null, 3)}`);\r\n      }\r\n\r\n      if (pluginConfig.target !== void 0 && typeof pluginConfig.target !== 'string' &&\r\n       !(pluginConfig.target instanceof URL))\r\n      {\r\n         throw new TypeError(\r\n          `'pluginConfig.target' is not a string or URL for entry:\\n${JSON.stringify(pluginConfig, null, 3)}`);\r\n      }\r\n\r\n      if (pluginConfig.options !== void 0 && typeof pluginConfig.options !== 'object')\r\n      {\r\n         throw new TypeError(\r\n          `'pluginConfig.options' is not an object for entry:\\n${JSON.stringify(pluginConfig, null, 3)}`);\r\n      }\r\n\r\n      if (moduleData !== void 0 && typeof moduleData !== 'object')\r\n      {\r\n         throw new TypeError(`'moduleData' is not an object for entry:\\n${JSON.stringify(pluginConfig, null, 3)}`);\r\n      }\r\n\r\n      // If a plugin with the same name already exists post a warning and exit early.\r\n      if (this.#pluginMap.has(pluginConfig.name))\r\n      {\r\n         throw new Error(`A plugin already exists with name: ${pluginConfig.name} for entry:\\n${\r\n          JSON.stringify(pluginConfig, null, 3)}`);\r\n      }\r\n\r\n      // If a plugin with the same name is also being currently loaded post a warning and exit early. This is the case\r\n      // when add is used without await and multiple plugins w/ the same name are being dynamically imported.\r\n      if (this.#pluginAddSet.has(pluginConfig.name))\r\n      {\r\n         throw new Error(`A plugin is already being loaded with name: ${pluginConfig.name} for entry:\\n${\r\n          JSON.stringify(pluginConfig, null, 3)}`);\r\n      }\r\n\r\n      this.#pluginAddSet.add(pluginConfig.name);\r\n\r\n      let instance, target, type;\r\n\r\n      // Use an existing instance of a plugin; a static class is assumed when instance is a function.\r\n      if (typeof pluginConfig.instance === 'object' || typeof pluginConfig.instance === 'function')\r\n      {\r\n         instance = pluginConfig.instance;\r\n\r\n         target = pluginConfig.name;\r\n\r\n         type = 'instance';\r\n      }\r\n      else\r\n      {\r\n         // If a target is defined use it instead of the name.\r\n         target = pluginConfig.target || pluginConfig.name;\r\n\r\n         try\r\n         {\r\n            const result = await ModuleLoader.load({ modulepath: target, resolveModule });\r\n\r\n            // Please note that a plugin or other logger must be setup on the associated eventbus.\r\n            if (this.#eventbus !== null)\r\n            {\r\n               this.#eventbus.trigger('log:debug',\r\n                `@typhonjs-plugin/manager - ${result.isESM ? 'import' : 'require'}: ${result.loadpath}`);\r\n            }\r\n\r\n            instance = result.instance;\r\n            type = result.type;\r\n         }\r\n         catch (err)\r\n         {\r\n            // Remove tracking of given plugin config name.\r\n            this.#pluginAddSet.delete(pluginConfig.name);\r\n\r\n            throw new Error(`@typhonjs-plugin/manager - Could not load target: ${target}\\n\\nPluginConfig:\\n` +\r\n             `${JSON.stringify(pluginConfig, null, 3)}\\n\\n${err}`);\r\n         }\r\n      }\r\n\r\n      // Convert any URL target a string.\r\n      if (target instanceof URL)\r\n      {\r\n         target = target.toString();\r\n      }\r\n\r\n      /**\r\n       * Create an object hash with data describing the plugin, manager, and any extra module data.\r\n       *\r\n       * @type {import('.').PluginData}\r\n       */\r\n      const pluginData = JSON.parse(JSON.stringify(\r\n      {\r\n         manager:\r\n         {\r\n            eventPrepend: this._eventPrepend,\r\n            scopedName: `${this._eventPrepend}:${pluginConfig.name}`\r\n         },\r\n\r\n         module: moduleData || {},\r\n\r\n         plugin:\r\n         {\r\n            name: pluginConfig.name,\r\n            target,\r\n            targetEscaped: escapeTarget(target),\r\n            type,\r\n            options: pluginConfig.options || {}\r\n         }\r\n      }));\r\n\r\n      deepFreeze(pluginData, new Set(['manager']));\r\n\r\n      const eventbusProxy = this.#eventbus !== null && this.#eventbus !== void 0 ?\r\n       new EventbusProxy(this.#eventbus) /* c8 ignore next */ : void 0;\r\n\r\n      const entry = new PluginEntry(pluginConfig.name, pluginData, instance, eventbusProxy);\r\n\r\n      this.#pluginMap.set(pluginConfig.name, entry);\r\n      this.#pluginAddSet.delete(pluginConfig.name);\r\n\r\n      // Invokes the private internal async events method which allows skipping of error checking.\r\n      const invokeData = await invokeAsyncEvent({\r\n         method: 'onPluginLoad',\r\n         manager: this,\r\n         plugins: pluginConfig.name,\r\n         errorCheck: false\r\n      });\r\n\r\n      if (typeof invokeData.importmeta === 'object')\r\n      {\r\n         entry.importmeta = invokeData.importmeta;\r\n\r\n         // Until we get a Snowpack HMR spec environment for testing ignore this block.\r\n         /* c8 ignore next 7 */\r\n         if (typeof invokeData.importmeta.hot === 'object' && typeof invokeData.importmeta.hot.accept === 'function')\r\n         {\r\n            invokeData.importmeta.hot.accept(({ module }) =>\r\n            {\r\n               this.reload({ plugin: pluginConfig.name, instance: resolveModule(module) });\r\n            });\r\n         }\r\n      }\r\n\r\n      // Invoke `typhonjs:plugin:manager:plugin:added` allowing external code to react to plugin addition.\r\n      if (this.#eventbus)\r\n      {\r\n         await this.#eventbus.triggerAsync(`typhonjs:plugin:manager:plugin:added`, pluginData);\r\n      }\r\n\r\n      return pluginData;\r\n   }\r\n\r\n   /**\r\n    * Initializes multiple plugins in a single call.\r\n    *\r\n    * @param {Iterable<import('.').PluginConfig>}   pluginConfigs - An iterable list of plugin config object hash entries.\r\n    *\r\n    * @param {object}                   [moduleData] - Optional object hash to associate with all plugins.\r\n    *\r\n    * @returns {Promise<import('.').PluginData[]>} An array of PluginData objects of all added plugins.\r\n    */\r\n   async addAll(pluginConfigs, moduleData)\r\n   {\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      if (!isIterable(pluginConfigs)) { throw new TypeError(`'pluginConfigs' is not iterable.`); }\r\n\r\n      const pluginsData = [];\r\n\r\n      for (const pluginConfig of pluginConfigs)\r\n      {\r\n         const result = await this.add(pluginConfig, moduleData);\r\n\r\n         if (result) { pluginsData.push(result); }\r\n      }\r\n\r\n      return pluginsData;\r\n   }\r\n\r\n   /**\r\n    * Provides the eventbus callback which may prevent addition if optional `noEventAdd` is enabled. This disables\r\n    * the ability for plugins to be added via events preventing any external code adding plugins in this manner.\r\n    *\r\n    * @param {import('.').PluginConfig}   pluginConfig - Defines the plugin to load.\r\n    *\r\n    * @param {object}         [moduleData] - Optional object hash to associate with all plugins.\r\n    *\r\n    * @returns {Promise<import('.').PluginData>} The PluginData that represents the plugin added.\r\n    * @private\r\n    */\r\n   async _addEventbus(pluginConfig, moduleData)\r\n   {\r\n      /* c8 ignore next */\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      return !this.#options.noEventAdd ? this.add(pluginConfig, moduleData) : void 0;\r\n   }\r\n\r\n   /**\r\n    * Provides the eventbus callback which may prevent addition if optional `noEventAdd` is enabled. This disables\r\n    * the ability for plugins to be added via events preventing any external code adding plugins in this manner.\r\n    *\r\n    * @param {Iterable<import('.').PluginConfig>}  pluginConfigs - An iterable list of plugin config object hash entries.\r\n    *\r\n    * @param {object}                  [moduleData] - Optional object hash to associate with all plugins.\r\n    *\r\n    * @returns {Promise<import('.').PluginData[]>} An array of PluginData objects of all added plugins.\r\n    * @private\r\n    */\r\n   async _addAllEventbus(pluginConfigs, moduleData)\r\n   {\r\n      /* c8 ignore next */\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      return !this.#options.noEventAdd ? this.addAll(pluginConfigs, moduleData) : [];\r\n   }\r\n\r\n   /**\r\n    * If an eventbus is assigned to this plugin manager then a new EventbusProxy wrapping this eventbus is returned.\r\n    * It is added to `this.#eventbusProxies` so †hat the instances are destroyed when the plugin manager is destroyed.\r\n    *\r\n    * @returns {import('#runtime/plugin/manager/eventbus').EventbusProxy} A proxy for the currently set Eventbus.\r\n    */\r\n   createEventbusProxy()\r\n   {\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      /* c8 ignore next */\r\n      if (this.#eventbus === null) { throw new ReferenceError('No eventbus assigned to plugin manager.'); }\r\n\r\n      const eventbusProxy = new EventbusProxy(this.#eventbus);\r\n\r\n      // Store proxy to make sure it is destroyed when the plugin manager is destroyed.\r\n      this.#eventbusProxies.push(eventbusProxy);\r\n\r\n      return eventbusProxy;\r\n   }\r\n\r\n   /**\r\n    * If an eventbus is assigned to this plugin manager then a new EventbusSecure wrapping this eventbus is returned.\r\n    * It is added to `this.#eventbusSecure` so †hat the instances are destroyed when the plugin manager is destroyed.\r\n    *\r\n    * @param {string}   [name] - Optional name for the EventbusSecure instance.\r\n    *\r\n    * @returns {import('#runtime/plugin/manager/eventbus').EventbusSecure} A secure wrapper for the currently set Eventbus.\r\n    */\r\n   createEventbusSecure(name = void 0)\r\n   {\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      /* c8 ignore next */\r\n      if (this.#eventbus === null) { throw new ReferenceError('No eventbus assigned to plugin manager.'); }\r\n\r\n      const eventbusSecureObj = EventbusSecure.initialize(this.#eventbus, name);\r\n\r\n      // Store EventbusSecure object to make sure it is destroyed when the plugin manager is destroyed.\r\n      this.#eventbusSecure.push(eventbusSecureObj);\r\n\r\n      return eventbusSecureObj.eventbusSecure;\r\n   }\r\n\r\n   /**\r\n    * Destroys all managed plugins after unloading them.\r\n    *\r\n    * @returns {Promise<import('.').DataOutPluginRemoved[]>} A list of plugin names and removal success state.\r\n    */\r\n   async destroy()\r\n   {\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      // Remove all plugins; this will invoke onPluginUnload.\r\n      const results = await this.removeAll();\r\n\r\n      // Destroy any EventbusSecure instances created.\r\n      for (const eventbusSecureObj of this.#eventbusSecure)\r\n      {\r\n         eventbusSecureObj.destroy();\r\n      }\r\n\r\n      this.#eventbusSecure = [];\r\n\r\n      // Destroy any EventbusProxy instances created.\r\n      for (const eventbusProxy of this.#eventbusProxies)\r\n      {\r\n         eventbusProxy.destroy();\r\n      }\r\n\r\n      this.#eventbusProxies = [];\r\n\r\n      if (this.#eventbus !== null && this.#eventbus !== void 0)\r\n      {\r\n         this.#eventbus.off(`${this._eventPrepend}:async:add`, this._addEventbus, this);\r\n         this.#eventbus.off(`${this._eventPrepend}:async:add:all`, this._addAllEventbus, this);\r\n         this.#eventbus.off(`${this._eventPrepend}:async:destroy:manager`, this._destroyEventbus, this);\r\n         this.#eventbus.off(`${this._eventPrepend}:async:remove`, this._removeEventbus, this);\r\n         this.#eventbus.off(`${this._eventPrepend}:async:remove:all`, this._removeAllEventbus, this);\r\n         this.#eventbus.off(`${this._eventPrepend}:get:enabled`, this.getEnabled, this);\r\n         this.#eventbus.off(`${this._eventPrepend}:get:plugin:by:event`, this.getPluginByEvent, this);\r\n         this.#eventbus.off(`${this._eventPrepend}:get:plugin:data`, this.getPluginData, this);\r\n         this.#eventbus.off(`${this._eventPrepend}:get:plugin:events`, this.getPluginEvents, this);\r\n         this.#eventbus.off(`${this._eventPrepend}:get:plugin:names`, this.getPluginNames, this);\r\n         this.#eventbus.off(`${this._eventPrepend}:get:options`, this.getOptions, this);\r\n         this.#eventbus.off(`${this._eventPrepend}:has:plugin`, this.hasPlugins, this);\r\n         this.#eventbus.off(`${this._eventPrepend}:is:valid:config`, this.isValidConfig, this);\r\n         this.#eventbus.off(`${this._eventPrepend}:set:enabled`, this._setEnabledEventbus, this);\r\n         this.#eventbus.off(`${this._eventPrepend}:set:options`, this._setOptionsEventbus, this);\r\n      }\r\n\r\n      for (const pluginSupport of this.#pluginSupport)\r\n      {\r\n         await pluginSupport.destroy({ eventbus: this.#eventbus, eventPrepend: this._eventPrepend });\r\n      }\r\n\r\n      this.#pluginSupport = [];\r\n      this.#pluginMap = null;\r\n      this.#eventbus = null;\r\n\r\n      return results;\r\n   }\r\n\r\n   /**\r\n    * Provides the eventbus callback which may prevent plugin manager destruction if optional `noEventDestroy` is\r\n    * enabled. This disables the ability for the plugin manager to be destroyed via events preventing any external\r\n    * code removing plugins in this manner.\r\n    *\r\n    * @private\r\n    * @returns {Promise<import('.').DataOutPluginRemoved[]>} A list of plugin names and removal success state.\r\n    */\r\n   async _destroyEventbus()\r\n   {\r\n      /* c8 ignore next */\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      return !this.#options.noEventDestroy ? this.destroy() : [];\r\n   }\r\n\r\n   /**\r\n    * Returns whether this plugin manager has been destroyed.\r\n    *\r\n    * @returns {boolean} Returns whether this plugin manager has been destroyed.\r\n    */\r\n   get isDestroyed()\r\n   {\r\n      return this.#pluginMap === null || this.#pluginMap === void 0;\r\n   }\r\n\r\n   /**\r\n    * Returns the enabled state of a plugin, a list of plugins, or all plugins.\r\n    *\r\n    * @param {object}                  [opts] - Options object. If undefined all plugin enabled state is returned.\r\n    *\r\n    * @param {string|Iterable<string>} [opts.plugins] - Plugin name or iterable list of names to get state.\r\n    *\r\n    * @returns {boolean|import('.').DataOutPluginEnabled[]} Enabled state for single plugin or array of results for multiple\r\n    *                                                plugins.\r\n    */\r\n   getEnabled({ plugins = [] } = {})\r\n   {\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      if (typeof plugins !== 'string' && !isIterable(plugins))\r\n      {\r\n         throw new TypeError(`'plugins' is not a string or iterable.`);\r\n      }\r\n\r\n      // Return a single boolean enabled result for a single plugin if found.\r\n      if (typeof plugins === 'string')\r\n      {\r\n         const entry = this.#pluginMap.get(plugins);\r\n         return entry !== void 0 && entry.enabled;\r\n      }\r\n\r\n      const results = [];\r\n\r\n      let count = 0;\r\n\r\n      for (const plugin of plugins)\r\n      {\r\n         const entry = this.#pluginMap.get(plugin);\r\n         const loaded = entry !== void 0;\r\n         results.push({ plugin, enabled: loaded && entry.enabled, loaded });\r\n         count++;\r\n      }\r\n\r\n      // Iterable plugins had no entries so return all plugin data.\r\n      if (count === 0)\r\n      {\r\n         for (const [plugin, entry] of this.#pluginMap.entries())\r\n         {\r\n            const loaded = entry !== void 0;\r\n            results.push({ plugin, enabled: loaded && entry.enabled, loaded });\r\n         }\r\n      }\r\n\r\n      return results;\r\n   }\r\n\r\n   /**\r\n    * Returns any associated eventbus.\r\n    *\r\n    * @returns {import('#runtime/plugin/manager/eventbus').EventBus} The associated eventbus.\r\n    */\r\n   getEventbus()\r\n   {\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      return this.#eventbus;\r\n   }\r\n\r\n   /**\r\n    * Returns a copy of the plugin manager options.\r\n    *\r\n    * @returns {import('.').PluginManagerOptions} A copy of the plugin manager options.\r\n    */\r\n   getOptions()\r\n   {\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      return JSON.parse(JSON.stringify(this.#options));\r\n   }\r\n\r\n   /**\r\n    * Returns the event binding names registered on any associated plugin EventbusProxy.\r\n    *\r\n    * @param {object}          opts - Options object.\r\n    *\r\n    * @param {string|RegExp}   opts.event - Event name or RegExp to match event names.\r\n    *\r\n    * @returns {string[] | import('.').DataOutPluginEvents[]} Event binding names registered from the plugin.\r\n    */\r\n   getPluginByEvent({ event })\r\n   {\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      if (typeof event !== 'string' && !(event instanceof RegExp))\r\n      {\r\n         throw new TypeError(`'event' is not a string or RegExp.`);\r\n      }\r\n\r\n      const pluginEvents = this.getPluginEvents();\r\n\r\n      const results = [];\r\n\r\n      if (typeof event === 'string')\r\n      {\r\n         for (const entry of pluginEvents)\r\n         {\r\n            if (entry.events.includes(event)) { results.push(entry.plugin); }\r\n         }\r\n      }\r\n      else\r\n      {\r\n         for (const entry of pluginEvents)\r\n         {\r\n            for (const eventEntry of entry.events)\r\n            {\r\n               if (event.test(eventEntry))\r\n               {\r\n                  results.push(entry.plugin);\r\n                  break;\r\n               }\r\n            }\r\n         }\r\n      }\r\n\r\n      return results;\r\n   }\r\n\r\n   /**\r\n    * Gets the plugin data for a plugin, list of plugins, or all plugins.\r\n    *\r\n    * @param {object}                  [opts] - Options object. If undefined all plugin data is returned.\r\n    *\r\n    * @param {string|Iterable<string>} [opts.plugins] - Plugin name or iterable list of names to get plugin data.\r\n    *\r\n    * @returns {import('.').PluginData | import('.').PluginData[] | undefined} The plugin data for a plugin or list of plugins.\r\n    */\r\n   getPluginData({ plugins = [] } = {})\r\n   {\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      if (typeof plugins !== 'string' && !isIterable(plugins))\r\n      {\r\n         throw new TypeError(`'plugins' is not a string or iterable.`);\r\n      }\r\n\r\n      // Return a PluginData result for a single plugin if found.\r\n      if (typeof plugins === 'string')\r\n      {\r\n         const entry = this.#pluginMap.get(plugins);\r\n         return entry !== void 0 ? JSON.parse(JSON.stringify(entry.data)) : void 0;\r\n      }\r\n\r\n      const results = [];\r\n\r\n      let count = 0;\r\n\r\n      for (const name of plugins)\r\n      {\r\n         const entry = this.#pluginMap.get(name);\r\n\r\n         if (entry !== void 0)\r\n         {\r\n            results.push(JSON.parse(JSON.stringify(entry.data)));\r\n         }\r\n         count++;\r\n      }\r\n\r\n      // Iterable plugins had no entries so return all plugin data.\r\n      if (count === 0)\r\n      {\r\n         for (const entry of this.#pluginMap.values())\r\n         {\r\n            if (entry !== void 0)\r\n            {\r\n               results.push(JSON.parse(JSON.stringify(entry.data)));\r\n            }\r\n         }\r\n      }\r\n\r\n      return results;\r\n   }\r\n\r\n   /**\r\n    * Gets a PluginEntry instance for the given plugin name. This method is primarily for {@link PluginSupportImpl}\r\n    * classes.\r\n    *\r\n    * @param {string} plugin - The plugin name to get.\r\n    *\r\n    * @returns {import('./PluginEntry.js').PluginEntry} The PluginEntry for the given plugin name.\r\n    */\r\n   getPluginEntry(plugin)\r\n   {\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      return this.#pluginMap.get(plugin);\r\n   }\r\n\r\n   /**\r\n    * Returns the event binding names registered on any associated plugin EventbusProxy.\r\n    *\r\n    * @param {object}                     [opts] - Options object. If undefined all plugin data is returned.\r\n    *\r\n    * @param {string | Iterable<string>}  [opts.plugins] - Plugin name or iterable list of names to get plugin data.\r\n    *\r\n    * @returns {import('.').DataOutPluginEvents[]} Event binding names registered from the plugin.\r\n    */\r\n   getPluginEvents({ plugins = [] } = {})\r\n   {\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      if (typeof plugins !== 'string' && !isIterable(plugins))\r\n      {\r\n         throw new TypeError(`'plugins' is not a string or iterable.`);\r\n      }\r\n\r\n      // Return a PluginData result for a single plugin if found.\r\n      if (typeof plugins === 'string')\r\n      {\r\n         const entry = this.#pluginMap.get(plugins);\r\n         return entry !== void 0 && entry.eventbusProxy ? [{\r\n            plugin: plugins,\r\n            events: Array.from(entry.eventbusProxy.proxyKeys()).sort()\r\n         }] /* c8 ignore next */ : [];\r\n      }\r\n\r\n      /** @type {import('.').DataOutPluginEvents[]} */\r\n      const results = [];\r\n\r\n      let count = 0;\r\n\r\n      for (const plugin of plugins)\r\n      {\r\n         const entry = this.#pluginMap.get(plugin);\r\n\r\n         if (entry !== void 0)\r\n         {\r\n            results.push({\r\n               plugin,\r\n               events: entry.eventbusProxy ?\r\n                Array.from(entry.eventbusProxy.proxyKeys()).sort() /* c8 ignore next */ : []\r\n            });\r\n         }\r\n         count++;\r\n      }\r\n\r\n      // Iterable plugins had no entries so return all plugin data.\r\n      if (count === 0)\r\n      {\r\n         for (const entry of this.#pluginMap.values())\r\n         {\r\n            if (entry !== void 0)\r\n            {\r\n               results.push({\r\n                  plugin: entry.name,\r\n                  events: entry.eventbusProxy ?\r\n                   Array.from(entry.eventbusProxy.proxyKeys()).sort() /* c8 ignore next */ : []\r\n               });\r\n            }\r\n         }\r\n      }\r\n\r\n      return results;\r\n   }\r\n\r\n   /**\r\n    * Returns an iterable of plugin map keys (plugin names). This method is primarily for {@link PluginSupportImpl}\r\n    * classes.\r\n    *\r\n    * @returns {Iterable<string>} An iterable of plugin map keys.\r\n    */\r\n   getPluginMapKeys()\r\n   {\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      return this.#pluginMap.keys();\r\n   }\r\n\r\n   /**\r\n    * Returns an iterable of plugin map keys (plugin names). This method is primarily for {@link PluginSupportImpl}\r\n    * classes.\r\n    *\r\n    * @returns {Iterable<PluginEntry>} An iterable of plugin map keys.\r\n    */\r\n   getPluginMapValues()\r\n   {\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      return this.#pluginMap.values();\r\n   }\r\n\r\n   /**\r\n    * Returns all plugin names or if enabled is set then return plugins matching the enabled state.\r\n    *\r\n    * @param {object}  [opts] - Options object. If undefined all plugin names are returned regardless of enabled state.\r\n    *\r\n    * @param {boolean} [opts.enabled] - If enabled is a boolean it will return plugins given their enabled state.\r\n    *\r\n    * @returns {string[]} A list of plugin names optionally by enabled state.\r\n    */\r\n   getPluginNames({ enabled = void 0 } = {})\r\n   {\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      if (enabled !== void 0 && typeof enabled !== 'boolean')\r\n      {\r\n         throw new TypeError(`'enabled' is not a boolean.`);\r\n      }\r\n\r\n      const anyEnabledState = enabled === void 0;\r\n\r\n      const results = [];\r\n\r\n      for (const entry of this.#pluginMap.values())\r\n      {\r\n         if (anyEnabledState || entry.enabled === enabled) { results.push(entry.name); }\r\n      }\r\n\r\n      return results.sort();\r\n   }\r\n\r\n   /**\r\n    * Returns true if there is a plugin loaded with the given plugin name(s). If no options are provided then\r\n    * the result will be if any plugins are loaded.\r\n    *\r\n    * @param {object}                  [opts] - Options object. If undefined returns whether there are any plugins.\r\n    *\r\n    * @param {string|Iterable<string>} [opts.plugins] - Plugin name or iterable list of names to check existence.\r\n    *\r\n    * @returns {boolean} True if given plugin(s) exist.\r\n    */\r\n   hasPlugins({ plugins = [] } = {})\r\n   {\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      if (typeof plugins !== 'string' && !isIterable(plugins))\r\n      {\r\n         throw new TypeError(`'plugins' is not a string or iterable.`);\r\n      }\r\n\r\n      // Return whether a single plugin exists.\r\n      if (typeof plugins === 'string')\r\n      {\r\n         return this.#pluginMap.has(plugins);\r\n      }\r\n\r\n      let count = 0;\r\n\r\n      // Return whether all plugins specified exist.\r\n      for (const name of plugins)\r\n      {\r\n         if (!this.#pluginMap.has(name)) { return false; }\r\n\r\n         count++;\r\n      }\r\n\r\n      // Iterable plugins had no entries so simply check size of the map.\r\n      if (count === 0)\r\n      {\r\n         return this.#pluginMap.size !== 0;\r\n      }\r\n\r\n      return true;\r\n   }\r\n\r\n   /**\r\n    * Performs validation of a PluginConfig.\r\n    *\r\n    * @param {import('.').PluginConfig}   pluginConfig - A PluginConfig to validate.\r\n    *\r\n    * @returns {boolean} True if the given PluginConfig is valid.\r\n    */\r\n   isValidConfig(pluginConfig)\r\n   {\r\n      return isValidConfig(pluginConfig);\r\n   }\r\n\r\n   /**\r\n    * Unloads / reloads the plugin invoking `onPluginUnload` / then `onPluginReload`\r\n    *\r\n    * @param {object}   opts - Options object.\r\n    *\r\n    * @param {string}   opts.plugin - Plugin name to reload.\r\n    *\r\n    * @param {object}   [opts.instance] - Optional instance to replace.\r\n    *\r\n    * @param {boolean}  [opts.silent] - Does not trigger any reload notification on the eventbus.\r\n    *\r\n    * @returns {Promise<boolean>} Result of reload attempt.\r\n    */\r\n   async reload({ plugin, instance = void 0, silent = false })\r\n   {\r\n      if (typeof plugin !== 'string') { throw new TypeError(`'plugin' is not a string.`); }\r\n      if (instance !== void 0 && typeof instance !== 'object') { throw new TypeError(`'instance' is not an object.`); }\r\n      if (typeof silent !== 'boolean') { throw new TypeError(`'silent' is not a boolean.`); }\r\n\r\n      const entry = this.#pluginMap.get(plugin);\r\n\r\n      if (entry === void 0) { return false; }\r\n\r\n      // Store any state to load into new plugin instance.\r\n      let state = void 0;\r\n\r\n      let error = void 0;\r\n\r\n      try\r\n      {\r\n         // Invokes the private internal async events method which allows skipping of error checking.\r\n         const unloadData = await invokeAsyncEvent({\r\n            method: 'onPluginUnload',\r\n            manager: this,\r\n            plugins: plugin,\r\n            errorCheck: false\r\n         });\r\n\r\n         state = unloadData.state;\r\n      }\r\n      catch (err)\r\n      {\r\n         error = err;\r\n      }\r\n\r\n      // Automatically clean up most resources.\r\n      entry.reset();\r\n\r\n      if (entry.eventbusProxy instanceof EventbusProxy) { entry.eventbusProxy.off(); }\r\n\r\n      if (typeof instance === 'object')\r\n      {\r\n         entry.instance = instance;\r\n      }\r\n\r\n      // Invokes the private internal async events method which allows skipping of error checking.\r\n      const invokeData = await invokeAsyncEvent({\r\n         method: 'onPluginLoad',\r\n         manager: this,\r\n         plugins: plugin,\r\n         passthruProps: { state },\r\n         errorCheck: false\r\n      });\r\n\r\n      // Invoke `typhonjs:plugin:manager:plugin:reloaded` allowing external code to react to plugin reload.\r\n      try\r\n      {\r\n         if (this.#eventbus && !silent)\r\n         {\r\n            await this.#eventbus.triggerAsync(`typhonjs:plugin:manager:plugin:reloaded`,\r\n             JSON.parse(JSON.stringify(entry.data)));\r\n         }\r\n      }\r\n      catch (err)\r\n      {\r\n         // Only track this error if no previous error exists from onPluginUnload invocation.\r\n         if (error === void 0) { error = err; }\r\n      }\r\n\r\n      if (typeof invokeData.importmeta === 'object')\r\n      {\r\n         entry.importmeta = invokeData.importmeta;\r\n\r\n         // Until we get a Snowpack HMR spec environment for testing ignore this block.\r\n         /* c8 ignore next 7 */\r\n         if (typeof invokeData.importmeta.hot === 'object' && typeof invokeData.importmeta.hot.accept === 'function')\r\n         {\r\n            invokeData.importmeta.hot.accept(({ module }) =>\r\n            {\r\n               this.reload({ plugin, instance: resolveModule(module) });\r\n            });\r\n         }\r\n      }\r\n\r\n      // Throw any error raised first from any onPluginUnload invocation then the\r\n      // `typhonjs:plugin:manager:plugin:reloaded` event.\r\n      if (error) { throw error; }\r\n\r\n      return true;\r\n  }\r\n\r\n   /**\r\n    * Removes a plugin by name or all names in an iterable list unloading them and clearing any event bindings\r\n    * automatically.\r\n    *\r\n    * @param {object}                  opts - Options object.\r\n    *\r\n    * @param {string|Iterable<string>} opts.plugins - Plugin name or iterable list of names to remove.\r\n    *\r\n    * @returns {Promise<import('.').DataOutPluginRemoved[]>} A list of plugin names and removal success state.\r\n    */\r\n   async remove({ plugins })\r\n   {\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      if (typeof plugins !== 'string' && !isIterable(plugins))\r\n      {\r\n         throw new TypeError(`'plugins' is not a string or iterable.`);\r\n      }\r\n\r\n      const removeEntry = async (entry) =>\r\n      {\r\n         const errors = [];\r\n\r\n         const pluginName = entry.name;\r\n\r\n         try\r\n         {\r\n            // Invokes the private internal async events method which allows skipping of error checking.\r\n            await invokeAsyncEvent({ method: 'onPluginUnload', manager: this, plugins: pluginName, errorCheck: false });\r\n         }\r\n         catch (err)\r\n         {\r\n            errors.push(err);\r\n         }\r\n\r\n         entry.reset();\r\n\r\n         if (entry.eventbusProxy instanceof EventbusProxy) { entry.eventbusProxy.destroy(); }\r\n\r\n         this.#pluginMap.delete(pluginName);\r\n\r\n         // Invoke `typhonjs:plugin:manager:plugin:removed` allowing external code to react to plugin removed.\r\n         try\r\n         {\r\n            if (this.#eventbus)\r\n            {\r\n               await this.#eventbus.triggerAsync(`typhonjs:plugin:manager:plugin:removed`,\r\n                JSON.parse(JSON.stringify(entry.data)));\r\n            }\r\n         }\r\n         catch (err)\r\n         {\r\n            errors.push(err);\r\n         }\r\n\r\n         return { plugin: pluginName, success: errors.length === 0, errors };\r\n      };\r\n\r\n      const results = [];\r\n\r\n      // Return a single boolean enabled result for a single plugin if found.\r\n      if (typeof plugins === 'string')\r\n      {\r\n         const entry = this.#pluginMap.get(plugins);\r\n\r\n         if (entry !== void 0)\r\n         {\r\n            results.push(await removeEntry(entry));\r\n         }\r\n      }\r\n      else\r\n      {\r\n         for (const name of plugins)\r\n         {\r\n            const entry = this.#pluginMap.get(name);\r\n\r\n            if (entry !== void 0)\r\n            {\r\n               results.push(await removeEntry(entry));\r\n            }\r\n         }\r\n      }\r\n\r\n      return results;\r\n   }\r\n\r\n   /**\r\n    * Removes all plugins after unloading them and clearing any event bindings automatically.\r\n    *\r\n    * @returns {Promise.<import('.').DataOutPluginRemoved[]>} A list of plugin names and removal success state.\r\n    */\r\n   async removeAll()\r\n   {\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      return this.remove({ plugins: Array.from(this.#pluginMap.keys()) });\r\n   }\r\n\r\n   /**\r\n    * Provides the eventbus callback which may prevent removal if optional `noEventRemoval` is enabled. This disables\r\n    * the ability for plugins to be removed via events preventing any external code removing plugins in this manner.\r\n    *\r\n    * @param {object}                  opts - Options object\r\n    *\r\n    * @param {string|Iterable<string>} opts.plugins - Plugin name or iterable list of names to remove.\r\n    *\r\n    * @returns {Promise<import('.').DataOutPluginRemoved[]>} A list of plugin names and removal success state.\r\n    * @private\r\n    */\r\n   async _removeEventbus(opts)\r\n   {\r\n      /* c8 ignore next */\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      return !this.#options.noEventRemoval ? this.remove(opts) : [];\r\n   }\r\n\r\n   /**\r\n    * Provides the eventbus callback which may prevent removal if optional `noEventRemoval` is enabled. This disables\r\n    * the ability for plugins to be removed via events preventing any external code removing plugins in this manner.\r\n    *\r\n    * @returns {Promise.<import('.').DataOutPluginRemoved[]>} A list of plugin names and removal success state.\r\n    * @private\r\n    */\r\n   async _removeAllEventbus()\r\n   {\r\n      /* c8 ignore next */\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      return !this.#options.noEventRemoval ? this.removeAll() : [];\r\n   }\r\n\r\n   /**\r\n    * Sets the enabled state of a plugin, a list of plugins, or all plugins.\r\n    *\r\n    * @param {object}            opts - Options object.\r\n    *\r\n    * @param {boolean}           opts.enabled - The enabled state.\r\n    *\r\n    * @param {string|Iterable<string>} [opts.plugins] - Plugin name or iterable list of names to set state.\r\n    */\r\n   setEnabled({ enabled, plugins = [] })\r\n   {\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      if (typeof plugins !== 'string' && !isIterable(plugins))\r\n      {\r\n         throw new TypeError(`'plugins' is not a string or iterable.`);\r\n      }\r\n\r\n      if (typeof enabled !== 'boolean') { throw new TypeError(`'enabled' is not a boolean.`); }\r\n\r\n      const setEntryEnabled = (entry) =>\r\n      {\r\n         if (entry !== void 0)\r\n         {\r\n            entry.enabled = enabled;\r\n\r\n            // Invoke `typhonjs:plugin:manager:plugin:enabled` allowing external code to react to plugin enabled state.\r\n            if (this.#eventbus)\r\n            {\r\n               this.#eventbus.trigger(`typhonjs:plugin:manager:plugin:enabled`, Object.assign({\r\n                  enabled\r\n               }, JSON.parse(JSON.stringify(entry.data))));\r\n            }\r\n         }\r\n      };\r\n\r\n      // Set enabled state for a single plugin if found.\r\n      if (typeof plugins === 'string')\r\n      {\r\n         setEntryEnabled(this.#pluginMap.get(plugins));\r\n      }\r\n\r\n      let count = 0;\r\n\r\n      // First attempt to iterate through plugins.\r\n      for (const name of plugins)\r\n      {\r\n         setEntryEnabled(this.#pluginMap.get(name));\r\n         count++;\r\n      }\r\n\r\n      // If plugins is empty then set all plugins enabled state.\r\n      if (count === 0)\r\n      {\r\n         for (const entry of this.#pluginMap.values())\r\n         {\r\n            setEntryEnabled(entry);\r\n         }\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Provides the eventbus callback which may prevent setEnabled if optional `noEventSetEnabled` is true. This\r\n    * disables the ability for setting plugin enabled state via events preventing any external code from setting state.\r\n    *\r\n    * @param {object}   opts - Options object.\r\n    *\r\n    * @private\r\n    */\r\n   _setEnabledEventbus(opts)\r\n   {\r\n      /* c8 ignore next */\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      if (!this.#options.noEventSetEnabled) { this.setEnabled(opts); }\r\n   }\r\n\r\n   /**\r\n    * Sets the eventbus associated with this plugin manager. If any previous eventbus was associated all plugin manager\r\n    * events will be removed then added to the new eventbus. If there are any existing plugins being managed their\r\n    * events will be removed from the old eventbus and then `onPluginLoad` will be called with the new eventbus.\r\n    *\r\n    * @param {object}     opts - An options object.\r\n    *\r\n    * @param {import('#runtime/plugin/manager/eventbus').Eventbus}   opts.eventbus - The new eventbus to associate.\r\n    *\r\n    * @param {string}     [opts.eventPrepend='plugins'] - An optional string to prepend to all of the event\r\n    *                                                     binding targets.\r\n    */\r\n   async setEventbus({ eventbus, eventPrepend = 'plugins' })\r\n   {\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      if (!isObject(eventbus)) { throw new TypeError(`'eventbus' is not an Eventbus.`); }\r\n      if (typeof eventPrepend !== 'string') { throw new TypeError(`'eventPrepend' is not a string.`); }\r\n\r\n      // Early escape if the eventbus is the same as the current eventbus.\r\n      if (eventbus === this.#eventbus) { return; }\r\n\r\n      const oldPrepend = this._eventPrepend;\r\n\r\n      /**\r\n       * Stores the prepend string for eventbus registration.\r\n       *\r\n       * @type {string}\r\n       * @private\r\n       */\r\n      this._eventPrepend = eventPrepend;\r\n\r\n      // Unload and reload any existing plugins from the old eventbus to the target eventbus.\r\n      if (this.#pluginMap.size > 0)\r\n      {\r\n         // Invokes the private internal async events method which allows skipping of error checking.\r\n         await invokeAsyncEvent({ method: 'onPluginUnload', manager: this, errorCheck: false });\r\n\r\n         for (const entry of this.#pluginMap.values())\r\n         {\r\n            try\r\n            {\r\n               // Automatically remove any potential reference to a stored event proxy instance.\r\n               delete entry.instance._eventbus;\r\n            }\r\n            /* c8 ignore next */\r\n            catch (err) { /* nop */ }\r\n\r\n            entry.data.manager.eventPrepend = eventPrepend;\r\n            entry.data.manager.scopedName = `${eventPrepend}:${entry.name}`;\r\n\r\n            if (entry.eventbusProxy instanceof EventbusProxy) { entry.eventbusProxy.destroy(); }\r\n\r\n            entry.eventbusProxy = new EventbusProxy(eventbus);\r\n\r\n            // Invokes the private internal async events method which allows skipping of error checking.\r\n            if (entry.enabled)\r\n            {\r\n               await invokeAsyncEvent({\r\n                  method: 'onPluginLoad',\r\n                  manager: this,\r\n                  plugins: entry.name,\r\n                  errorCheck: false\r\n               });\r\n            }\r\n         }\r\n      }\r\n\r\n      if (this.#eventbus !== null)\r\n      {\r\n         this.#eventbus.off(`${oldPrepend}:async:add`, this._addEventbus, this);\r\n         this.#eventbus.off(`${oldPrepend}:async:add:all`, this._addAllEventbus, this);\r\n         this.#eventbus.off(`${oldPrepend}:async:destroy:manager`, this._destroyEventbus, this);\r\n         this.#eventbus.off(`${oldPrepend}:async:remove`, this._removeEventbus, this);\r\n         this.#eventbus.off(`${oldPrepend}:async:remove:all`, this._removeAllEventbus, this);\r\n         this.#eventbus.off(`${oldPrepend}:get:enabled`, this.getEnabled, this);\r\n         this.#eventbus.off(`${oldPrepend}:get:options`, this.getOptions, this);\r\n         this.#eventbus.off(`${oldPrepend}:get:plugin:by:event`, this.getPluginByEvent, this);\r\n         this.#eventbus.off(`${oldPrepend}:get:plugin:data`, this.getPluginData, this);\r\n         this.#eventbus.off(`${oldPrepend}:get:plugin:events`, this.getPluginEvents, this);\r\n         this.#eventbus.off(`${oldPrepend}:get:plugin:names`, this.getPluginNames, this);\r\n         this.#eventbus.off(`${oldPrepend}:has:plugin`, this.hasPlugins, this);\r\n         this.#eventbus.off(`${oldPrepend}:is:valid:config`, this.isValidConfig, this);\r\n         this.#eventbus.off(`${oldPrepend}:set:enabled`, this._setEnabledEventbus, this);\r\n         this.#eventbus.off(`${oldPrepend}:set:options`, this._setOptionsEventbus, this);\r\n      }\r\n\r\n      eventbus.on(`${eventPrepend}:async:add`, this._addEventbus, this, { guard: true });\r\n      eventbus.on(`${eventPrepend}:async:add:all`, this._addAllEventbus, this, { guard: true });\r\n      eventbus.on(`${eventPrepend}:async:destroy:manager`, this._destroyEventbus, this, { guard: true });\r\n      eventbus.on(`${eventPrepend}:async:remove`, this._removeEventbus, this, { guard: true });\r\n      eventbus.on(`${eventPrepend}:async:remove:all`, this._removeAllEventbus, this, { guard: true });\r\n      eventbus.on(`${eventPrepend}:get:enabled`, this.getEnabled, this, { guard: true });\r\n      eventbus.on(`${eventPrepend}:get:options`, this.getOptions, this, { guard: true });\r\n      eventbus.on(`${eventPrepend}:get:plugin:by:event`, this.getPluginByEvent, this, { guard: true });\r\n      eventbus.on(`${eventPrepend}:get:plugin:data`, this.getPluginData, this, { guard: true });\r\n      eventbus.on(`${eventPrepend}:get:plugin:events`, this.getPluginEvents, this, { guard: true });\r\n      eventbus.on(`${eventPrepend}:get:plugin:names`, this.getPluginNames, this, { guard: true });\r\n      eventbus.on(`${eventPrepend}:has:plugin`, this.hasPlugins, this, { guard: true });\r\n      eventbus.on(`${eventPrepend}:is:valid:config`, this.isValidConfig, this, { guard: true });\r\n      eventbus.on(`${eventPrepend}:set:enabled`, this._setEnabledEventbus, this, { guard: true });\r\n      eventbus.on(`${eventPrepend}:set:options`, this._setOptionsEventbus, this, { guard: true });\r\n\r\n      for (const pluginSupport of this.#pluginSupport)\r\n      {\r\n         pluginSupport.setEventbus({\r\n            oldEventbus: this.#eventbus,\r\n            newEventbus: eventbus,\r\n            oldPrepend,\r\n            newPrepend: eventPrepend\r\n         });\r\n      }\r\n\r\n      // Set the new eventbus for any EventbusSecure instances created.\r\n      for (const eventbusSecureObj of this.#eventbusSecure)\r\n      {\r\n         eventbusSecureObj.setEventbus(eventbus);\r\n      }\r\n\r\n      this.#eventbus = eventbus;\r\n   }\r\n\r\n   /**\r\n    * Set optional parameters.\r\n    *\r\n    * @param {import('.').PluginManagerOptions} options - Defines optional parameters to set.\r\n    */\r\n   setOptions(options)\r\n   {\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      if (!isObject(options)) { throw new TypeError(`'options' is not an object.`); }\r\n\r\n      if (typeof options.noEventAdd === 'boolean') { this.#options.noEventAdd = options.noEventAdd; }\r\n\r\n      if (typeof options.noEventDestroy === 'boolean') { this.#options.noEventDestroy = options.noEventDestroy; }\r\n\r\n      if (typeof options.noEventRemoval === 'boolean') { this.#options.noEventRemoval = options.noEventRemoval; }\r\n\r\n      if (typeof options.noEventSetEnabled === 'boolean')\r\n      {\r\n         this.#options.noEventSetEnabled = options.noEventSetEnabled;\r\n      }\r\n\r\n      if (typeof options.noEventSetOptions === 'boolean')\r\n      {\r\n         this.#options.noEventSetOptions = options.noEventSetOptions;\r\n      }\r\n\r\n      if (typeof options.throwNoMethod === 'boolean') { this.#options.throwNoMethod = options.throwNoMethod; }\r\n\r\n      if (typeof options.throwNoPlugin === 'boolean') { this.#options.throwNoPlugin = options.throwNoPlugin; }\r\n\r\n      for (const pluginSupport of this.#pluginSupport)\r\n      {\r\n         pluginSupport.setOptions(options);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Provides the eventbus callback which may prevent plugin manager options being set if optional `noEventSetOptions`\r\n    * is enabled. This disables the ability for the plugin manager options to be set via events preventing any external\r\n    * code modifying options.\r\n    *\r\n    * @param {import('.').PluginManagerOptions} options - Defines optional parameters to set.\r\n    *\r\n    * @private\r\n    */\r\n   _setOptionsEventbus(options)\r\n   {\r\n      /* c8 ignore next */\r\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\r\n\r\n      if (!this.#options.noEventSetOptions) { this.setOptions(options); }\r\n   }\r\n}\r\n"],"names":[],"mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,KAAK,GAAG,EAAE,CAAC,cAAc,CAAC;AAChC;AACA,MAAM,WAAW,GAAG,oBAAoB,CAAC;AACzC;AACA,MAAM,MAAM,GAAG,IAAI,GAAG,CAAC;AACvB,EAAE,QAAQ;AACV,EAAE,UAAU;AACZ,EAAE,QAAQ;AACV,EAAE,QAAQ;AACV;AACA,EAAE,UAAU;AACZ,EAAE,QAAQ;AACV,EAAE,SAAS;AACX,EAAE,QAAQ;AACV,EAAE,QAAQ;AACV,CAAC,CAAC,CAAC;AACH;AACA,MAAM,KAAK,GAAG,EAAE,CAAC;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,UAAU,CAAC,KAAK,EAAE,IAAI,GAAG,KAAK,EAAE;AACzC,EAAE,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC;AACzB,MAAM,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AAC7B,MAAM,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;AAC5E,CAAC;AACD;AACA;AACA,MAAM,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;AAC3B,MAAM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","x_google_ignoreList":[0,2]}