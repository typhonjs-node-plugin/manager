function cov_2pu10kubcy(){var path="/Volumes/Data/program/javascript/projects/TyphonJS/repos/typhonrt/typhonjs-plugin/manager/node_modules/@typhonjs-plugin/eventbus/src/EventbusProxy.js";var hash="c9ea3a6168e9041d9d2042196a698246986cb5d0";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Volumes/Data/program/javascript/projects/TyphonJS/repos/typhonrt/typhonjs-plugin/manager/node_modules/@typhonjs-plugin/eventbus/src/EventbusProxy.js",statementMap:{"0":{start:{line:31,column:6},end:{line:34,column:7}},"1":{start:{line:33,column:9},end:{line:33,column:75}},"2":{start:{line:42,column:6},end:{line:42,column:32}},"3":{start:{line:50,column:6},end:{line:50,column:24}},"4":{start:{line:59,column:6},end:{line:62,column:7}},"5":{start:{line:61,column:9},end:{line:61,column:109}},"6":{start:{line:61,column:45},end:{line:61,column:107}},"7":{start:{line:64,column:6},end:{line:64,column:24}},"8":{start:{line:66,column:6},end:{line:66,column:28}},"9":{start:{line:79,column:6},end:{line:79,column:115}},"10":{start:{line:79,column:37},end:{line:79,column:113}},"11":{start:{line:81,column:6},end:{line:84,column:7}},"12":{start:{line:83,column:9},end:{line:83,column:21}},"13":{start:{line:94,column:6},end:{line:94,column:115}},"14":{start:{line:94,column:37},end:{line:94,column:113}},"15":{start:{line:96,column:6},end:{line:96,column:39}},"16":{start:{line:106,column:6},end:{line:106,column:115}},"17":{start:{line:106,column:37},end:{line:106,column:113}},"18":{start:{line:108,column:6},end:{line:108,column:39}},"19":{start:{line:118,column:6},end:{line:118,column:37}},"20":{start:{line:128,column:6},end:{line:128,column:115}},"21":{start:{line:128,column:37},end:{line:128,column:113}},"22":{start:{line:130,column:6},end:{line:130,column:33}},"23":{start:{line:148,column:6},end:{line:148,column:115}},"24":{start:{line:148,column:37},end:{line:148,column:113}},"25":{start:{line:150,column:22},end:{line:150,column:66}},"26":{start:{line:151,column:26},end:{line:151,column:78}},"27":{start:{line:152,column:25},end:{line:152,column:75}},"28":{start:{line:155,column:6},end:{line:184,column:7}},"29":{start:{line:157,column:9},end:{line:157,column:109}},"30":{start:{line:157,column:45},end:{line:157,column:107}},"31":{start:{line:158,column:9},end:{line:158,column:27}},"32":{start:{line:162,column:24},end:{line:162,column:26}},"33":{start:{line:163,column:9},end:{line:163,column:45}},"34":{start:{line:163,column:24},end:{line:163,column:43}},"35":{start:{line:164,column:9},end:{line:164,column:57}},"36":{start:{line:164,column:28},end:{line:164,column:55}},"37":{start:{line:165,column:9},end:{line:165,column:54}},"38":{start:{line:165,column:27},end:{line:165,column:52}},"39":{start:{line:167,column:9},end:{line:183,column:10}},"40":{start:{line:167,column:25},end:{line:167,column:44}},"41":{start:{line:169,column:26},end:{line:169,column:44}},"42":{start:{line:171,column:29},end:{line:171,column:33}},"43":{start:{line:173,column:12},end:{line:176,column:13}},"44":{start:{line:175,column:15},end:{line:175,column:77}},"45":{start:{line:175,column:49},end:{line:175,column:68}},"46":{start:{line:175,column:69},end:{line:175,column:75}},"47":{start:{line:178,column:12},end:{line:182,column:13}},"48":{start:{line:180,column:15},end:{line:180,column:80}},"49":{start:{line:181,column:15},end:{line:181,column:44}},"50":{start:{line:186,column:6},end:{line:186,column:18}},"51":{start:{line:206,column:6},end:{line:206,column:115}},"52":{start:{line:206,column:37},end:{line:206,column:113}},"53":{start:{line:208,column:6},end:{line:208,column:49}},"54":{start:{line:210,column:6},end:{line:210,column:53}},"55":{start:{line:212,column:6},end:{line:212,column:18}},"56":{start:{line:224,column:6},end:{line:224,column:115}},"57":{start:{line:224,column:37},end:{line:224,column:113}},"58":{start:{line:227,column:6},end:{line:227,column:36}},"59":{start:{line:227,column:27},end:{line:227,column:34}},"60":{start:{line:229,column:6},end:{line:242,column:7}},"61":{start:{line:231,column:9},end:{line:234,column:10}},"62":{start:{line:233,column:12},end:{line:233,column:96}},"63":{start:{line:233,column:44},end:{line:233,column:94}},"64":{start:{line:238,column:9},end:{line:241,column:10}},"65":{start:{line:240,column:12},end:{line:240,column:62}},"66":{start:{line:252,column:6},end:{line:252,column:115}},"67":{start:{line:252,column:37},end:{line:252,column:113}},"68":{start:{line:254,column:6},end:{line:254,column:33}},"69":{start:{line:264,column:6},end:{line:264,column:115}},"70":{start:{line:264,column:37},end:{line:264,column:113}},"71":{start:{line:266,column:6},end:{line:266,column:39}},"72":{start:{line:266,column:27},end:{line:266,column:37}},"73":{start:{line:268,column:25},end:{line:268,column:27}},"74":{start:{line:270,column:6},end:{line:270,column:74}},"75":{start:{line:270,column:42},end:{line:270,column:72}},"76":{start:{line:272,column:6},end:{line:272,column:37}},"77":{start:{line:285,column:6},end:{line:285,column:115}},"78":{start:{line:285,column:37},end:{line:285,column:113}},"79":{start:{line:287,column:6},end:{line:287,column:43}},"80":{start:{line:289,column:6},end:{line:289,column:18}},"81":{start:{line:303,column:6},end:{line:303,column:115}},"82":{start:{line:303,column:37},end:{line:303,column:113}},"83":{start:{line:305,column:6},end:{line:305,column:55}},"84":{start:{line:317,column:6},end:{line:317,column:115}},"85":{start:{line:317,column:37},end:{line:317,column:113}},"86":{start:{line:319,column:6},end:{line:319,column:48}},"87":{start:{line:321,column:6},end:{line:321,column:18}},"88":{start:{line:334,column:6},end:{line:334,column:115}},"89":{start:{line:334,column:37},end:{line:334,column:113}},"90":{start:{line:336,column:6},end:{line:336,column:54}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:29,column:3},end:{line:29,column:4}},loc:{start:{line:30,column:3},end:{line:51,column:4}},line:30},"1":{name:"(anonymous_1)",decl:{start:{line:57,column:3},end:{line:57,column:4}},loc:{start:{line:58,column:3},end:{line:67,column:4}},line:58},"2":{name:"(anonymous_2)",decl:{start:{line:77,column:3},end:{line:77,column:4}},loc:{start:{line:78,column:3},end:{line:85,column:4}},line:78},"3":{name:"(anonymous_3)",decl:{start:{line:92,column:3},end:{line:92,column:4}},loc:{start:{line:93,column:3},end:{line:97,column:4}},line:93},"4":{name:"(anonymous_4)",decl:{start:{line:104,column:3},end:{line:104,column:4}},loc:{start:{line:105,column:3},end:{line:109,column:4}},line:105},"5":{name:"(anonymous_5)",decl:{start:{line:116,column:3},end:{line:116,column:4}},loc:{start:{line:117,column:3},end:{line:119,column:4}},line:117},"6":{name:"(anonymous_6)",decl:{start:{line:126,column:3},end:{line:126,column:4}},loc:{start:{line:127,column:3},end:{line:131,column:4}},line:127},"7":{name:"(anonymous_7)",decl:{start:{line:146,column:3},end:{line:146,column:4}},loc:{start:{line:147,column:3},end:{line:187,column:4}},line:147},"8":{name:"(anonymous_8)",decl:{start:{line:204,column:3},end:{line:204,column:4}},loc:{start:{line:205,column:3},end:{line:213,column:4}},line:205},"9":{name:"(anonymous_9)",decl:{start:{line:222,column:3},end:{line:222,column:4}},loc:{start:{line:223,column:3},end:{line:243,column:4}},line:223},"10":{name:"(anonymous_10)",decl:{start:{line:250,column:3},end:{line:250,column:4}},loc:{start:{line:251,column:3},end:{line:255,column:4}},line:251},"11":{name:"(anonymous_11)",decl:{start:{line:262,column:3},end:{line:262,column:4}},loc:{start:{line:263,column:3},end:{line:273,column:4}},line:263},"12":{name:"(anonymous_12)",decl:{start:{line:283,column:3},end:{line:283,column:4}},loc:{start:{line:284,column:3},end:{line:290,column:4}},line:284},"13":{name:"(anonymous_13)",decl:{start:{line:301,column:3},end:{line:301,column:4}},loc:{start:{line:302,column:3},end:{line:306,column:4}},line:302},"14":{name:"(anonymous_14)",decl:{start:{line:315,column:3},end:{line:315,column:4}},loc:{start:{line:316,column:3},end:{line:322,column:4}},line:316},"15":{name:"(anonymous_15)",decl:{start:{line:332,column:3},end:{line:332,column:4}},loc:{start:{line:333,column:3},end:{line:337,column:4}},line:333}},branchMap:{"0":{loc:{start:{line:31,column:6},end:{line:34,column:7}},type:"if",locations:[{start:{line:31,column:6},end:{line:34,column:7}},{start:{line:31,column:6},end:{line:34,column:7}}],line:31},"1":{loc:{start:{line:59,column:6},end:{line:62,column:7}},type:"if",locations:[{start:{line:59,column:6},end:{line:62,column:7}},{start:{line:59,column:6},end:{line:62,column:7}}],line:59},"2":{loc:{start:{line:77,column:12},end:{line:77,column:30}},type:"default-arg",locations:[{start:{line:77,column:24},end:{line:77,column:30}}],line:77},"3":{loc:{start:{line:79,column:6},end:{line:79,column:115}},type:"if",locations:[{start:{line:79,column:6},end:{line:79,column:115}},{start:{line:79,column:6},end:{line:79,column:115}}],line:79},"4":{loc:{start:{line:94,column:6},end:{line:94,column:115}},type:"if",locations:[{start:{line:94,column:6},end:{line:94,column:115}},{start:{line:94,column:6},end:{line:94,column:115}}],line:94},"5":{loc:{start:{line:106,column:6},end:{line:106,column:115}},type:"if",locations:[{start:{line:106,column:6},end:{line:106,column:115}},{start:{line:106,column:6},end:{line:106,column:115}}],line:106},"6":{loc:{start:{line:128,column:6},end:{line:128,column:115}},type:"if",locations:[{start:{line:128,column:6},end:{line:128,column:115}},{start:{line:128,column:6},end:{line:128,column:115}}],line:128},"7":{loc:{start:{line:146,column:7},end:{line:146,column:20}},type:"default-arg",locations:[{start:{line:146,column:14},end:{line:146,column:20}}],line:146},"8":{loc:{start:{line:146,column:22},end:{line:146,column:39}},type:"default-arg",locations:[{start:{line:146,column:33},end:{line:146,column:39}}],line:146},"9":{loc:{start:{line:146,column:41},end:{line:146,column:57}},type:"default-arg",locations:[{start:{line:146,column:51},end:{line:146,column:57}}],line:146},"10":{loc:{start:{line:148,column:6},end:{line:148,column:115}},type:"if",locations:[{start:{line:148,column:6},end:{line:148,column:115}},{start:{line:148,column:6},end:{line:148,column:115}}],line:148},"11":{loc:{start:{line:150,column:22},end:{line:150,column:66}},type:"binary-expr",locations:[{start:{line:150,column:22},end:{line:150,column:49}},{start:{line:150,column:53},end:{line:150,column:66}}],line:150},"12":{loc:{start:{line:151,column:26},end:{line:151,column:78}},type:"binary-expr",locations:[{start:{line:151,column:26},end:{line:151,column:57}},{start:{line:151,column:61},end:{line:151,column:78}}],line:151},"13":{loc:{start:{line:152,column:25},end:{line:152,column:75}},type:"binary-expr",locations:[{start:{line:152,column:25},end:{line:152,column:55}},{start:{line:152,column:59},end:{line:152,column:75}}],line:152},"14":{loc:{start:{line:155,column:6},end:{line:184,column:7}},type:"if",locations:[{start:{line:155,column:6},end:{line:184,column:7}},{start:{line:155,column:6},end:{line:184,column:7}}],line:155},"15":{loc:{start:{line:155,column:10},end:{line:155,column:49}},type:"binary-expr",locations:[{start:{line:155,column:10},end:{line:155,column:18}},{start:{line:155,column:22},end:{line:155,column:34}},{start:{line:155,column:38},end:{line:155,column:49}}],line:155},"16":{loc:{start:{line:163,column:9},end:{line:163,column:45}},type:"if",locations:[{start:{line:163,column:9},end:{line:163,column:45}},{start:{line:163,column:9},end:{line:163,column:45}}],line:163},"17":{loc:{start:{line:164,column:9},end:{line:164,column:57}},type:"if",locations:[{start:{line:164,column:9},end:{line:164,column:57}},{start:{line:164,column:9},end:{line:164,column:57}}],line:164},"18":{loc:{start:{line:165,column:9},end:{line:165,column:54}},type:"if",locations:[{start:{line:165,column:9},end:{line:165,column:54}},{start:{line:165,column:9},end:{line:165,column:54}}],line:165},"19":{loc:{start:{line:175,column:15},end:{line:175,column:77}},type:"if",locations:[{start:{line:175,column:15},end:{line:175,column:77}},{start:{line:175,column:15},end:{line:175,column:77}}],line:175},"20":{loc:{start:{line:178,column:12},end:{line:182,column:13}},type:"if",locations:[{start:{line:178,column:12},end:{line:182,column:13}},{start:{line:178,column:12},end:{line:182,column:13}}],line:178},"21":{loc:{start:{line:204,column:22},end:{line:204,column:38}},type:"default-arg",locations:[{start:{line:204,column:32},end:{line:204,column:38}}],line:204},"22":{loc:{start:{line:206,column:6},end:{line:206,column:115}},type:"if",locations:[{start:{line:206,column:6},end:{line:206,column:115}},{start:{line:206,column:6},end:{line:206,column:115}}],line:206},"23":{loc:{start:{line:222,column:17},end:{line:222,column:35}},type:"default-arg",locations:[{start:{line:222,column:29},end:{line:222,column:35}}],line:222},"24":{loc:{start:{line:224,column:6},end:{line:224,column:115}},type:"if",locations:[{start:{line:224,column:6},end:{line:224,column:115}},{start:{line:224,column:6},end:{line:224,column:115}}],line:224},"25":{loc:{start:{line:227,column:6},end:{line:227,column:36}},type:"if",locations:[{start:{line:227,column:6},end:{line:227,column:36}},{start:{line:227,column:6},end:{line:227,column:36}}],line:227},"26":{loc:{start:{line:229,column:6},end:{line:242,column:7}},type:"if",locations:[{start:{line:229,column:6},end:{line:242,column:7}},{start:{line:229,column:6},end:{line:242,column:7}}],line:229},"27":{loc:{start:{line:233,column:12},end:{line:233,column:96}},type:"if",locations:[{start:{line:233,column:12},end:{line:233,column:96}},{start:{line:233,column:12},end:{line:233,column:96}}],line:233},"28":{loc:{start:{line:252,column:6},end:{line:252,column:115}},type:"if",locations:[{start:{line:252,column:6},end:{line:252,column:115}},{start:{line:252,column:6},end:{line:252,column:115}}],line:252},"29":{loc:{start:{line:264,column:6},end:{line:264,column:115}},type:"if",locations:[{start:{line:264,column:6},end:{line:264,column:115}},{start:{line:264,column:6},end:{line:264,column:115}}],line:264},"30":{loc:{start:{line:266,column:6},end:{line:266,column:39}},type:"if",locations:[{start:{line:266,column:6},end:{line:266,column:39}},{start:{line:266,column:6},end:{line:266,column:39}}],line:266},"31":{loc:{start:{line:285,column:6},end:{line:285,column:115}},type:"if",locations:[{start:{line:285,column:6},end:{line:285,column:115}},{start:{line:285,column:6},end:{line:285,column:115}}],line:285},"32":{loc:{start:{line:303,column:6},end:{line:303,column:115}},type:"if",locations:[{start:{line:303,column:6},end:{line:303,column:115}},{start:{line:303,column:6},end:{line:303,column:115}}],line:303},"33":{loc:{start:{line:317,column:6},end:{line:317,column:115}},type:"if",locations:[{start:{line:317,column:6},end:{line:317,column:115}},{start:{line:317,column:6},end:{line:317,column:115}}],line:317},"34":{loc:{start:{line:334,column:6},end:{line:334,column:115}},type:"if",locations:[{start:{line:334,column:6},end:{line:334,column:115}},{start:{line:334,column:6},end:{line:334,column:115}}],line:334}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},b:{"0":[0,0],"1":[0,0],"2":[0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0],"8":[0],"9":[0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0],"22":[0,0],"23":[0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"c9ea3a6168e9041d9d2042196a698246986cb5d0"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2pu10kubcy=function(){return actualCoverage;};}return actualCoverage;}cov_2pu10kubcy();/**
 * EventbusProxy provides a protected proxy of another Eventbus instance.
 *
 * The main use case of EventbusProxy is to allow indirect access to an eventbus. This is handy when it comes to
 * managing the event lifecycle for a plugin system. When a plugin is added it could receive a callback, perhaps named
 * `onPluginLoaded`, which contains an EventbusProxy instance rather than the direct eventbus. This EventbusProxy
 * instance is associated in the management system controlling plugin lifecycle. When a plugin is removed / unloaded the
 * management system can automatically unregister all events for the plugin without requiring the plugin author doing it
 * correctly if they had full control. IE This allows to plugin system to guarantee no dangling listeners.
 *
 * EventbusProxy provides the on / off, once, and trigger methods with the same signatures as found in
 * Eventbus. However, the proxy tracks all added event bindings which is used to proxy between the target
 * eventbus which is passed in from the constructor. All registration methods (on / off / once) proxy. In addition
 * there is a `destroy` method which will unregister all of proxied events and remove references to the managed
 * eventbus. Any further usage of a destroyed EventbusProxy instance results in a ReferenceError thrown.
 *
 * Finally the EventbusProxy only allows events registered through it to be turned off providing a buffer between
 * any consumers such that they can not turn off other registrations made on the eventbus or other proxy instances.
 */class EventbusProxy{/**
    * Creates the event proxy with an existing instance of TyphonEvents.
    *
    * @param {Eventbus}   eventbus - The target eventbus instance.
    */constructor(eventbus){cov_2pu10kubcy().f[0]++;cov_2pu10kubcy().s[0]++;if(!(eventbus instanceof Eventbus)){cov_2pu10kubcy().b[0][0]++;cov_2pu10kubcy().s[1]++;throw new TypeError(`'eventbus' is not an instance of Eventbus.`);}else {cov_2pu10kubcy().b[0][1]++;}/**
       * Stores the target eventbus.
       *
       * @type {Eventbus}
       * @private
       */cov_2pu10kubcy().s[2]++;this._eventbus=eventbus;/**
       * Stores all proxied event bindings.
       *
       * @type {Array<{name: string, callback: Function, context: *}>}
       * @private
       */cov_2pu10kubcy().s[3]++;this._events=[];}/**
    * Unregisters all proxied events from the target eventbus and removes any local references. All subsequent calls
    * after `destroy` has been called result in a ReferenceError thrown.
    */destroy(){cov_2pu10kubcy().f[1]++;cov_2pu10kubcy().s[4]++;if(this._eventbus!==null){cov_2pu10kubcy().b[1][0]++;cov_2pu10kubcy().s[5]++;for(const event of this._events){cov_2pu10kubcy().s[6]++;this._eventbus.off(event.name,event.callback,event.context);}}else {cov_2pu10kubcy().b[1][1]++;}cov_2pu10kubcy().s[7]++;this._events=[];cov_2pu10kubcy().s[8]++;this._eventbus=null;}/**
    * Iterates over all of events from the proxied eventbus yielding an array with event name, callback function, and
    * event context.
    *
    * @param {string} [eventName] Optional event name to iterate over.
    *
    * @yields
    */*entries(eventName=(cov_2pu10kubcy().b[2][0]++,void 0)){cov_2pu10kubcy().f[2]++;cov_2pu10kubcy().s[9]++;if(this._eventbus===null){cov_2pu10kubcy().b[3][0]++;cov_2pu10kubcy().s[10]++;throw new ReferenceError('This EventbusProxy instance has been destroyed.');}else {cov_2pu10kubcy().b[3][1]++;}cov_2pu10kubcy().s[11]++;for(const entry of this._eventbus.entries(eventName)){cov_2pu10kubcy().s[12]++;yield entry;}}/**
    * Returns the current proxied eventbus event count.
    *
    * @returns {number} Returns the current proxied event count.
    */get eventCount(){cov_2pu10kubcy().f[3]++;cov_2pu10kubcy().s[13]++;if(this._eventbus===null){cov_2pu10kubcy().b[4][0]++;cov_2pu10kubcy().s[14]++;throw new ReferenceError('This EventbusProxy instance has been destroyed.');}else {cov_2pu10kubcy().b[4][1]++;}cov_2pu10kubcy().s[15]++;return this._eventbus.eventCount;}/**
    * Returns the event names of proxied eventbus event listeners.
    *
    * @returns {string[]} Returns the event names of proxied event listeners.
    */get eventNames(){cov_2pu10kubcy().f[4]++;cov_2pu10kubcy().s[16]++;if(this._eventbus===null){cov_2pu10kubcy().b[5][0]++;cov_2pu10kubcy().s[17]++;throw new ReferenceError('This EventbusProxy instance has been destroyed.');}else {cov_2pu10kubcy().b[5][1]++;}cov_2pu10kubcy().s[18]++;return this._eventbus.eventNames;}/**
    * Returns whether this EventbusProxy has already been destroyed.
    *
    * @returns {boolean} Is destroyed state.
    */get isDestroyed(){cov_2pu10kubcy().f[5]++;cov_2pu10kubcy().s[19]++;return this._eventbus===null;}/**
    * Returns the target eventbus name.
    *
    * @returns {string|*} The target eventbus name.
    */get name(){cov_2pu10kubcy().f[6]++;cov_2pu10kubcy().s[20]++;if(this._eventbus===null){cov_2pu10kubcy().b[6][0]++;cov_2pu10kubcy().s[21]++;throw new ReferenceError('This EventbusProxy instance has been destroyed.');}else {cov_2pu10kubcy().b[6][1]++;}cov_2pu10kubcy().s[22]++;return this._eventbus.name;}/**
    * Remove a previously-bound proxied event binding.
    *
    * Please see {@link Eventbus#off}.
    *
    * @param {string}   [name]     - Event name(s)
    *
    * @param {Function} [callback] - Event callback function
    *
    * @param {object}   [context]  - Event context
    *
    * @returns {EventbusProxy} This EventbusProxy.
    */off(name=(cov_2pu10kubcy().b[7][0]++,void 0),callback=(cov_2pu10kubcy().b[8][0]++,void 0),context=(cov_2pu10kubcy().b[9][0]++,void 0)){cov_2pu10kubcy().f[7]++;cov_2pu10kubcy().s[23]++;if(this._eventbus===null){cov_2pu10kubcy().b[10][0]++;cov_2pu10kubcy().s[24]++;throw new ReferenceError('This EventbusProxy instance has been destroyed.');}else {cov_2pu10kubcy().b[10][1]++;}const hasName=(cov_2pu10kubcy().s[25]++,(cov_2pu10kubcy().b[11][0]++,typeof name!=='undefined')&&(cov_2pu10kubcy().b[11][1]++,name!==null));const hasCallback=(cov_2pu10kubcy().s[26]++,(cov_2pu10kubcy().b[12][0]++,typeof callback!=='undefined')&&(cov_2pu10kubcy().b[12][1]++,callback!==null));const hasContext=(cov_2pu10kubcy().s[27]++,(cov_2pu10kubcy().b[13][0]++,typeof context!=='undefined')&&(cov_2pu10kubcy().b[13][1]++,context!==null));// Remove all events if `off()` is invoked.
cov_2pu10kubcy().s[28]++;if((cov_2pu10kubcy().b[15][0]++,!hasName)&&(cov_2pu10kubcy().b[15][1]++,!hasCallback)&&(cov_2pu10kubcy().b[15][2]++,!hasContext)){cov_2pu10kubcy().b[14][0]++;cov_2pu10kubcy().s[29]++;for(const event of this._events){cov_2pu10kubcy().s[30]++;this._eventbus.off(event.name,event.callback,event.context);}cov_2pu10kubcy().s[31]++;this._events=[];}else {cov_2pu10kubcy().b[14][1]++;const values=(cov_2pu10kubcy().s[32]++,{});cov_2pu10kubcy().s[33]++;if(hasName){cov_2pu10kubcy().b[16][0]++;cov_2pu10kubcy().s[34]++;values.name=name;}else {cov_2pu10kubcy().b[16][1]++;}cov_2pu10kubcy().s[35]++;if(hasCallback){cov_2pu10kubcy().b[17][0]++;cov_2pu10kubcy().s[36]++;values.callback=callback;}else {cov_2pu10kubcy().b[17][1]++;}cov_2pu10kubcy().s[37]++;if(hasContext){cov_2pu10kubcy().b[18][0]++;cov_2pu10kubcy().s[38]++;values.context=context;}else {cov_2pu10kubcy().b[18][1]++;}cov_2pu10kubcy().s[39]++;for(let cntr=(cov_2pu10kubcy().s[40]++,this._events.length);--cntr>=0;){const event=(cov_2pu10kubcy().s[41]++,this._events[cntr]);let foundMatch=(cov_2pu10kubcy().s[42]++,true);cov_2pu10kubcy().s[43]++;for(const key in values){cov_2pu10kubcy().s[44]++;if(event[key]!==values[key]){cov_2pu10kubcy().b[19][0]++;cov_2pu10kubcy().s[45]++;foundMatch=false;cov_2pu10kubcy().s[46]++;break;}else {cov_2pu10kubcy().b[19][1]++;}}cov_2pu10kubcy().s[47]++;if(foundMatch){cov_2pu10kubcy().b[20][0]++;cov_2pu10kubcy().s[48]++;this._eventbus.off(values.name,values.callback,values.context);cov_2pu10kubcy().s[49]++;this._events.splice(cntr,1);}else {cov_2pu10kubcy().b[20][1]++;}}}cov_2pu10kubcy().s[50]++;return this;}/**
    * Bind a callback function to an object. The callback will be invoked whenever the event is fired. If you have a
    * large number of different events on a page, the convention is to use colons to namespace them: "poll:start", or
    * "change:selection".
    *
    * This is proxied through `listenTo` of an internal Events instance instead of directly modifying the target
    * eventbus.
    *
    * Please see {@link Eventbus#on}.
    *
    * @param {string}   name     - Event name(s)
    * @param {Function} callback - Event callback function
    * @param {object}   context  - Event context
    * @returns {EventbusProxy} This EventbusProxy.
    */on(name,callback,context=(cov_2pu10kubcy().b[21][0]++,void 0)){cov_2pu10kubcy().f[8]++;cov_2pu10kubcy().s[51]++;if(this._eventbus===null){cov_2pu10kubcy().b[22][0]++;cov_2pu10kubcy().s[52]++;throw new ReferenceError('This EventbusProxy instance has been destroyed.');}else {cov_2pu10kubcy().b[22][1]++;}cov_2pu10kubcy().s[53]++;this._eventbus.on(name,callback,context);cov_2pu10kubcy().s[54]++;this._events.push({name,callback,context});cov_2pu10kubcy().s[55]++;return this;}/**
    * Iterates over all stored proxy events yielding an array with event name, callback function, and event context.
    *
    * @param {string} [eventName] Optional event name to iterate over.
    *
    * @yields
    */*proxyEntries(eventName=(cov_2pu10kubcy().b[23][0]++,void 0)){cov_2pu10kubcy().f[9]++;cov_2pu10kubcy().s[56]++;if(this._eventbus===null){cov_2pu10kubcy().b[24][0]++;cov_2pu10kubcy().s[57]++;throw new ReferenceError('This EventbusProxy instance has been destroyed.');}else {cov_2pu10kubcy().b[24][1]++;}/* c8 ignore next */cov_2pu10kubcy().s[58]++;if(!this._events){cov_2pu10kubcy().b[25][0]++;cov_2pu10kubcy().s[59]++;return;}else {cov_2pu10kubcy().b[25][1]++;}cov_2pu10kubcy().s[60]++;if(eventName){cov_2pu10kubcy().b[26][0]++;cov_2pu10kubcy().s[61]++;for(const event of this._events){cov_2pu10kubcy().s[62]++;if(eventName===event.name){cov_2pu10kubcy().b[27][0]++;cov_2pu10kubcy().s[63]++;yield [event.name,event.callback,event.context];}else {cov_2pu10kubcy().b[27][1]++;}}}else {cov_2pu10kubcy().b[26][1]++;cov_2pu10kubcy().s[64]++;for(const event of this._events){cov_2pu10kubcy().s[65]++;yield [event.name,event.callback,event.context];}}}/**
    * Returns the current proxied event count.
    *
    * @returns {number} Returns the current proxied event count.
    */get proxyEventCount(){cov_2pu10kubcy().f[10]++;cov_2pu10kubcy().s[66]++;if(this._eventbus===null){cov_2pu10kubcy().b[28][0]++;cov_2pu10kubcy().s[67]++;throw new ReferenceError('This EventbusProxy instance has been destroyed.');}else {cov_2pu10kubcy().b[28][1]++;}cov_2pu10kubcy().s[68]++;return this._events.length;}/**
    * Returns the event names of proxied event listeners.
    *
    * @returns {string[]} Returns the event names of proxied event listeners.
    */get proxyEventNames(){cov_2pu10kubcy().f[11]++;cov_2pu10kubcy().s[69]++;if(this._eventbus===null){cov_2pu10kubcy().b[29][0]++;cov_2pu10kubcy().s[70]++;throw new ReferenceError('This EventbusProxy instance has been destroyed.');}else {cov_2pu10kubcy().b[29][1]++;}cov_2pu10kubcy().s[71]++;if(!this._events){cov_2pu10kubcy().b[30][0]++;cov_2pu10kubcy().s[72]++;return [];}else {cov_2pu10kubcy().b[30][1]++;}const eventNames=(cov_2pu10kubcy().s[73]++,{});cov_2pu10kubcy().s[74]++;for(const event of this._events){cov_2pu10kubcy().s[75]++;eventNames[event.name]=true;}cov_2pu10kubcy().s[76]++;return Object.keys(eventNames);}/**
    * Trigger callbacks for the given event, or space-delimited list of events. Subsequent arguments to trigger will be
    * passed along to the event callbacks.
    *
    * Please see {@link Eventbus#trigger}.
    *
    * @returns {EventbusProxy} This EventbusProxy.
    */trigger(){cov_2pu10kubcy().f[12]++;cov_2pu10kubcy().s[77]++;if(this._eventbus===null){cov_2pu10kubcy().b[31][0]++;cov_2pu10kubcy().s[78]++;throw new ReferenceError('This EventbusProxy instance has been destroyed.');}else {cov_2pu10kubcy().b[31][1]++;}cov_2pu10kubcy().s[79]++;this._eventbus.trigger(...arguments);cov_2pu10kubcy().s[80]++;return this;}/**
    * Provides `trigger` functionality, but collects any returned Promises from invoked targets and returns a
    * single Promise generated by `Promise.resolve` for a single value or `Promise.all` for multiple results. This is
    * a very useful mechanism to invoke asynchronous operations over an eventbus.
    *
    * Please see {@link Eventbus#triggerAsync}.
    *
    * @returns {Promise} A Promise to returning any results.
    */triggerAsync(){cov_2pu10kubcy().f[13]++;cov_2pu10kubcy().s[81]++;if(this._eventbus===null){cov_2pu10kubcy().b[32][0]++;cov_2pu10kubcy().s[82]++;throw new ReferenceError('This EventbusProxy instance has been destroyed.');}else {cov_2pu10kubcy().b[32][1]++;}cov_2pu10kubcy().s[83]++;return this._eventbus.triggerAsync(...arguments);}/**
    * Defers invoking `trigger`. This is useful for triggering events in the next clock tick.
    *
    * Please see {@link Eventbus#triggerDefer}.
    *
    * @returns {EventbusProxy} This EventbusProxy.
    */triggerDefer(){cov_2pu10kubcy().f[14]++;cov_2pu10kubcy().s[84]++;if(this._eventbus===null){cov_2pu10kubcy().b[33][0]++;cov_2pu10kubcy().s[85]++;throw new ReferenceError('This EventbusProxy instance has been destroyed.');}else {cov_2pu10kubcy().b[33][1]++;}cov_2pu10kubcy().s[86]++;this._eventbus.triggerDefer(...arguments);cov_2pu10kubcy().s[87]++;return this;}/**
    * Provides `trigger` functionality, but collects any returned result or results from invoked targets as a single
    * value or in an array and passes it back to the callee in a synchronous manner.
    *
    * Please see {@link Eventbus#triggerSync}.
    *
    * @returns {*|Array.<*>} An Array of returned results.
    */triggerSync(){cov_2pu10kubcy().f[15]++;cov_2pu10kubcy().s[88]++;if(this._eventbus===null){cov_2pu10kubcy().b[34][0]++;cov_2pu10kubcy().s[89]++;throw new ReferenceError('This EventbusProxy instance has been destroyed.');}else {cov_2pu10kubcy().b[34][1]++;}cov_2pu10kubcy().s[90]++;return this._eventbus.triggerSync(...arguments);}}

function cov_6c4cjakge(){var path="/Volumes/Data/program/javascript/projects/TyphonJS/repos/typhonrt/typhonjs-plugin/manager/node_modules/@typhonjs-plugin/eventbus/src/Eventbus.js";var hash="af6d4d4b4a091507038875da8c5249a484e78014";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Volumes/Data/program/javascript/projects/TyphonJS/repos/typhonrt/typhonjs-plugin/manager/node_modules/@typhonjs-plugin/eventbus/src/Eventbus.js",statementMap:{"0":{start:{line:27,column:6},end:{line:27,column:40}},"1":{start:{line:38,column:6},end:{line:38,column:37}},"2":{start:{line:51,column:6},end:{line:51,column:36}},"3":{start:{line:51,column:27},end:{line:51,column:34}},"4":{start:{line:53,column:6},end:{line:69,column:7}},"5":{start:{line:55,column:9},end:{line:58,column:10}},"6":{start:{line:57,column:12},end:{line:57,column:57}},"7":{start:{line:62,column:9},end:{line:68,column:10}},"8":{start:{line:64,column:12},end:{line:67,column:13}},"9":{start:{line:66,column:15},end:{line:66,column:55}},"10":{start:{line:79,column:18},end:{line:79,column:19}},"11":{start:{line:81,column:6},end:{line:81,column:78}},"12":{start:{line:81,column:41},end:{line:81,column:76}},"13":{start:{line:83,column:6},end:{line:83,column:19}},"14":{start:{line:94,column:6},end:{line:94,column:39}},"15":{start:{line:94,column:27},end:{line:94,column:37}},"16":{start:{line:96,column:6},end:{line:96,column:39}},"17":{start:{line:106,column:6},end:{line:106,column:32}},"18":{start:{line:127,column:6},end:{line:127,column:32}},"19":{start:{line:127,column:18},end:{line:127,column:30}},"20":{start:{line:128,column:17},end:{line:128,column:68}},"21":{start:{line:129,column:26},end:{line:129,column:71}},"22":{start:{line:130,column:22},end:{line:130,column:37}},"23":{start:{line:134,column:6},end:{line:138,column:7}},"24":{start:{line:136,column:24},end:{line:136,column:77}},"25":{start:{line:137,column:9},end:{line:137,column:93}},"26":{start:{line:141,column:6},end:{line:141,column:61}},"27":{start:{line:142,column:6},end:{line:142,column:18}},"28":{start:{line:159,column:21},end:{line:159,column:101}},"29":{start:{line:161,column:6},end:{line:161,column:57}},"30":{start:{line:198,column:6},end:{line:198,column:41}},"31":{start:{line:198,column:27},end:{line:198,column:39}},"32":{start:{line:204,column:6},end:{line:204,column:116}},"33":{start:{line:206,column:6},end:{line:206,column:18}},"34":{start:{line:245,column:6},end:{line:245,column:66}},"35":{start:{line:263,column:21},end:{line:263,column:86}},"36":{start:{line:265,column:6},end:{line:265,column:114}},"37":{start:{line:265,column:94},end:{line:265,column:112}},"38":{start:{line:267,column:6},end:{line:267,column:48}},"39":{start:{line:290,column:26},end:{line:290,column:43}},"40":{start:{line:291,column:6},end:{line:291,column:40}},"41":{start:{line:291,column:26},end:{line:291,column:38}},"42":{start:{line:293,column:18},end:{line:293,column:66}},"43":{start:{line:295,column:6},end:{line:303,column:7}},"44":{start:{line:295,column:19},end:{line:295,column:20}},"45":{start:{line:297,column:27},end:{line:297,column:46}},"46":{start:{line:300,column:9},end:{line:300,column:35}},"47":{start:{line:300,column:27},end:{line:300,column:33}},"48":{start:{line:302,column:9},end:{line:302,column:52}},"49":{start:{line:305,column:6},end:{line:305,column:18}},"50":{start:{line:320,column:6},end:{line:320,column:41}},"51":{start:{line:320,column:27},end:{line:320,column:39}},"52":{start:{line:322,column:21},end:{line:322,column:54}},"53":{start:{line:323,column:19},end:{line:323,column:36}},"54":{start:{line:325,column:6},end:{line:325,column:70}},"55":{start:{line:325,column:19},end:{line:325,column:20}},"56":{start:{line:325,column:41},end:{line:325,column:68}},"57":{start:{line:327,column:6},end:{line:327,column:93}},"58":{start:{line:329,column:6},end:{line:329,column:18}},"59":{start:{line:343,column:6},end:{line:343,column:56}},"60":{start:{line:343,column:27},end:{line:343,column:54}},"61":{start:{line:345,column:21},end:{line:345,column:54}},"62":{start:{line:346,column:19},end:{line:346,column:36}},"63":{start:{line:347,column:6},end:{line:347,column:70}},"64":{start:{line:347,column:19},end:{line:347,column:20}},"65":{start:{line:347,column:41},end:{line:347,column:68}},"66":{start:{line:349,column:22},end:{line:349,column:114}},"67":{start:{line:351,column:6},end:{line:351,column:62}},"68":{start:{line:361,column:6},end:{line:361,column:59}},"69":{start:{line:361,column:25},end:{line:361,column:52}},"70":{start:{line:363,column:6},end:{line:363,column:18}},"71":{start:{line:376,column:6},end:{line:376,column:43}},"72":{start:{line:376,column:27},end:{line:376,column:41}},"73":{start:{line:378,column:20},end:{line:378,column:21}},"74":{start:{line:379,column:21},end:{line:379,column:54}},"75":{start:{line:380,column:19},end:{line:380,column:36}},"76":{start:{line:381,column:6},end:{line:381,column:74}},"77":{start:{line:381,column:19},end:{line:381,column:20}},"78":{start:{line:381,column:41},end:{line:381,column:72}},"79":{start:{line:383,column:6},end:{line:383,column:105}},"80":{start:{line:394,column:25},end:{line:394,column:30}},"81":{start:{line:407,column:21},end:{line:433,column:1}},"82":{start:{line:409,column:11},end:{line:409,column:12}},"83":{start:{line:410,column:3},end:{line:431,column:4}},"84":{start:{line:413,column:6},end:{line:413,column:107}},"85":{start:{line:413,column:81},end:{line:413,column:105}},"86":{start:{line:414,column:6},end:{line:417,column:7}},"87":{start:{line:416,column:9},end:{line:416,column:81}},"88":{start:{line:419,column:8},end:{line:431,column:4}},"89":{start:{line:422,column:6},end:{line:425,column:7}},"90":{start:{line:424,column:9},end:{line:424,column:61}},"91":{start:{line:430,column:6},end:{line:430,column:54}},"92":{start:{line:432,column:3},end:{line:432,column:17}},"93":{start:{line:447,column:28},end:{line:475,column:1}},"94":{start:{line:449,column:11},end:{line:449,column:12}},"95":{start:{line:451,column:3},end:{line:472,column:4}},"96":{start:{line:454,column:6},end:{line:454,column:107}},"97":{start:{line:454,column:81},end:{line:454,column:105}},"98":{start:{line:455,column:6},end:{line:458,column:7}},"99":{start:{line:457,column:9},end:{line:457,column:97}},"100":{start:{line:460,column:8},end:{line:472,column:4}},"101":{start:{line:463,column:6},end:{line:466,column:7}},"102":{start:{line:465,column:9},end:{line:465,column:77}},"103":{start:{line:471,column:6},end:{line:471,column:70}},"104":{start:{line:474,column:3},end:{line:474,column:17}},"105":{start:{line:488,column:22},end:{line:499,column:1}},"106":{start:{line:490,column:3},end:{line:490,column:109}},"107":{start:{line:492,column:3},end:{line:496,column:4}},"108":{start:{line:494,column:24},end:{line:494,column:63}},"109":{start:{line:495,column:6},end:{line:495,column:42}},"110":{start:{line:498,column:3},end:{line:498,column:14}},"111":{start:{line:510,column:18},end:{line:576,column:1}},"112":{start:{line:512,column:3},end:{line:512,column:27}},"113":{start:{line:512,column:18},end:{line:512,column:25}},"114":{start:{line:514,column:11},end:{line:514,column:12}},"115":{start:{line:515,column:19},end:{line:515,column:34}},"116":{start:{line:515,column:48},end:{line:515,column:65}},"117":{start:{line:518,column:3},end:{line:528,column:4}},"118":{start:{line:520,column:18},end:{line:520,column:40}},"119":{start:{line:521,column:6},end:{line:526,column:7}},"120":{start:{line:523,column:9},end:{line:523,column:39}},"121":{start:{line:524,column:9},end:{line:524,column:40}},"122":{start:{line:525,column:9},end:{line:525,column:55}},"123":{start:{line:527,column:6},end:{line:527,column:13}},"124":{start:{line:530,column:17},end:{line:530,column:52}},"125":{start:{line:531,column:3},end:{line:573,column:4}},"126":{start:{line:533,column:6},end:{line:533,column:22}},"127":{start:{line:534,column:23},end:{line:534,column:35}},"128":{start:{line:538,column:6},end:{line:538,column:31}},"129":{start:{line:538,column:23},end:{line:538,column:29}},"130":{start:{line:541,column:24},end:{line:541,column:26}},"131":{start:{line:542,column:6},end:{line:562,column:7}},"132":{start:{line:542,column:19},end:{line:542,column:20}},"133":{start:{line:544,column:25},end:{line:544,column:36}},"134":{start:{line:545,column:9},end:{line:561,column:10}},"135":{start:{line:551,column:12},end:{line:551,column:36}},"136":{start:{line:555,column:12},end:{line:555,column:42}},"137":{start:{line:556,column:12},end:{line:560,column:13}},"138":{start:{line:558,column:15},end:{line:558,column:46}},"139":{start:{line:559,column:15},end:{line:559,column:61}},"140":{start:{line:565,column:6},end:{line:572,column:7}},"141":{start:{line:567,column:9},end:{line:567,column:34}},"142":{start:{line:571,column:9},end:{line:571,column:29}},"143":{start:{line:575,column:3},end:{line:575,column:17}},"144":{start:{line:587,column:17},end:{line:599,column:1}},"145":{start:{line:589,column:3},end:{line:597,column:4}},"146":{start:{line:591,column:23},end:{line:591,column:58}},"147":{start:{line:592,column:22},end:{line:592,column:37}},"148":{start:{line:592,column:45},end:{line:592,column:56}},"149":{start:{line:592,column:70},end:{line:592,column:87}},"150":{start:{line:594,column:6},end:{line:594,column:43}},"151":{start:{line:594,column:23},end:{line:594,column:41}},"152":{start:{line:596,column:6},end:{line:596,column:75}},"153":{start:{line:598,column:3},end:{line:598,column:17}},"154":{start:{line:611,column:19},end:{line:624,column:1}},"155":{start:{line:613,column:3},end:{line:622,column:4}},"156":{start:{line:615,column:19},end:{line:619,column:7}},"157":{start:{line:617,column:9},end:{line:617,column:27}},"158":{start:{line:618,column:9},end:{line:618,column:48}},"159":{start:{line:621,column:6},end:{line:621,column:32}},"160":{start:{line:623,column:3},end:{line:623,column:14}},"161":{start:{line:636,column:22},end:{line:650,column:1}},"162":{start:{line:640,column:3},end:{line:647,column:4}},"163":{start:{line:642,column:21},end:{line:642,column:36}},"164":{start:{line:643,column:22},end:{line:643,column:35}},"165":{start:{line:644,column:6},end:{line:644,column:65}},"166":{start:{line:644,column:33},end:{line:644,column:63}},"167":{start:{line:645,column:6},end:{line:645,column:60}},"168":{start:{line:645,column:20},end:{line:645,column:58}},"169":{start:{line:646,column:6},end:{line:646,column:81}},"170":{start:{line:646,column:23},end:{line:646,column:79}},"171":{start:{line:649,column:3},end:{line:649,column:17}},"172":{start:{line:659,column:25},end:{line:682,column:1}},"173":{start:{line:661,column:15},end:{line:661,column:17}},"174":{start:{line:662,column:14},end:{line:662,column:21}},"175":{start:{line:662,column:28},end:{line:662,column:35}},"176":{start:{line:662,column:42},end:{line:662,column:49}},"177":{start:{line:662,column:55},end:{line:662,column:68}},"178":{start:{line:664,column:3},end:{line:681,column:4}},"179":{start:{line:667,column:9},end:{line:667,column:68}},"180":{start:{line:667,column:27},end:{line:667,column:66}},"181":{start:{line:668,column:9},end:{line:668,column:16}},"182":{start:{line:670,column:9},end:{line:670,column:72}},"183":{start:{line:670,column:27},end:{line:670,column:70}},"184":{start:{line:671,column:9},end:{line:671,column:16}},"185":{start:{line:673,column:9},end:{line:673,column:76}},"186":{start:{line:673,column:27},end:{line:673,column:74}},"187":{start:{line:674,column:9},end:{line:674,column:16}},"188":{start:{line:676,column:9},end:{line:676,column:80}},"189":{start:{line:676,column:27},end:{line:676,column:78}},"190":{start:{line:677,column:9},end:{line:677,column:16}},"191":{start:{line:679,column:9},end:{line:679,column:75}},"192":{start:{line:679,column:27},end:{line:679,column:73}},"193":{start:{line:680,column:9},end:{line:680,column:16}},"194":{start:{line:695,column:31},end:{line:773,column:1}},"195":{start:{line:697,column:15},end:{line:697,column:17}},"196":{start:{line:698,column:14},end:{line:698,column:21}},"197":{start:{line:698,column:28},end:{line:698,column:35}},"198":{start:{line:698,column:42},end:{line:698,column:49}},"199":{start:{line:698,column:55},end:{line:698,column:68}},"200":{start:{line:700,column:19},end:{line:700,column:21}},"201":{start:{line:702,column:3},end:{line:760,column:4}},"202":{start:{line:704,column:6},end:{line:755,column:7}},"203":{start:{line:707,column:12},end:{line:713,column:13}},"204":{start:{line:709,column:30},end:{line:709,column:68}},"205":{start:{line:712,column:15},end:{line:712,column:63}},"206":{start:{line:712,column:40},end:{line:712,column:61}},"207":{start:{line:714,column:12},end:{line:714,column:18}},"208":{start:{line:717,column:12},end:{line:723,column:13}},"209":{start:{line:719,column:30},end:{line:719,column:72}},"210":{start:{line:722,column:15},end:{line:722,column:63}},"211":{start:{line:722,column:40},end:{line:722,column:61}},"212":{start:{line:724,column:12},end:{line:724,column:18}},"213":{start:{line:727,column:12},end:{line:733,column:13}},"214":{start:{line:729,column:30},end:{line:729,column:76}},"215":{start:{line:732,column:15},end:{line:732,column:63}},"216":{start:{line:732,column:40},end:{line:732,column:61}},"217":{start:{line:734,column:12},end:{line:734,column:18}},"218":{start:{line:737,column:12},end:{line:743,column:13}},"219":{start:{line:739,column:30},end:{line:739,column:80}},"220":{start:{line:742,column:15},end:{line:742,column:63}},"221":{start:{line:742,column:40},end:{line:742,column:61}},"222":{start:{line:744,column:12},end:{line:744,column:18}},"223":{start:{line:747,column:12},end:{line:753,column:13}},"224":{start:{line:749,column:30},end:{line:749,column:75}},"225":{start:{line:752,column:15},end:{line:752,column:63}},"226":{start:{line:752,column:40},end:{line:752,column:61}},"227":{start:{line:754,column:12},end:{line:754,column:18}},"228":{start:{line:759,column:6},end:{line:759,column:35}},"229":{start:{line:763,column:3},end:{line:772,column:79}},"230":{start:{line:765,column:23},end:{line:765,column:65}},"231":{start:{line:765,column:48},end:{line:765,column:64}},"232":{start:{line:766,column:6},end:{line:771,column:7}},"233":{start:{line:768,column:17},end:{line:768,column:31}},"234":{start:{line:769,column:17},end:{line:769,column:36}},"235":{start:{line:770,column:18},end:{line:770,column:34}},"236":{start:{line:784,column:30},end:{line:842,column:1}},"237":{start:{line:786,column:15},end:{line:786,column:17}},"238":{start:{line:787,column:14},end:{line:787,column:21}},"239":{start:{line:787,column:28},end:{line:787,column:35}},"240":{start:{line:787,column:42},end:{line:787,column:49}},"241":{start:{line:787,column:55},end:{line:787,column:68}},"242":{start:{line:789,column:19},end:{line:789,column:21}},"243":{start:{line:791,column:3},end:{line:838,column:4}},"244":{start:{line:794,column:9},end:{line:800,column:10}},"245":{start:{line:796,column:27},end:{line:796,column:65}},"246":{start:{line:799,column:12},end:{line:799,column:60}},"247":{start:{line:799,column:37},end:{line:799,column:58}},"248":{start:{line:801,column:9},end:{line:801,column:15}},"249":{start:{line:803,column:9},end:{line:809,column:10}},"250":{start:{line:805,column:27},end:{line:805,column:69}},"251":{start:{line:808,column:12},end:{line:808,column:60}},"252":{start:{line:808,column:37},end:{line:808,column:58}},"253":{start:{line:810,column:9},end:{line:810,column:15}},"254":{start:{line:812,column:9},end:{line:818,column:10}},"255":{start:{line:814,column:27},end:{line:814,column:73}},"256":{start:{line:817,column:12},end:{line:817,column:60}},"257":{start:{line:817,column:37},end:{line:817,column:58}},"258":{start:{line:819,column:9},end:{line:819,column:15}},"259":{start:{line:821,column:9},end:{line:827,column:10}},"260":{start:{line:823,column:27},end:{line:823,column:77}},"261":{start:{line:826,column:12},end:{line:826,column:60}},"262":{start:{line:826,column:37},end:{line:826,column:58}},"263":{start:{line:828,column:9},end:{line:828,column:15}},"264":{start:{line:830,column:9},end:{line:836,column:10}},"265":{start:{line:832,column:27},end:{line:832,column:72}},"266":{start:{line:835,column:12},end:{line:835,column:60}},"267":{start:{line:835,column:37},end:{line:835,column:58}},"268":{start:{line:837,column:9},end:{line:837,column:15}},"269":{start:{line:841,column:3},end:{line:841,column:84}},"270":{start:{line:849,column:16},end:{line:849,column:17}},"271":{start:{line:857,column:20},end:{line:861,column:1}},"272":{start:{line:859,column:14},end:{line:859,column:30}},"273":{start:{line:860,column:3},end:{line:860,column:41}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:19,column:3},end:{line:19,column:4}},loc:{start:{line:20,column:3},end:{line:28,column:4}},line:20},"1":{name:"(anonymous_1)",decl:{start:{line:36,column:3},end:{line:36,column:4}},loc:{start:{line:37,column:3},end:{line:39,column:4}},line:37},"2":{name:"(anonymous_2)",decl:{start:{line:48,column:3},end:{line:48,column:4}},loc:{start:{line:49,column:3},end:{line:70,column:4}},line:49},"3":{name:"(anonymous_3)",decl:{start:{line:77,column:3},end:{line:77,column:4}},loc:{start:{line:78,column:3},end:{line:84,column:4}},line:78},"4":{name:"(anonymous_4)",decl:{start:{line:91,column:3},end:{line:91,column:4}},loc:{start:{line:92,column:3},end:{line:97,column:4}},line:92},"5":{name:"(anonymous_5)",decl:{start:{line:104,column:3},end:{line:104,column:4}},loc:{start:{line:105,column:3},end:{line:107,column:4}},line:105},"6":{name:"(anonymous_6)",decl:{start:{line:125,column:3},end:{line:125,column:4}},loc:{start:{line:126,column:3},end:{line:143,column:4}},line:126},"7":{name:"(anonymous_7)",decl:{start:{line:156,column:3},end:{line:156,column:4}},loc:{start:{line:157,column:3},end:{line:162,column:4}},line:157},"8":{name:"(anonymous_8)",decl:{start:{line:195,column:3},end:{line:195,column:4}},loc:{start:{line:196,column:3},end:{line:207,column:4}},line:196},"9":{name:"(anonymous_9)",decl:{start:{line:243,column:3},end:{line:243,column:4}},loc:{start:{line:244,column:3},end:{line:246,column:4}},line:244},"10":{name:"(anonymous_10)",decl:{start:{line:260,column:3},end:{line:260,column:4}},loc:{start:{line:261,column:3},end:{line:268,column:4}},line:261},"11":{name:"(anonymous_11)",decl:{start:{line:288,column:3},end:{line:288,column:4}},loc:{start:{line:289,column:3},end:{line:306,column:4}},line:289},"12":{name:"(anonymous_12)",decl:{start:{line:317,column:3},end:{line:317,column:4}},loc:{start:{line:318,column:3},end:{line:330,column:4}},line:318},"13":{name:"(anonymous_13)",decl:{start:{line:340,column:3},end:{line:340,column:4}},loc:{start:{line:341,column:3},end:{line:352,column:4}},line:341},"14":{name:"(anonymous_14)",decl:{start:{line:359,column:3},end:{line:359,column:4}},loc:{start:{line:360,column:3},end:{line:364,column:4}},line:360},"15":{name:"(anonymous_15)",decl:{start:{line:361,column:17},end:{line:361,column:18}},loc:{start:{line:361,column:23},end:{line:361,column:54}},line:361},"16":{name:"(anonymous_16)",decl:{start:{line:373,column:3},end:{line:373,column:4}},loc:{start:{line:374,column:3},end:{line:384,column:4}},line:374},"17":{name:"(anonymous_17)",decl:{start:{line:407,column:21},end:{line:407,column:22}},loc:{start:{line:408,column:0},end:{line:433,column:1}},line:408},"18":{name:"(anonymous_18)",decl:{start:{line:447,column:28},end:{line:447,column:29}},loc:{start:{line:448,column:0},end:{line:475,column:1}},line:448},"19":{name:"(anonymous_19)",decl:{start:{line:488,column:22},end:{line:488,column:23}},loc:{start:{line:489,column:0},end:{line:499,column:1}},line:489},"20":{name:"(anonymous_20)",decl:{start:{line:510,column:18},end:{line:510,column:19}},loc:{start:{line:511,column:0},end:{line:576,column:1}},line:511},"21":{name:"(anonymous_21)",decl:{start:{line:587,column:17},end:{line:587,column:18}},loc:{start:{line:588,column:0},end:{line:599,column:1}},line:588},"22":{name:"(anonymous_22)",decl:{start:{line:611,column:19},end:{line:611,column:20}},loc:{start:{line:612,column:0},end:{line:624,column:1}},line:612},"23":{name:"(anonymous_23)",decl:{start:{line:615,column:31},end:{line:615,column:32}},loc:{start:{line:616,column:6},end:{line:619,column:7}},line:616},"24":{name:"(anonymous_24)",decl:{start:{line:636,column:22},end:{line:636,column:23}},loc:{start:{line:637,column:0},end:{line:650,column:1}},line:637},"25":{name:"(anonymous_25)",decl:{start:{line:659,column:25},end:{line:659,column:26}},loc:{start:{line:660,column:0},end:{line:682,column:1}},line:660},"26":{name:"(anonymous_26)",decl:{start:{line:695,column:31},end:{line:695,column:32}},loc:{start:{line:696,column:0},end:{line:773,column:1}},line:696},"27":{name:"(anonymous_27)",decl:{start:{line:763,column:57},end:{line:763,column:58}},loc:{start:{line:764,column:3},end:{line:772,column:4}},line:764},"28":{name:"(anonymous_28)",decl:{start:{line:765,column:37},end:{line:765,column:38}},loc:{start:{line:765,column:48},end:{line:765,column:64}},line:765},"29":{name:"(anonymous_29)",decl:{start:{line:784,column:30},end:{line:784,column:31}},loc:{start:{line:785,column:0},end:{line:842,column:1}},line:785},"30":{name:"(anonymous_30)",decl:{start:{line:857,column:20},end:{line:857,column:21}},loc:{start:{line:858,column:0},end:{line:861,column:1}},line:858}},branchMap:{"0":{loc:{start:{line:19,column:15},end:{line:19,column:36}},type:"default-arg",locations:[{start:{line:19,column:30},end:{line:19,column:36}}],line:19},"1":{loc:{start:{line:48,column:12},end:{line:48,column:30}},type:"default-arg",locations:[{start:{line:48,column:24},end:{line:48,column:30}}],line:48},"2":{loc:{start:{line:51,column:6},end:{line:51,column:36}},type:"if",locations:[{start:{line:51,column:6},end:{line:51,column:36}},{start:{line:51,column:6},end:{line:51,column:36}}],line:51},"3":{loc:{start:{line:53,column:6},end:{line:69,column:7}},type:"if",locations:[{start:{line:53,column:6},end:{line:69,column:7}},{start:{line:53,column:6},end:{line:69,column:7}}],line:53},"4":{loc:{start:{line:94,column:6},end:{line:94,column:39}},type:"if",locations:[{start:{line:94,column:6},end:{line:94,column:39}},{start:{line:94,column:6},end:{line:94,column:39}}],line:94},"5":{loc:{start:{line:125,column:33},end:{line:125,column:47}},type:"default-arg",locations:[{start:{line:125,column:43},end:{line:125,column:47}}],line:125},"6":{loc:{start:{line:127,column:6},end:{line:127,column:32}},type:"if",locations:[{start:{line:127,column:6},end:{line:127,column:32}},{start:{line:127,column:6},end:{line:127,column:32}}],line:127},"7":{loc:{start:{line:128,column:17},end:{line:128,column:68}},type:"binary-expr",locations:[{start:{line:128,column:17},end:{line:128,column:30}},{start:{line:128,column:35},end:{line:128,column:67}}],line:128},"8":{loc:{start:{line:129,column:26},end:{line:129,column:71}},type:"binary-expr",locations:[{start:{line:129,column:26},end:{line:129,column:43}},{start:{line:129,column:48},end:{line:129,column:70}}],line:129},"9":{loc:{start:{line:134,column:6},end:{line:138,column:7}},type:"if",locations:[{start:{line:134,column:6},end:{line:138,column:7}},{start:{line:134,column:6},end:{line:138,column:7}}],line:134},"10":{loc:{start:{line:136,column:24},end:{line:136,column:77}},type:"binary-expr",locations:[{start:{line:136,column:24},end:{line:136,column:38}},{start:{line:136,column:43},end:{line:136,column:76}}],line:136},"11":{loc:{start:{line:156,column:37},end:{line:156,column:51}},type:"default-arg",locations:[{start:{line:156,column:47},end:{line:156,column:51}}],line:156},"12":{loc:{start:{line:195,column:13},end:{line:195,column:30}},type:"default-arg",locations:[{start:{line:195,column:24},end:{line:195,column:30}}],line:195},"13":{loc:{start:{line:195,column:32},end:{line:195,column:48}},type:"default-arg",locations:[{start:{line:195,column:42},end:{line:195,column:48}}],line:195},"14":{loc:{start:{line:198,column:6},end:{line:198,column:41}},type:"if",locations:[{start:{line:198,column:6},end:{line:198,column:41}},{start:{line:198,column:6},end:{line:198,column:41}}],line:198},"15":{loc:{start:{line:243,column:22},end:{line:243,column:38}},type:"default-arg",locations:[{start:{line:243,column:32},end:{line:243,column:38}}],line:243},"16":{loc:{start:{line:260,column:24},end:{line:260,column:40}},type:"default-arg",locations:[{start:{line:260,column:34},end:{line:260,column:40}}],line:260},"17":{loc:{start:{line:265,column:6},end:{line:265,column:114}},type:"if",locations:[{start:{line:265,column:6},end:{line:265,column:114}},{start:{line:265,column:6},end:{line:265,column:114}}],line:265},"18":{loc:{start:{line:265,column:10},end:{line:265,column:90}},type:"binary-expr",locations:[{start:{line:265,column:10},end:{line:265,column:34}},{start:{line:265,column:39},end:{line:265,column:55}},{start:{line:265,column:59},end:{line:265,column:89}}],line:265},"19":{loc:{start:{line:288,column:22},end:{line:288,column:35}},type:"default-arg",locations:[{start:{line:288,column:29},end:{line:288,column:35}}],line:288},"20":{loc:{start:{line:288,column:37},end:{line:288,column:54}},type:"default-arg",locations:[{start:{line:288,column:48},end:{line:288,column:54}}],line:288},"21":{loc:{start:{line:288,column:56},end:{line:288,column:70}},type:"default-arg",locations:[{start:{line:288,column:66},end:{line:288,column:70}}],line:288},"22":{loc:{start:{line:291,column:6},end:{line:291,column:40}},type:"if",locations:[{start:{line:291,column:6},end:{line:291,column:40}},{start:{line:291,column:6},end:{line:291,column:40}}],line:291},"23":{loc:{start:{line:293,column:18},end:{line:293,column:66}},type:"cond-expr",locations:[{start:{line:293,column:24},end:{line:293,column:39}},{start:{line:293,column:42},end:{line:293,column:66}}],line:293},"24":{loc:{start:{line:300,column:9},end:{line:300,column:35}},type:"if",locations:[{start:{line:300,column:9},end:{line:300,column:35}},{start:{line:300,column:9},end:{line:300,column:35}}],line:300},"25":{loc:{start:{line:320,column:6},end:{line:320,column:41}},type:"if",locations:[{start:{line:320,column:6},end:{line:320,column:41}},{start:{line:320,column:6},end:{line:320,column:41}}],line:320},"26":{loc:{start:{line:343,column:6},end:{line:343,column:56}},type:"if",locations:[{start:{line:343,column:6},end:{line:343,column:56}},{start:{line:343,column:6},end:{line:343,column:56}}],line:343},"27":{loc:{start:{line:351,column:13},end:{line:351,column:61}},type:"cond-expr",locations:[{start:{line:351,column:34},end:{line:351,column:41}},{start:{line:351,column:44},end:{line:351,column:61}}],line:351},"28":{loc:{start:{line:376,column:6},end:{line:376,column:43}},type:"if",locations:[{start:{line:376,column:6},end:{line:376,column:43}},{start:{line:376,column:6},end:{line:376,column:43}}],line:376},"29":{loc:{start:{line:410,column:3},end:{line:431,column:4}},type:"if",locations:[{start:{line:410,column:3},end:{line:431,column:4}},{start:{line:410,column:3},end:{line:431,column:4}}],line:410},"30":{loc:{start:{line:410,column:7},end:{line:410,column:39}},type:"binary-expr",locations:[{start:{line:410,column:7},end:{line:410,column:11}},{start:{line:410,column:15},end:{line:410,column:39}}],line:410},"31":{loc:{start:{line:413,column:6},end:{line:413,column:107}},type:"if",locations:[{start:{line:413,column:6},end:{line:413,column:107}},{start:{line:413,column:6},end:{line:413,column:107}}],line:413},"32":{loc:{start:{line:413,column:10},end:{line:413,column:77}},type:"binary-expr",locations:[{start:{line:413,column:10},end:{line:413,column:29}},{start:{line:413,column:33},end:{line:413,column:50}},{start:{line:413,column:54},end:{line:413,column:77}}],line:413},"33":{loc:{start:{line:419,column:8},end:{line:431,column:4}},type:"if",locations:[{start:{line:419,column:8},end:{line:431,column:4}},{start:{line:419,column:8},end:{line:431,column:4}}],line:419},"34":{loc:{start:{line:419,column:12},end:{line:419,column:47}},type:"binary-expr",locations:[{start:{line:419,column:12},end:{line:419,column:16}},{start:{line:419,column:20},end:{line:419,column:47}}],line:419},"35":{loc:{start:{line:451,column:3},end:{line:472,column:4}},type:"if",locations:[{start:{line:451,column:3},end:{line:472,column:4}},{start:{line:451,column:3},end:{line:472,column:4}}],line:451},"36":{loc:{start:{line:451,column:7},end:{line:451,column:39}},type:"binary-expr",locations:[{start:{line:451,column:7},end:{line:451,column:11}},{start:{line:451,column:15},end:{line:451,column:39}}],line:451},"37":{loc:{start:{line:454,column:6},end:{line:454,column:107}},type:"if",locations:[{start:{line:454,column:6},end:{line:454,column:107}},{start:{line:454,column:6},end:{line:454,column:107}}],line:454},"38":{loc:{start:{line:454,column:10},end:{line:454,column:77}},type:"binary-expr",locations:[{start:{line:454,column:10},end:{line:454,column:29}},{start:{line:454,column:33},end:{line:454,column:50}},{start:{line:454,column:54},end:{line:454,column:77}}],line:454},"39":{loc:{start:{line:460,column:8},end:{line:472,column:4}},type:"if",locations:[{start:{line:460,column:8},end:{line:472,column:4}},{start:{line:460,column:8},end:{line:472,column:4}}],line:460},"40":{loc:{start:{line:460,column:12},end:{line:460,column:47}},type:"binary-expr",locations:[{start:{line:460,column:12},end:{line:460,column:16}},{start:{line:460,column:20},end:{line:460,column:47}}],line:460},"41":{loc:{start:{line:490,column:40},end:{line:490,column:57}},type:"binary-expr",locations:[{start:{line:490,column:40},end:{line:490,column:51}},{start:{line:490,column:55},end:{line:490,column:57}}],line:490},"42":{loc:{start:{line:492,column:3},end:{line:496,column:4}},type:"if",locations:[{start:{line:492,column:3},end:{line:496,column:4}},{start:{line:492,column:3},end:{line:496,column:4}}],line:492},"43":{loc:{start:{line:494,column:24},end:{line:494,column:63}},type:"binary-expr",locations:[{start:{line:494,column:24},end:{line:494,column:38}},{start:{line:494,column:43},end:{line:494,column:62}}],line:494},"44":{loc:{start:{line:512,column:3},end:{line:512,column:27}},type:"if",locations:[{start:{line:512,column:3},end:{line:512,column:27}},{start:{line:512,column:3},end:{line:512,column:27}}],line:512},"45":{loc:{start:{line:518,column:3},end:{line:528,column:4}},type:"if",locations:[{start:{line:518,column:3},end:{line:528,column:4}},{start:{line:518,column:3},end:{line:528,column:4}}],line:518},"46":{loc:{start:{line:518,column:7},end:{line:518,column:50}},type:"binary-expr",locations:[{start:{line:518,column:7},end:{line:518,column:12}},{start:{line:518,column:16},end:{line:518,column:25}},{start:{line:518,column:29},end:{line:518,column:37}},{start:{line:518,column:41},end:{line:518,column:50}}],line:518},"47":{loc:{start:{line:530,column:17},end:{line:530,column:52}},type:"cond-expr",locations:[{start:{line:530,column:24},end:{line:530,column:30}},{start:{line:530,column:33},end:{line:530,column:52}}],line:530},"48":{loc:{start:{line:538,column:6},end:{line:538,column:31}},type:"if",locations:[{start:{line:538,column:6},end:{line:538,column:31}},{start:{line:538,column:6},end:{line:538,column:31}}],line:538},"49":{loc:{start:{line:545,column:9},end:{line:561,column:10}},type:"if",locations:[{start:{line:545,column:9},end:{line:561,column:10}},{start:{line:545,column:9},end:{line:561,column:10}}],line:545},"50":{loc:{start:{line:546,column:10},end:{line:548,column:48}},type:"binary-expr",locations:[{start:{line:546,column:10},end:{line:546,column:18}},{start:{line:546,column:22},end:{line:546,column:51}},{start:{line:547,column:10},end:{line:547,column:49}},{start:{line:548,column:10},end:{line:548,column:17}},{start:{line:548,column:21},end:{line:548,column:48}}],line:546},"51":{loc:{start:{line:556,column:12},end:{line:560,column:13}},type:"if",locations:[{start:{line:556,column:12},end:{line:560,column:13}},{start:{line:556,column:12},end:{line:560,column:13}}],line:556},"52":{loc:{start:{line:556,column:16},end:{line:556,column:52}},type:"binary-expr",locations:[{start:{line:556,column:16},end:{line:556,column:25}},{start:{line:556,column:29},end:{line:556,column:52}}],line:556},"53":{loc:{start:{line:565,column:6},end:{line:572,column:7}},type:"if",locations:[{start:{line:565,column:6},end:{line:572,column:7}},{start:{line:565,column:6},end:{line:572,column:7}}],line:565},"54":{loc:{start:{line:589,column:3},end:{line:597,column:4}},type:"if",locations:[{start:{line:589,column:3},end:{line:597,column:4}},{start:{line:589,column:3},end:{line:597,column:4}}],line:589},"55":{loc:{start:{line:591,column:23},end:{line:591,column:58}},type:"binary-expr",locations:[{start:{line:591,column:23},end:{line:591,column:35}},{start:{line:591,column:40},end:{line:591,column:57}}],line:591},"56":{loc:{start:{line:594,column:6},end:{line:594,column:43}},type:"if",locations:[{start:{line:594,column:6},end:{line:594,column:43}},{start:{line:594,column:6},end:{line:594,column:43}}],line:594},"57":{loc:{start:{line:596,column:46},end:{line:596,column:60}},type:"binary-expr",locations:[{start:{line:596,column:46},end:{line:596,column:53}},{start:{line:596,column:57},end:{line:596,column:60}}],line:596},"58":{loc:{start:{line:613,column:3},end:{line:622,column:4}},type:"if",locations:[{start:{line:613,column:3},end:{line:622,column:4}},{start:{line:613,column:3},end:{line:622,column:4}}],line:613},"59":{loc:{start:{line:640,column:3},end:{line:647,column:4}},type:"if",locations:[{start:{line:640,column:3},end:{line:647,column:4}},{start:{line:640,column:3},end:{line:647,column:4}}],line:640},"60":{loc:{start:{line:644,column:6},end:{line:644,column:65}},type:"if",locations:[{start:{line:644,column:6},end:{line:644,column:65}},{start:{line:644,column:6},end:{line:644,column:65}}],line:644},"61":{loc:{start:{line:644,column:10},end:{line:644,column:29}},type:"binary-expr",locations:[{start:{line:644,column:10},end:{line:644,column:16}},{start:{line:644,column:20},end:{line:644,column:29}}],line:644},"62":{loc:{start:{line:645,column:6},end:{line:645,column:60}},type:"if",locations:[{start:{line:645,column:6},end:{line:645,column:60}},{start:{line:645,column:6},end:{line:645,column:60}}],line:645},"63":{loc:{start:{line:646,column:6},end:{line:646,column:81}},type:"if",locations:[{start:{line:646,column:6},end:{line:646,column:81}},{start:{line:646,column:6},end:{line:646,column:81}}],line:646},"64":{loc:{start:{line:664,column:3},end:{line:681,column:4}},type:"switch",locations:[{start:{line:666,column:6},end:{line:668,column:16}},{start:{line:669,column:6},end:{line:671,column:16}},{start:{line:672,column:6},end:{line:674,column:16}},{start:{line:675,column:6},end:{line:677,column:16}},{start:{line:678,column:6},end:{line:680,column:16}}],line:664},"65":{loc:{start:{line:704,column:6},end:{line:755,column:7}},type:"switch",locations:[{start:{line:706,column:9},end:{line:714,column:18}},{start:{line:716,column:9},end:{line:724,column:18}},{start:{line:726,column:9},end:{line:734,column:18}},{start:{line:736,column:9},end:{line:744,column:18}},{start:{line:746,column:9},end:{line:754,column:18}}],line:704},"66":{loc:{start:{line:712,column:15},end:{line:712,column:63}},type:"if",locations:[{start:{line:712,column:15},end:{line:712,column:63}},{start:{line:712,column:15},end:{line:712,column:63}}],line:712},"67":{loc:{start:{line:722,column:15},end:{line:722,column:63}},type:"if",locations:[{start:{line:722,column:15},end:{line:722,column:63}},{start:{line:722,column:15},end:{line:722,column:63}}],line:722},"68":{loc:{start:{line:732,column:15},end:{line:732,column:63}},type:"if",locations:[{start:{line:732,column:15},end:{line:732,column:63}},{start:{line:732,column:15},end:{line:732,column:63}}],line:732},"69":{loc:{start:{line:742,column:15},end:{line:742,column:63}},type:"if",locations:[{start:{line:742,column:15},end:{line:742,column:63}},{start:{line:742,column:15},end:{line:742,column:63}}],line:742},"70":{loc:{start:{line:752,column:15},end:{line:752,column:63}},type:"if",locations:[{start:{line:752,column:15},end:{line:752,column:63}},{start:{line:752,column:15},end:{line:752,column:63}}],line:752},"71":{loc:{start:{line:763,column:10},end:{line:772,column:78}},type:"cond-expr",locations:[{start:{line:763,column:31},end:{line:772,column:5}},{start:{line:772,column:8},end:{line:772,column:78}}],line:763},"72":{loc:{start:{line:766,column:6},end:{line:771,column:7}},type:"switch",locations:[{start:{line:768,column:9},end:{line:768,column:31}},{start:{line:769,column:9},end:{line:769,column:36}},{start:{line:770,column:9},end:{line:770,column:34}}],line:766},"73":{loc:{start:{line:772,column:8},end:{line:772,column:78}},type:"cond-expr",locations:[{start:{line:772,column:31},end:{line:772,column:58}},{start:{line:772,column:61},end:{line:772,column:78}}],line:772},"74":{loc:{start:{line:791,column:3},end:{line:838,column:4}},type:"switch",locations:[{start:{line:793,column:6},end:{line:801,column:15}},{start:{line:802,column:6},end:{line:810,column:15}},{start:{line:811,column:6},end:{line:819,column:15}},{start:{line:820,column:6},end:{line:828,column:15}},{start:{line:829,column:6},end:{line:837,column:15}}],line:791},"75":{loc:{start:{line:799,column:12},end:{line:799,column:60}},type:"if",locations:[{start:{line:799,column:12},end:{line:799,column:60}},{start:{line:799,column:12},end:{line:799,column:60}}],line:799},"76":{loc:{start:{line:808,column:12},end:{line:808,column:60}},type:"if",locations:[{start:{line:808,column:12},end:{line:808,column:60}},{start:{line:808,column:12},end:{line:808,column:60}}],line:808},"77":{loc:{start:{line:817,column:12},end:{line:817,column:60}},type:"if",locations:[{start:{line:817,column:12},end:{line:817,column:60}},{start:{line:817,column:12},end:{line:817,column:60}}],line:817},"78":{loc:{start:{line:826,column:12},end:{line:826,column:60}},type:"if",locations:[{start:{line:826,column:12},end:{line:826,column:60}},{start:{line:826,column:12},end:{line:826,column:60}}],line:826},"79":{loc:{start:{line:835,column:12},end:{line:835,column:60}},type:"if",locations:[{start:{line:835,column:12},end:{line:835,column:60}},{start:{line:835,column:12},end:{line:835,column:60}}],line:835},"80":{loc:{start:{line:841,column:10},end:{line:841,column:83}},type:"cond-expr",locations:[{start:{line:841,column:31},end:{line:841,column:38}},{start:{line:841,column:41},end:{line:841,column:83}}],line:841},"81":{loc:{start:{line:841,column:41},end:{line:841,column:83}},type:"cond-expr",locations:[{start:{line:841,column:64},end:{line:841,column:74}},{start:{line:841,column:77},end:{line:841,column:83}}],line:841},"82":{loc:{start:{line:857,column:21},end:{line:857,column:32}},type:"default-arg",locations:[{start:{line:857,column:30},end:{line:857,column:32}}],line:857},"83":{loc:{start:{line:860,column:10},end:{line:860,column:40}},type:"cond-expr",locations:[{start:{line:860,column:19},end:{line:860,column:35}},{start:{line:860,column:38},end:{line:860,column:40}}],line:860}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0},b:{"0":[0],"1":[0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0],"12":[0],"13":[0],"14":[0,0],"15":[0],"16":[0],"17":[0,0],"18":[0,0,0],"19":[0],"20":[0],"21":[0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0,0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0,0,0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0,0,0,0],"65":[0,0,0,0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0,0],"73":[0,0],"74":[0,0,0,0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0],"83":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"af6d4d4b4a091507038875da8c5249a484e78014"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_6c4cjakge=function(){return actualCoverage;};}return actualCoverage;}cov_6c4cjakge();/**
 * `@typhonjs-plugin/eventbus` / Provides the ability to bind and trigger custom named events.
 *
 * This module is an evolution of Backbone Events. (http://backbonejs.org/#Events). Eventbus extends the
 * functionality provided in Backbone Events with additional triggering methods to receive asynchronous and
 * synchronous results.
 *
 * ---------------
 */class Eventbus{/**
    * Provides a constructor which optionally takes the eventbus name.
    *
    * @param {string}   eventbusName - Optional eventbus name.
    */constructor(eventbusName=(cov_6c4cjakge().b[0][0]++,void 0)){cov_6c4cjakge().f[0]++;cov_6c4cjakge().s[0]++;/**
       * Stores the name of this eventbus.
       *
       * @type {string}
       * @private
       */this._eventbusName=eventbusName;}/**
    * Creates an EventProxy wrapping this events instance. An EventProxy proxies events allowing all listeners added
    * to be easily removed from the wrapped Events instance.
    *
    * @returns {EventbusProxy} A new EventbusProxy for this eventbus.
    */createProxy(){cov_6c4cjakge().f[1]++;cov_6c4cjakge().s[1]++;return new EventbusProxy(this);}/**
    * Iterates over all stored events yielding an array with event name, callback function, and event context.
    *
    * @param {string} [eventName] Optional event name to iterate over.
    *
    * @yields
    */*entries(eventName=(cov_6c4cjakge().b[1][0]++,void 0)){cov_6c4cjakge().f[2]++;cov_6c4cjakge().s[2]++;/* c8 ignore next */if(!this._events){cov_6c4cjakge().b[2][0]++;cov_6c4cjakge().s[3]++;return;}else {cov_6c4cjakge().b[2][1]++;}cov_6c4cjakge().s[4]++;if(eventName){cov_6c4cjakge().b[3][0]++;cov_6c4cjakge().s[5]++;for(const event of this._events[eventName]){cov_6c4cjakge().s[6]++;yield [eventName,event.callback,event.ctx];}}else {cov_6c4cjakge().b[3][1]++;cov_6c4cjakge().s[7]++;for(const name in this._events){cov_6c4cjakge().s[8]++;for(const event of this._events[name]){cov_6c4cjakge().s[9]++;yield [name,event.callback,event.ctx];}}}}/**
    * Returns the current event count.
    *
    * @returns {number} The current proxied event count.
    */get eventCount(){cov_6c4cjakge().f[3]++;let count=(cov_6c4cjakge().s[10]++,0);cov_6c4cjakge().s[11]++;for(const name in this._events){cov_6c4cjakge().s[12]++;count+=this._events[name].length;}cov_6c4cjakge().s[13]++;return count;}/**
    * Returns the event names of registered event listeners.
    *
    * @returns {string[]} The event names of registered event listeners.
    */get eventNames(){cov_6c4cjakge().f[4]++;cov_6c4cjakge().s[14]++;/* c8 ignore next */if(!this._events){cov_6c4cjakge().b[4][0]++;cov_6c4cjakge().s[15]++;return [];}else {cov_6c4cjakge().b[4][1]++;}cov_6c4cjakge().s[16]++;return Object.keys(this._events);}/**
    * Returns the current eventbus name.
    *
    * @returns {string|*} The current eventbus name.
    */get name(){cov_6c4cjakge().f[5]++;cov_6c4cjakge().s[17]++;return this._eventbusName;}/**
    * Tell an object to listen to a particular event on an other object. The advantage of using this form, instead of
    * other.on(event, callback, object), is that listenTo allows the object to keep track of the events, and they can
    * be removed all at once later on. The callback will always be called with object as context.
    *
    * @example
    * view.listenTo(model, 'change', view.render);
    *
    * @see http://backbonejs.org/#Events-listenTo
    *
    * @param {object}   obj         - Event context
    * @param {string}   name        - Event name(s)
    * @param {Function} callback    - Event callback function
    * @param {object}   [context]   - Optional: event context
    * @returns {Eventbus} This Eventbus instance.
    */listenTo(obj,name,callback,context=(cov_6c4cjakge().b[5][0]++,this)){cov_6c4cjakge().f[6]++;cov_6c4cjakge().s[18]++;if(!obj){cov_6c4cjakge().b[6][0]++;cov_6c4cjakge().s[19]++;return this;}else {cov_6c4cjakge().b[6][1]++;}const id=(cov_6c4cjakge().s[20]++,(cov_6c4cjakge().b[7][0]++,obj._listenId)||(cov_6c4cjakge().b[7][1]++,obj._listenId=s_UNIQUE_ID('l')));const listeningTo=(cov_6c4cjakge().s[21]++,(cov_6c4cjakge().b[8][0]++,this._listeningTo)||(cov_6c4cjakge().b[8][1]++,this._listeningTo={}));let listening=(cov_6c4cjakge().s[22]++,listeningTo[id]);// This object is not listening to any other events on `obj` yet.
// Setup the necessary references to track the listening callbacks.
cov_6c4cjakge().s[23]++;if(!listening){cov_6c4cjakge().b[9][0]++;const thisId=(cov_6c4cjakge().s[24]++,(cov_6c4cjakge().b[10][0]++,this._listenId)||(cov_6c4cjakge().b[10][1]++,this._listenId=s_UNIQUE_ID('l')));cov_6c4cjakge().s[25]++;listening=listeningTo[id]={obj,objId:id,id:thisId,listeningTo,count:0};}else {cov_6c4cjakge().b[9][1]++;}// Bind callbacks on obj, and keep track of them on listening.
cov_6c4cjakge().s[26]++;s_INTERNAL_ON(obj,name,callback,context,listening);cov_6c4cjakge().s[27]++;return this;}/**
    * Just like `listenTo`, but causes the bound callback to fire only once before being removed.
    *
    * @see http://backbonejs.org/#Events-listenToOnce
    *
    * @param {object}   obj      - Event context
    * @param {string}   name     - Event name(s)
    * @param {Function} callback - Event callback function
    * @param {object}   [context=this] - Optional: event context
    * @returns {Eventbus} This Eventbus instance.
    */listenToOnce(obj,name,callback,context=(cov_6c4cjakge().b[11][0]++,this)){cov_6c4cjakge().f[7]++;// Map the event into a `{event: once}` object.
const events=(cov_6c4cjakge().s[28]++,s_EVENTS_API(s_ONCE_MAP,{},name,callback,this.stopListening.bind(this,obj)));cov_6c4cjakge().s[29]++;return this.listenTo(obj,events,void 0,context);}/**
    * Remove a previously-bound callback function from an object. If no context is specified, all of the versions of
    * the callback with different contexts will be removed. If no callback is specified, all callbacks for the event
    * will be removed. If no event is specified, callbacks for all events will be removed.
    *
    * Note that calling model.off(), for example, will indeed remove all events on the model — including events that
    * Backbone uses for internal bookkeeping.
    *
    * @example
    * // Removes just the `onChange` callback.
    * object.off("change", onChange);
    *
    * // Removes all "change" callbacks.
    * object.off("change");
    *
    * // Removes the `onChange` callback for all events.
    * object.off(null, onChange);
    *
    * // Removes all callbacks for `context` for all events.
    * object.off(null, null, context);
    *
    * // Removes all callbacks on `object`.
    * object.off();
    *
    * @see http://backbonejs.org/#Events-off
    *
    * @param {string}   name     - Event name(s)
    * @param {Function} callback - Event callback function
    * @param {object}   context  - Event context
    * @returns {Eventbus} This Eventbus instance.
    */off(name,callback=(cov_6c4cjakge().b[12][0]++,void 0),context=(cov_6c4cjakge().b[13][0]++,void 0)){cov_6c4cjakge().f[8]++;cov_6c4cjakge().s[30]++;/* c8 ignore next */if(!this._events){cov_6c4cjakge().b[14][0]++;cov_6c4cjakge().s[31]++;return this;}else {cov_6c4cjakge().b[14][1]++;}/**
       * @type {*}
       * @protected
       */cov_6c4cjakge().s[32]++;this._events=s_EVENTS_API(s_OFF_API,this._events,name,callback,{context,listeners:this._listeners});cov_6c4cjakge().s[33]++;return this;}/**
    * Bind a callback function to an object. The callback will be invoked whenever the event is fired. If you have a
    * large number of different events on a page, the convention is to use colons to namespace them: "poll:start", or
    * "change:selection".
    *
    * To supply a context value for this when the callback is invoked, pass the optional last argument:
    * model.on('change', this.render, this) or model.on({change: this.render}, this).
    *
    * @example
    * The event string may also be a space-delimited list of several events...
    * book.on("change:title change:author", ...);
    *
    * @example
    * Callbacks bound to the special "all" event will be triggered when any event occurs, and are passed the name of
    * the event as the first argument. For example, to proxy all events from one object to another:
    * proxy.on("all", function(eventName) {
    *    object.trigger(eventName);
    * });
    *
    * @example
    * All Backbone event methods also support an event map syntax, as an alternative to positional arguments:
    * book.on({
    *    "change:author": authorPane.update,
    *    "change:title change:subtitle": titleView.update,
    *    "destroy": bookView.remove
    * });
    *
    * @see http://backbonejs.org/#Events-on
    *
    * @param {string}   name     - Event name(s)
    * @param {Function} callback - Event callback function
    * @param {object}   context  - Event context
    * @returns {Eventbus} This Eventbus instance.
    */on(name,callback,context=(cov_6c4cjakge().b[15][0]++,void 0)){cov_6c4cjakge().f[9]++;cov_6c4cjakge().s[34]++;return s_INTERNAL_ON(this,name,callback,context,void 0);}/**
    * Just like `on`, but causes the bound callback to fire only once before being removed. Handy for saying "the next
    * time that X happens, do this". When multiple events are passed in using the space separated syntax, the event
    * will fire once for every event you passed in, not once for a combination of all events
    *
    * @see http://backbonejs.org/#Events-once
    *
    * @param {string}   name     - Event name(s)
    * @param {Function} callback - Event callback function
    * @param {object}   context  - Event context
    * @returns {Eventbus} This Eventbus instance.
    */once(name,callback,context=(cov_6c4cjakge().b[16][0]++,void 0)){cov_6c4cjakge().f[10]++;// Map the event into a `{event: once}` object.
const events=(cov_6c4cjakge().s[35]++,s_EVENTS_API(s_ONCE_MAP,{},name,callback,this.off.bind(this)));cov_6c4cjakge().s[36]++;if((cov_6c4cjakge().b[18][0]++,typeof name==='string')&&((cov_6c4cjakge().b[18][1]++,context===null)||(cov_6c4cjakge().b[18][2]++,typeof context==='undefined'))){cov_6c4cjakge().b[17][0]++;cov_6c4cjakge().s[37]++;callback=void 0;}else {cov_6c4cjakge().b[17][1]++;}cov_6c4cjakge().s[38]++;return this.on(events,callback,context);}/**
    * Tell an object to stop listening to events. Either call stopListening with no arguments to have the object remove
    * all of its registered callbacks ... or be more precise by telling it to remove just the events it's listening to
    * on a specific object, or a specific event, or just a specific callback.
    *
    * @example
    * view.stopListening();
    *
    * view.stopListening(model);
    *
    * @see http://backbonejs.org/#Events-stopListening
    *
    * @param {object}   obj            - Event context
    * @param {string}   name           - Event name(s)
    * @param {Function} callback       - Event callback function
    * @param {object}   [context=this] - Optional: event context
    * @returns {Eventbus} This Eventbus instance.
    */stopListening(obj,name=(cov_6c4cjakge().b[19][0]++,void 0),callback=(cov_6c4cjakge().b[20][0]++,void 0),context=(cov_6c4cjakge().b[21][0]++,this)){cov_6c4cjakge().f[11]++;const listeningTo=(cov_6c4cjakge().s[39]++,this._listeningTo);cov_6c4cjakge().s[40]++;if(!listeningTo){cov_6c4cjakge().b[22][0]++;cov_6c4cjakge().s[41]++;return this;}else {cov_6c4cjakge().b[22][1]++;}const ids=(cov_6c4cjakge().s[42]++,obj?(cov_6c4cjakge().b[23][0]++,[obj._listenId]):(cov_6c4cjakge().b[23][1]++,Object.keys(listeningTo)));cov_6c4cjakge().s[43]++;for(let i=(cov_6c4cjakge().s[44]++,0);i<ids.length;i++){const listening=(cov_6c4cjakge().s[45]++,listeningTo[ids[i]]);// If listening doesn't exist, this object is not currently listening to obj. Break out early.
cov_6c4cjakge().s[46]++;if(!listening){cov_6c4cjakge().b[24][0]++;cov_6c4cjakge().s[47]++;break;}else {cov_6c4cjakge().b[24][1]++;}cov_6c4cjakge().s[48]++;listening.obj.off(name,callback,context);}cov_6c4cjakge().s[49]++;return this;}/**
    * Trigger callbacks for the given event, or space-delimited list of events. Subsequent arguments to trigger will be
    * passed along to the event callbacks.
    *
    * @see http://backbonejs.org/#Events-trigger
    *
    * @param {string}   name  - Event name(s)
    * @returns {Eventbus} This Eventbus instance.
    */trigger(name){cov_6c4cjakge().f[12]++;cov_6c4cjakge().s[50]++;/* c8 ignore next */if(!this._events){cov_6c4cjakge().b[25][0]++;cov_6c4cjakge().s[51]++;return this;}else {cov_6c4cjakge().b[25][1]++;}const length=(cov_6c4cjakge().s[52]++,Math.max(0,arguments.length-1));const args=(cov_6c4cjakge().s[53]++,new Array(length));cov_6c4cjakge().s[54]++;for(let i=(cov_6c4cjakge().s[55]++,0);i<length;i++){cov_6c4cjakge().s[56]++;args[i]=arguments[i+1];}cov_6c4cjakge().s[57]++;s_EVENTS_TARGET_API(s_TRIGGER_API,s_TRIGGER_EVENTS,this._events,name,void 0,args);cov_6c4cjakge().s[58]++;return this;}/**
    * Provides `trigger` functionality, but collects any returned Promises from invoked targets and returns a
    * single Promise generated by `Promise.resolve` for a single value or `Promise.all` for multiple results. This is
    * a very useful mechanism to invoke asynchronous operations over an eventbus.
    *
    * @param {string}   name  - Event name(s)
    * @returns {Promise} A Promise with any results.
    */async triggerAsync(name){cov_6c4cjakge().f[13]++;cov_6c4cjakge().s[59]++;/* c8 ignore next */if(!this._events){cov_6c4cjakge().b[26][0]++;cov_6c4cjakge().s[60]++;return Promise.resolve([]);}else {cov_6c4cjakge().b[26][1]++;}const length=(cov_6c4cjakge().s[61]++,Math.max(0,arguments.length-1));const args=(cov_6c4cjakge().s[62]++,new Array(length));cov_6c4cjakge().s[63]++;for(let i=(cov_6c4cjakge().s[64]++,0);i<length;i++){cov_6c4cjakge().s[65]++;args[i]=arguments[i+1];}const promise=(cov_6c4cjakge().s[66]++,s_EVENTS_TARGET_API(s_TRIGGER_API,s_TRIGGER_ASYNC_EVENTS,this._events,name,void 0,args));cov_6c4cjakge().s[67]++;return promise!==void 0?(cov_6c4cjakge().b[27][0]++,promise):(cov_6c4cjakge().b[27][1]++,Promise.resolve());}/**
    * Defers invoking `trigger`. This is useful for triggering events in the next clock tick.
    *
    * @returns {Eventbus} This Eventbus instance.
    */triggerDefer(){cov_6c4cjakge().f[14]++;cov_6c4cjakge().s[68]++;setTimeout(()=>{cov_6c4cjakge().f[15]++;cov_6c4cjakge().s[69]++;this.trigger(...arguments);},0);cov_6c4cjakge().s[70]++;return this;}/**
    * Provides `trigger` functionality, but collects any returned result or results from invoked targets as a single
    * value or in an array and passes it back to the callee in a synchronous manner.
    *
    * @param {string}   name  - Event name(s)
    * @returns {*|Array<*>} The results of the event invocation.
    */triggerSync(name){cov_6c4cjakge().f[16]++;cov_6c4cjakge().s[71]++;/* c8 ignore next */if(!this._events){cov_6c4cjakge().b[28][0]++;cov_6c4cjakge().s[72]++;return void 0;}else {cov_6c4cjakge().b[28][1]++;}const start=(cov_6c4cjakge().s[73]++,1);const length=(cov_6c4cjakge().s[74]++,Math.max(0,arguments.length-1));const args=(cov_6c4cjakge().s[75]++,new Array(length));cov_6c4cjakge().s[76]++;for(let i=(cov_6c4cjakge().s[77]++,0);i<length;i++){cov_6c4cjakge().s[78]++;args[i]=arguments[i+start];}cov_6c4cjakge().s[79]++;return s_EVENTS_TARGET_API(s_TRIGGER_API,s_TRIGGER_SYNC_EVENTS,this._events,name,void 0,args);}}// Private / internal methods ---------------------------------------------------------------------------------------
/**
 * Regular expression used to split event strings.
 *
 * @type {RegExp}
 */const s_EVENT_SPLITTER=(cov_6c4cjakge().s[80]++,/\s+/);/**
 * Iterates over the standard `event, callback` (as well as the fancy multiple space-separated events `"change blur",
 * callback` and jQuery-style event maps `{event: callback}`).
 *
 * @param {Function} iteratee    - Event operation to invoke.
 * @param {object.<{callback: Function, context: object, ctx: object, listening:{}}>} events - Events object
 * @param {string|object} name   - A single event name, compound event names, or a hash of event names.
 * @param {Function} callback    - Event callback function
 * @param {object}   opts        - Optional parameters
 * @returns {*} The Events object.
 */cov_6c4cjakge().s[81]++;const s_EVENTS_API=(iteratee,events,name,callback,opts)=>{cov_6c4cjakge().f[17]++;let i=(cov_6c4cjakge().s[82]++,0),names;cov_6c4cjakge().s[83]++;if((cov_6c4cjakge().b[30][0]++,name)&&(cov_6c4cjakge().b[30][1]++,typeof name==='object')){cov_6c4cjakge().b[29][0]++;cov_6c4cjakge().s[84]++;// Handle event maps.
if((cov_6c4cjakge().b[32][0]++,callback!==void 0)&&(cov_6c4cjakge().b[32][1]++,'context'in opts)&&(cov_6c4cjakge().b[32][2]++,opts.context===void 0)){cov_6c4cjakge().b[31][0]++;cov_6c4cjakge().s[85]++;opts.context=callback;}else {cov_6c4cjakge().b[31][1]++;}cov_6c4cjakge().s[86]++;for(names=Object.keys(name);i<names.length;i++){cov_6c4cjakge().s[87]++;events=s_EVENTS_API(iteratee,events,names[i],name[names[i]],opts);}}else {cov_6c4cjakge().b[29][1]++;cov_6c4cjakge().s[88]++;if((cov_6c4cjakge().b[34][0]++,name)&&(cov_6c4cjakge().b[34][1]++,s_EVENT_SPLITTER.test(name))){cov_6c4cjakge().b[33][0]++;cov_6c4cjakge().s[89]++;// Handle space-separated event names by delegating them individually.
for(names=name.split(s_EVENT_SPLITTER);i<names.length;i++){cov_6c4cjakge().s[90]++;events=iteratee(events,names[i],callback,opts);}}else {cov_6c4cjakge().b[33][1]++;cov_6c4cjakge().s[91]++;// Finally, standard events.
events=iteratee(events,name,callback,opts);}}cov_6c4cjakge().s[92]++;return events;};/**
 * Iterates over the standard `event, callback` (as well as the fancy multiple space-separated events `"change blur",
 * callback` and jQuery-style event maps `{event: callback}`).
 *
 * @param {Function} iteratee       - Trigger API
 * @param {Function} iterateeTarget - Internal function which is dispatched to.
 * @param {Array<*>} events         - Array of stored event callback data.
 * @param {string}   name           - Event name(s)
 * @param {Function} callback       - callback
 * @param {object}   opts           - Optional parameters
 * @returns {*} The Events object.
 */cov_6c4cjakge().s[93]++;const s_EVENTS_TARGET_API=(iteratee,iterateeTarget,events,name,callback,opts)=>{cov_6c4cjakge().f[18]++;let i=(cov_6c4cjakge().s[94]++,0),names;cov_6c4cjakge().s[95]++;if((cov_6c4cjakge().b[36][0]++,name)&&(cov_6c4cjakge().b[36][1]++,typeof name==='object')){cov_6c4cjakge().b[35][0]++;cov_6c4cjakge().s[96]++;// Handle event maps.
if((cov_6c4cjakge().b[38][0]++,callback!==void 0)&&(cov_6c4cjakge().b[38][1]++,'context'in opts)&&(cov_6c4cjakge().b[38][2]++,opts.context===void 0)){cov_6c4cjakge().b[37][0]++;cov_6c4cjakge().s[97]++;opts.context=callback;}else {cov_6c4cjakge().b[37][1]++;}cov_6c4cjakge().s[98]++;for(names=Object.keys(name);i<names.length;i++){cov_6c4cjakge().s[99]++;events=s_EVENTS_API(iteratee,iterateeTarget,events,names[i],name[names[i]]);}}else {cov_6c4cjakge().b[35][1]++;cov_6c4cjakge().s[100]++;if((cov_6c4cjakge().b[40][0]++,name)&&(cov_6c4cjakge().b[40][1]++,s_EVENT_SPLITTER.test(name))){cov_6c4cjakge().b[39][0]++;cov_6c4cjakge().s[101]++;// Handle space-separated event names by delegating them individually.
for(names=name.split(s_EVENT_SPLITTER);i<names.length;i++){cov_6c4cjakge().s[102]++;events=iteratee(iterateeTarget,events,names[i],callback,opts);}}else {cov_6c4cjakge().b[39][1]++;cov_6c4cjakge().s[103]++;// Finally, standard events.
events=iteratee(iterateeTarget,events,name,callback,opts);}}cov_6c4cjakge().s[104]++;return events;};/**
 * Guard the `listening` argument from the public API.
 *
 * @param {Eventbus}   obj    - The Eventbus instance
 * @param {string}   name     - Event name
 * @param {Function} callback - Event callback
 * @param {object}   context  - Event context
 * @param {object.<{obj: object, objId: string, id: string, listeningTo: object, count: number}>} listening -
 *                              Listening object
 * @returns {Eventbus} The Eventbus instance.
 */cov_6c4cjakge().s[105]++;const s_INTERNAL_ON=(obj,name,callback,context,listening)=>{cov_6c4cjakge().f[19]++;cov_6c4cjakge().s[106]++;obj._events=s_EVENTS_API(s_ON_API,(cov_6c4cjakge().b[41][0]++,obj._events)||(cov_6c4cjakge().b[41][1]++,{}),name,callback,{context,ctx:obj,listening});cov_6c4cjakge().s[107]++;if(listening){cov_6c4cjakge().b[42][0]++;const listeners=(cov_6c4cjakge().s[108]++,(cov_6c4cjakge().b[43][0]++,obj._listeners)||(cov_6c4cjakge().b[43][1]++,obj._listeners={}));cov_6c4cjakge().s[109]++;listeners[listening.id]=listening;}else {cov_6c4cjakge().b[42][1]++;}cov_6c4cjakge().s[110]++;return obj;};/**
 * The reducing API that removes a callback from the `events` object.
 *
 * @param {object.<{callback: Function, context: object, ctx: object, listening:{}}>} events - Events object
 * @param {string}   name     - Event name
 * @param {Function} callback - Event callback
 * @param {object}   options  - Optional parameters
 * @returns {Eventbus} The Eventbus object.
 */cov_6c4cjakge().s[111]++;const s_OFF_API=(events,name,callback,options)=>{cov_6c4cjakge().f[20]++;cov_6c4cjakge().s[112]++;if(!events){cov_6c4cjakge().b[44][0]++;cov_6c4cjakge().s[113]++;return;}else {cov_6c4cjakge().b[44][1]++;}let i=(cov_6c4cjakge().s[114]++,0),listening;const context=(cov_6c4cjakge().s[115]++,options.context),listeners=(cov_6c4cjakge().s[116]++,options.listeners);// Delete all events listeners and "drop" events.
cov_6c4cjakge().s[117]++;if((cov_6c4cjakge().b[46][0]++,!name)&&(cov_6c4cjakge().b[46][1]++,!callback)&&(cov_6c4cjakge().b[46][2]++,!context)&&(cov_6c4cjakge().b[46][3]++,listeners)){cov_6c4cjakge().b[45][0]++;const ids=(cov_6c4cjakge().s[118]++,Object.keys(listeners));cov_6c4cjakge().s[119]++;for(;i<ids.length;i++){cov_6c4cjakge().s[120]++;listening=listeners[ids[i]];cov_6c4cjakge().s[121]++;delete listeners[listening.id];cov_6c4cjakge().s[122]++;delete listening.listeningTo[listening.objId];}cov_6c4cjakge().s[123]++;return;}else {cov_6c4cjakge().b[45][1]++;}const names=(cov_6c4cjakge().s[124]++,name?(cov_6c4cjakge().b[47][0]++,[name]):(cov_6c4cjakge().b[47][1]++,Object.keys(events)));cov_6c4cjakge().s[125]++;for(;i<names.length;i++){cov_6c4cjakge().s[126]++;name=names[i];const handlers=(cov_6c4cjakge().s[127]++,events[name]);// Bail out if there are no events stored.
/* c8 ignore next */cov_6c4cjakge().s[128]++;if(!handlers){cov_6c4cjakge().b[48][0]++;cov_6c4cjakge().s[129]++;break;}else {cov_6c4cjakge().b[48][1]++;}// Replace events if there are any remaining.  Otherwise, clean up.
const remaining=(cov_6c4cjakge().s[130]++,[]);cov_6c4cjakge().s[131]++;for(let j=(cov_6c4cjakge().s[132]++,0);j<handlers.length;j++){const handler=(cov_6c4cjakge().s[133]++,handlers[j]);cov_6c4cjakge().s[134]++;if((cov_6c4cjakge().b[50][0]++,callback)&&(cov_6c4cjakge().b[50][1]++,callback!==handler.callback)&&(cov_6c4cjakge().b[50][2]++,callback!==handler.callback._callback)||(cov_6c4cjakge().b[50][3]++,context)&&(cov_6c4cjakge().b[50][4]++,context!==handler.context)){cov_6c4cjakge().b[49][0]++;cov_6c4cjakge().s[135]++;remaining.push(handler);}else {cov_6c4cjakge().b[49][1]++;cov_6c4cjakge().s[136]++;listening=handler.listening;cov_6c4cjakge().s[137]++;if((cov_6c4cjakge().b[52][0]++,listening)&&(cov_6c4cjakge().b[52][1]++,--listening.count===0)){cov_6c4cjakge().b[51][0]++;cov_6c4cjakge().s[138]++;delete listeners[listening.id];cov_6c4cjakge().s[139]++;delete listening.listeningTo[listening.objId];}else {cov_6c4cjakge().b[51][1]++;}}}// Update tail event if the list has any events.  Otherwise, clean up.
cov_6c4cjakge().s[140]++;if(remaining.length){cov_6c4cjakge().b[53][0]++;cov_6c4cjakge().s[141]++;events[name]=remaining;}else {cov_6c4cjakge().b[53][1]++;cov_6c4cjakge().s[142]++;delete events[name];}}cov_6c4cjakge().s[143]++;return events;};/**
 * The reducing API that adds a callback to the `events` object.
 *
 * @param {object.<{callback: Function, context: object, ctx: object, listening:{}}>} events - Events object
 * @param {string}   name     - Event name
 * @param {Function} callback - Event callback
 * @param {object}   options  - Optional parameters
 * @returns {*} The Events object.
 */cov_6c4cjakge().s[144]++;const s_ON_API=(events,name,callback,options)=>{cov_6c4cjakge().f[21]++;cov_6c4cjakge().s[145]++;if(callback){cov_6c4cjakge().b[54][0]++;const handlers=(cov_6c4cjakge().s[146]++,(cov_6c4cjakge().b[55][0]++,events[name])||(cov_6c4cjakge().b[55][1]++,events[name]=[]));const context=(cov_6c4cjakge().s[147]++,options.context),ctx=(cov_6c4cjakge().s[148]++,options.ctx),listening=(cov_6c4cjakge().s[149]++,options.listening);cov_6c4cjakge().s[150]++;if(listening){cov_6c4cjakge().b[56][0]++;cov_6c4cjakge().s[151]++;listening.count++;}else {cov_6c4cjakge().b[56][1]++;}cov_6c4cjakge().s[152]++;handlers.push({callback,context,ctx:(cov_6c4cjakge().b[57][0]++,context)||(cov_6c4cjakge().b[57][1]++,ctx),listening});}else {cov_6c4cjakge().b[54][1]++;}cov_6c4cjakge().s[153]++;return events;};/**
 * Reduces the event callbacks into a map of `{event: onceWrapper}`. `offer` unbinds the `onceWrapper` after
 * it has been called.
 *
 * @param {object.<{callback: Function, context: object, ctx: object, listening:{}}>} map - Events object
 * @param {string}   name     - Event name
 * @param {Function} callback - Event callback
 * @param {Function} offer    - Function to invoke after event has been triggered once; `off()`
 * @returns {*} The Events object.
 */cov_6c4cjakge().s[154]++;const s_ONCE_MAP=function(map,name,callback,offer){cov_6c4cjakge().f[22]++;cov_6c4cjakge().s[155]++;if(callback){cov_6c4cjakge().b[58][0]++;const once=(cov_6c4cjakge().s[156]++,map[name]=()=>{cov_6c4cjakge().f[23]++;cov_6c4cjakge().s[157]++;offer(name,once);cov_6c4cjakge().s[158]++;return callback.apply(this,arguments);});cov_6c4cjakge().s[159]++;once._callback=callback;}else {cov_6c4cjakge().b[58][1]++;}cov_6c4cjakge().s[160]++;return map;};/**
 * Handles triggering the appropriate event callbacks.
 *
 * @param {Function} iterateeTarget - Internal function which is dispatched to.
 * @param {Array<*>} objEvents      - Array of stored event callback data.
 * @param {string}   name           - Event name(s)
 * @param {Function} cb             - callback
 * @param {Array<*>} args           - Arguments supplied to a trigger method.
 * @returns {*} The results from the triggered event.
 */cov_6c4cjakge().s[161]++;const s_TRIGGER_API=(iterateeTarget,objEvents,name,cb,args)=>{cov_6c4cjakge().f[24]++;let result;cov_6c4cjakge().s[162]++;if(objEvents){cov_6c4cjakge().b[59][0]++;const events=(cov_6c4cjakge().s[163]++,objEvents[name]);let allEvents=(cov_6c4cjakge().s[164]++,objEvents.all);cov_6c4cjakge().s[165]++;if((cov_6c4cjakge().b[61][0]++,events)&&(cov_6c4cjakge().b[61][1]++,allEvents)){cov_6c4cjakge().b[60][0]++;cov_6c4cjakge().s[166]++;allEvents=allEvents.slice();}else {cov_6c4cjakge().b[60][1]++;}cov_6c4cjakge().s[167]++;if(events){cov_6c4cjakge().b[62][0]++;cov_6c4cjakge().s[168]++;result=iterateeTarget(events,args);}else {cov_6c4cjakge().b[62][1]++;}cov_6c4cjakge().s[169]++;if(allEvents){cov_6c4cjakge().b[63][0]++;cov_6c4cjakge().s[170]++;result=iterateeTarget(allEvents,[name].concat(args));}else {cov_6c4cjakge().b[63][1]++;}}else {cov_6c4cjakge().b[59][1]++;}cov_6c4cjakge().s[171]++;return result;};/**
 * A difficult-to-believe, but optimized internal dispatch function for triggering events. Tries to keep the usual
 * cases speedy (most internal Backbone events have 3 arguments).
 *
 * @param {object.<{callback: Function, context: object, ctx: object, listening:{}}>}  events - events array
 * @param {Array<*>} args - event argument array
 */cov_6c4cjakge().s[172]++;const s_TRIGGER_EVENTS=(events,args)=>{cov_6c4cjakge().f[25]++;let ev,i=(cov_6c4cjakge().s[173]++,-1);const a1=(cov_6c4cjakge().s[174]++,args[0]),a2=(cov_6c4cjakge().s[175]++,args[1]),a3=(cov_6c4cjakge().s[176]++,args[2]),l=(cov_6c4cjakge().s[177]++,events.length);cov_6c4cjakge().s[178]++;switch(args.length){case 0:cov_6c4cjakge().b[64][0]++;cov_6c4cjakge().s[179]++;while(++i<l){cov_6c4cjakge().s[180]++;(ev=events[i]).callback.call(ev.ctx);}cov_6c4cjakge().s[181]++;return;case 1:cov_6c4cjakge().b[64][1]++;cov_6c4cjakge().s[182]++;while(++i<l){cov_6c4cjakge().s[183]++;(ev=events[i]).callback.call(ev.ctx,a1);}cov_6c4cjakge().s[184]++;return;case 2:cov_6c4cjakge().b[64][2]++;cov_6c4cjakge().s[185]++;while(++i<l){cov_6c4cjakge().s[186]++;(ev=events[i]).callback.call(ev.ctx,a1,a2);}cov_6c4cjakge().s[187]++;return;case 3:cov_6c4cjakge().b[64][3]++;cov_6c4cjakge().s[188]++;while(++i<l){cov_6c4cjakge().s[189]++;(ev=events[i]).callback.call(ev.ctx,a1,a2,a3);}cov_6c4cjakge().s[190]++;return;default:cov_6c4cjakge().b[64][4]++;cov_6c4cjakge().s[191]++;while(++i<l){cov_6c4cjakge().s[192]++;(ev=events[i]).callback.apply(ev.ctx,args);}cov_6c4cjakge().s[193]++;return;}};/**
 * A difficult-to-believe, but optimized internal dispatch function for triggering events. Tries to keep the usual
 * cases speedy (most internal Backbone events have 3 arguments). This dispatch method uses ES6 Promises and adds
 * any returned results to an array which is added to a Promise.all construction which passes back a Promise which
 * waits until all Promises complete. Any target invoked may return a Promise or any result. This is very useful to
 * use for any asynchronous operations.
 *
 * @param {Array<*>} events   -  Array of stored event callback data.
 * @param {Array<*>} args     -  Arguments supplied to `triggerAsync`.
 * @returns {Promise} A Promise of the results from the triggered event.
 */cov_6c4cjakge().s[194]++;const s_TRIGGER_ASYNC_EVENTS=async(events,args)=>{cov_6c4cjakge().f[26]++;let ev,i=(cov_6c4cjakge().s[195]++,-1);const a1=(cov_6c4cjakge().s[196]++,args[0]),a2=(cov_6c4cjakge().s[197]++,args[1]),a3=(cov_6c4cjakge().s[198]++,args[2]),l=(cov_6c4cjakge().s[199]++,events.length);const results=(cov_6c4cjakge().s[200]++,[]);cov_6c4cjakge().s[201]++;try{cov_6c4cjakge().s[202]++;switch(args.length){case 0:cov_6c4cjakge().b[65][0]++;cov_6c4cjakge().s[203]++;while(++i<l){const result=(cov_6c4cjakge().s[204]++,(ev=events[i]).callback.call(ev.ctx));// If we received a valid result add it to the promises array.
cov_6c4cjakge().s[205]++;if(result!==void 0){cov_6c4cjakge().b[66][0]++;cov_6c4cjakge().s[206]++;results.push(result);}else {cov_6c4cjakge().b[66][1]++;}}cov_6c4cjakge().s[207]++;break;case 1:cov_6c4cjakge().b[65][1]++;cov_6c4cjakge().s[208]++;while(++i<l){const result=(cov_6c4cjakge().s[209]++,(ev=events[i]).callback.call(ev.ctx,a1));// If we received a valid result add it to the promises array.
cov_6c4cjakge().s[210]++;if(result!==void 0){cov_6c4cjakge().b[67][0]++;cov_6c4cjakge().s[211]++;results.push(result);}else {cov_6c4cjakge().b[67][1]++;}}cov_6c4cjakge().s[212]++;break;case 2:cov_6c4cjakge().b[65][2]++;cov_6c4cjakge().s[213]++;while(++i<l){const result=(cov_6c4cjakge().s[214]++,(ev=events[i]).callback.call(ev.ctx,a1,a2));// If we received a valid result add it to the promises array.
cov_6c4cjakge().s[215]++;if(result!==void 0){cov_6c4cjakge().b[68][0]++;cov_6c4cjakge().s[216]++;results.push(result);}else {cov_6c4cjakge().b[68][1]++;}}cov_6c4cjakge().s[217]++;break;case 3:cov_6c4cjakge().b[65][3]++;cov_6c4cjakge().s[218]++;while(++i<l){const result=(cov_6c4cjakge().s[219]++,(ev=events[i]).callback.call(ev.ctx,a1,a2,a3));// If we received a valid result add it to the promises array.
cov_6c4cjakge().s[220]++;if(result!==void 0){cov_6c4cjakge().b[69][0]++;cov_6c4cjakge().s[221]++;results.push(result);}else {cov_6c4cjakge().b[69][1]++;}}cov_6c4cjakge().s[222]++;break;default:cov_6c4cjakge().b[65][4]++;cov_6c4cjakge().s[223]++;while(++i<l){const result=(cov_6c4cjakge().s[224]++,(ev=events[i]).callback.apply(ev.ctx,args));// If we received a valid result add it to the promises array.
cov_6c4cjakge().s[225]++;if(result!==void 0){cov_6c4cjakge().b[70][0]++;cov_6c4cjakge().s[226]++;results.push(result);}else {cov_6c4cjakge().b[70][1]++;}}cov_6c4cjakge().s[227]++;break;}}catch(error)// will catch synchronous event binding errors and reject again async errors.
{cov_6c4cjakge().s[228]++;return Promise.reject(error);}// If there are multiple results then use Promise.all otherwise Promise.resolve.
cov_6c4cjakge().s[229]++;return results.length>1?(cov_6c4cjakge().b[71][0]++,Promise.all(results).then(values=>{cov_6c4cjakge().f[27]++;const filtered=(cov_6c4cjakge().s[230]++,values.filter(entry=>{cov_6c4cjakge().f[28]++;cov_6c4cjakge().s[231]++;return entry!==void 0;}));cov_6c4cjakge().s[232]++;switch(filtered.length){case 0:cov_6c4cjakge().b[72][0]++;cov_6c4cjakge().s[233]++;return void 0;case 1:cov_6c4cjakge().b[72][1]++;cov_6c4cjakge().s[234]++;return filtered[0];default:cov_6c4cjakge().b[72][2]++;cov_6c4cjakge().s[235]++;return filtered;}})):(cov_6c4cjakge().b[71][1]++,results.length===1?(cov_6c4cjakge().b[73][0]++,Promise.resolve(results[0])):(cov_6c4cjakge().b[73][1]++,Promise.resolve()));};/**
 * A difficult-to-believe, but optimized internal dispatch function for triggering events. Tries to keep the usual
 * cases speedy (most internal Backbone events have 3 arguments). This dispatch method synchronously passes back a
 * single value or an array with all results returned by any invoked targets.
 *
 * @param {Array<*>} events   -  Array of stored event callback data.
 * @param {Array<*>} args     -  Arguments supplied to `triggerSync`.
 * @returns {*|Array<*>} The results from the triggered event.
 */cov_6c4cjakge().s[236]++;const s_TRIGGER_SYNC_EVENTS=(events,args)=>{cov_6c4cjakge().f[29]++;let ev,i=(cov_6c4cjakge().s[237]++,-1);const a1=(cov_6c4cjakge().s[238]++,args[0]),a2=(cov_6c4cjakge().s[239]++,args[1]),a3=(cov_6c4cjakge().s[240]++,args[2]),l=(cov_6c4cjakge().s[241]++,events.length);const results=(cov_6c4cjakge().s[242]++,[]);cov_6c4cjakge().s[243]++;switch(args.length){case 0:cov_6c4cjakge().b[74][0]++;cov_6c4cjakge().s[244]++;while(++i<l){const result=(cov_6c4cjakge().s[245]++,(ev=events[i]).callback.call(ev.ctx));// If we received a valid result return immediately.
cov_6c4cjakge().s[246]++;if(result!==void 0){cov_6c4cjakge().b[75][0]++;cov_6c4cjakge().s[247]++;results.push(result);}else {cov_6c4cjakge().b[75][1]++;}}cov_6c4cjakge().s[248]++;break;case 1:cov_6c4cjakge().b[74][1]++;cov_6c4cjakge().s[249]++;while(++i<l){const result=(cov_6c4cjakge().s[250]++,(ev=events[i]).callback.call(ev.ctx,a1));// If we received a valid result return immediately.
cov_6c4cjakge().s[251]++;if(result!==void 0){cov_6c4cjakge().b[76][0]++;cov_6c4cjakge().s[252]++;results.push(result);}else {cov_6c4cjakge().b[76][1]++;}}cov_6c4cjakge().s[253]++;break;case 2:cov_6c4cjakge().b[74][2]++;cov_6c4cjakge().s[254]++;while(++i<l){const result=(cov_6c4cjakge().s[255]++,(ev=events[i]).callback.call(ev.ctx,a1,a2));// If we received a valid result return immediately.
cov_6c4cjakge().s[256]++;if(result!==void 0){cov_6c4cjakge().b[77][0]++;cov_6c4cjakge().s[257]++;results.push(result);}else {cov_6c4cjakge().b[77][1]++;}}cov_6c4cjakge().s[258]++;break;case 3:cov_6c4cjakge().b[74][3]++;cov_6c4cjakge().s[259]++;while(++i<l){const result=(cov_6c4cjakge().s[260]++,(ev=events[i]).callback.call(ev.ctx,a1,a2,a3));// If we received a valid result return immediately.
cov_6c4cjakge().s[261]++;if(result!==void 0){cov_6c4cjakge().b[78][0]++;cov_6c4cjakge().s[262]++;results.push(result);}else {cov_6c4cjakge().b[78][1]++;}}cov_6c4cjakge().s[263]++;break;default:cov_6c4cjakge().b[74][4]++;cov_6c4cjakge().s[264]++;while(++i<l){const result=(cov_6c4cjakge().s[265]++,(ev=events[i]).callback.apply(ev.ctx,args));// If we received a valid result return immediately.
cov_6c4cjakge().s[266]++;if(result!==void 0){cov_6c4cjakge().b[79][0]++;cov_6c4cjakge().s[267]++;results.push(result);}else {cov_6c4cjakge().b[79][1]++;}}cov_6c4cjakge().s[268]++;break;}// Return the results array if there are more than one or just a single result.
cov_6c4cjakge().s[269]++;return results.length>1?(cov_6c4cjakge().b[80][0]++,results):(cov_6c4cjakge().b[80][1]++,results.length===1?(cov_6c4cjakge().b[81][0]++,results[0]):(cov_6c4cjakge().b[81][1]++,void 0));};/**
 * Generate a unique integer ID (unique within the entire client session).
 *
 * @type {number} - unique ID counter.
 */let idCounter=(cov_6c4cjakge().s[270]++,0);/**
 * Creates a new unique ID with a given prefix
 *
 * @param {string}   prefix - An optional prefix to add to unique ID.
 * @returns {string} A new unique ID with a given prefix.
 */cov_6c4cjakge().s[271]++;const s_UNIQUE_ID=(prefix=(cov_6c4cjakge().b[82][0]++,''))=>{cov_6c4cjakge().f[30]++;const id=(cov_6c4cjakge().s[272]++,`${++idCounter}`);cov_6c4cjakge().s[273]++;return prefix?(cov_6c4cjakge().b[83][0]++,`${prefix}${id}`):(cov_6c4cjakge().b[83][1]++,id);};

function cov_17i6htfup(){var path="/Volumes/Data/program/javascript/projects/TyphonJS/repos/typhonrt/typhonjs-plugin/manager/node_modules/@typhonjs-plugin/eventbus/src/index.js";var hash="4f6844f01c72ec0d12bd5f6fbf53164b98d9c735";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Volumes/Data/program/javascript/projects/TyphonJS/repos/typhonrt/typhonjs-plugin/manager/node_modules/@typhonjs-plugin/eventbus/src/index.js",statementMap:{},fnMap:{},branchMap:{},s:{},f:{},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"4f6844f01c72ec0d12bd5f6fbf53164b98d9c735"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_17i6htfup=function(){return actualCoverage;};}return actualCoverage;}cov_17i6htfup();

function cov_169jkfvo5p(){var path="/Volumes/Data/program/javascript/projects/TyphonJS/repos/typhonrt/typhonjs-plugin/manager/node_modules/@typhonjs-utils/object/src/objectUtil.js";var hash="69136e373787b4fb871dd83176bcd8626b9e7780";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Volumes/Data/program/javascript/projects/TyphonJS/repos/typhonrt/typhonjs-plugin/manager/node_modules/@typhonjs-utils/object/src/objectUtil.js",statementMap:{"0":{start:{line:35,column:3},end:{line:35,column:87}},"1":{start:{line:38,column:3},end:{line:38,column:102}},"2":{start:{line:40,column:3},end:{line:40,column:44}},"3":{start:{line:59,column:3},end:{line:59,column:87}},"4":{start:{line:62,column:3},end:{line:62,column:90}},"5":{start:{line:64,column:3},end:{line:64,column:45}},"6":{start:{line:76,column:3},end:{line:76,column:110}},"7":{start:{line:76,column:35},end:{line:76,column:108}},"8":{start:{line:78,column:3},end:{line:78,column:33}},"9":{start:{line:90,column:3},end:{line:90,column:92}},"10":{start:{line:90,column:77},end:{line:90,column:90}},"11":{start:{line:92,column:3},end:{line:92,column:56}},"12":{start:{line:104,column:3},end:{line:104,column:92}},"13":{start:{line:104,column:77},end:{line:104,column:90}},"14":{start:{line:106,column:3},end:{line:106,column:61}},"15":{start:{line:124,column:3},end:{line:124,column:57}},"16":{start:{line:124,column:35},end:{line:124,column:55}},"17":{start:{line:125,column:3},end:{line:125,column:61}},"18":{start:{line:125,column:39},end:{line:125,column:59}},"19":{start:{line:127,column:18},end:{line:127,column:37}},"20":{start:{line:130,column:3},end:{line:136,column:4}},"21":{start:{line:130,column:19},end:{line:130,column:20}},"22":{start:{line:133,column:6},end:{line:133,column:108}},"23":{start:{line:133,column:86},end:{line:133,column:106}},"24":{start:{line:135,column:6},end:{line:135,column:32}},"25":{start:{line:138,column:3},end:{line:138,column:15}},"26":{start:{line:165,column:3},end:{line:165,column:107}},"27":{start:{line:165,column:35},end:{line:165,column:105}},"28":{start:{line:166,column:3},end:{line:166,column:112}},"29":{start:{line:166,column:36},end:{line:166,column:110}},"30":{start:{line:168,column:3},end:{line:182,column:4}},"31":{start:{line:170,column:6},end:{line:174,column:9}},"32":{start:{line:172,column:29},end:{line:172,column:76}},"33":{start:{line:173,column:9},end:{line:173,column:72}},"34":{start:{line:178,column:6},end:{line:181,column:9}},"35":{start:{line:180,column:9},end:{line:180,column:66}},"36":{start:{line:198,column:3},end:{line:201,column:4}},"37":{start:{line:200,column:6},end:{line:200,column:19}},"38":{start:{line:203,column:27},end:{line:203,column:50}},"39":{start:{line:205,column:3},end:{line:213,column:4}},"40":{start:{line:205,column:19},end:{line:205,column:20}},"41":{start:{line:207,column:23},end:{line:207,column:44}},"42":{start:{line:209,column:32},end:{line:209,column:60}},"43":{start:{line:210,column:32},end:{line:210,column:60}},"44":{start:{line:212,column:6},end:{line:212,column:68}},"45":{start:{line:212,column:53},end:{line:212,column:66}},"46":{start:{line:215,column:3},end:{line:215,column:15}},"47":{start:{line:239,column:3},end:{line:239,column:102}},"48":{start:{line:239,column:35},end:{line:239,column:100}},"49":{start:{line:240,column:3},end:{line:240,column:109}},"50":{start:{line:240,column:39},end:{line:240,column:107}},"51":{start:{line:242,column:18},end:{line:242,column:37}},"52":{start:{line:245,column:3},end:{line:294,column:4}},"53":{start:{line:245,column:19},end:{line:245,column:20}},"54":{start:{line:248,column:6},end:{line:253,column:7}},"55":{start:{line:250,column:25},end:{line:250,column:38}},"56":{start:{line:252,column:9},end:{line:252,column:71}},"57":{start:{line:252,column:56},end:{line:252,column:69}},"58":{start:{line:255,column:6},end:{line:293,column:7}},"59":{start:{line:257,column:9},end:{line:282,column:10}},"60":{start:{line:260,column:15},end:{line:260,column:43}},"61":{start:{line:261,column:15},end:{line:261,column:21}},"62":{start:{line:264,column:15},end:{line:264,column:43}},"63":{start:{line:265,column:15},end:{line:265,column:21}},"64":{start:{line:268,column:15},end:{line:268,column:43}},"65":{start:{line:269,column:15},end:{line:269,column:21}},"66":{start:{line:272,column:15},end:{line:272,column:42}},"67":{start:{line:273,column:15},end:{line:273,column:21}},"68":{start:{line:276,column:15},end:{line:276,column:93}},"69":{start:{line:276,column:64},end:{line:276,column:91}},"70":{start:{line:277,column:15},end:{line:277,column:21}},"71":{start:{line:280,column:15},end:{line:280,column:43}},"72":{start:{line:281,column:15},end:{line:281,column:21}},"73":{start:{line:287,column:9},end:{line:287,column:101}},"74":{start:{line:287,column:75},end:{line:287,column:99}},"75":{start:{line:290,column:9},end:{line:290,column:101}},"76":{start:{line:290,column:86},end:{line:290,column:99}},"77":{start:{line:292,column:9},end:{line:292,column:35}},"78":{start:{line:296,column:3},end:{line:296,column:15}},"79":{start:{line:314,column:3},end:{line:314,column:87}},"80":{start:{line:314,column:35},end:{line:314,column:85}},"81":{start:{line:315,column:3},end:{line:315,column:107}},"82":{start:{line:315,column:45},end:{line:315,column:105}},"83":{start:{line:317,column:3},end:{line:322,column:4}},"84":{start:{line:319,column:6},end:{line:319,column:65}},"85":{start:{line:319,column:54},end:{line:319,column:63}},"86":{start:{line:321,column:6},end:{line:321,column:82}},"87":{start:{line:338,column:3},end:{line:338,column:94}},"88":{start:{line:338,column:35},end:{line:338,column:92}},"89":{start:{line:339,column:3},end:{line:339,column:107}},"90":{start:{line:339,column:45},end:{line:339,column:105}},"91":{start:{line:343,column:3},end:{line:363,column:4}},"92":{start:{line:345,column:6},end:{line:345,column:60}},"93":{start:{line:345,column:49},end:{line:345,column:58}},"94":{start:{line:347,column:20},end:{line:347,column:39}},"95":{start:{line:349,column:6},end:{line:362,column:7}},"96":{start:{line:352,column:12},end:{line:352,column:63}},"97":{start:{line:353,column:12},end:{line:353,column:18}},"98":{start:{line:356,column:12},end:{line:356,column:63}},"99":{start:{line:357,column:12},end:{line:357,column:18}},"100":{start:{line:360,column:12},end:{line:360,column:70}},"101":{start:{line:361,column:12},end:{line:361,column:18}},"102":{start:{line:365,column:3},end:{line:365,column:17}},"103":{start:{line:394,column:21},end:{line:394,column:47}},"104":{start:{line:397,column:3},end:{line:397,column:70}},"105":{start:{line:397,column:56},end:{line:397,column:68}},"106":{start:{line:399,column:3},end:{line:409,column:4}},"107":{start:{line:401,column:6},end:{line:408,column:7}},"108":{start:{line:403,column:9},end:{line:403,column:89}},"109":{start:{line:407,column:9},end:{line:407,column:22}},"110":{start:{line:411,column:3},end:{line:431,column:4}},"111":{start:{line:413,column:6},end:{line:430,column:7}},"112":{start:{line:413,column:22},end:{line:413,column:23}},"113":{start:{line:415,column:9},end:{line:429,column:10}},"114":{start:{line:417,column:12},end:{line:428,column:13}},"115":{start:{line:419,column:39},end:{line:420,column:31}},"116":{start:{line:422,column:15},end:{line:423,column:96}},"117":{start:{line:427,column:15},end:{line:427,column:28}},"118":{start:{line:436,column:3},end:{line:504,column:4}},"119":{start:{line:438,column:6},end:{line:455,column:7}},"120":{start:{line:438,column:22},end:{line:438,column:23}},"121":{start:{line:440,column:9},end:{line:454,column:10}},"122":{start:{line:442,column:12},end:{line:453,column:13}},"123":{start:{line:444,column:39},end:{line:445,column:31}},"124":{start:{line:447,column:15},end:{line:448,column:91}},"125":{start:{line:452,column:15},end:{line:452,column:28}},"126":{start:{line:457,column:8},end:{line:504,column:4}},"127":{start:{line:459,column:6},end:{line:476,column:7}},"128":{start:{line:459,column:22},end:{line:459,column:23}},"129":{start:{line:461,column:9},end:{line:475,column:10}},"130":{start:{line:463,column:12},end:{line:474,column:13}},"131":{start:{line:465,column:39},end:{line:466,column:31}},"132":{start:{line:468,column:15},end:{line:469,column:91}},"133":{start:{line:473,column:15},end:{line:473,column:28}},"134":{start:{line:478,column:8},end:{line:504,column:4}},"135":{start:{line:480,column:6},end:{line:503,column:7}},"136":{start:{line:480,column:22},end:{line:480,column:23}},"137":{start:{line:482,column:9},end:{line:502,column:10}},"138":{start:{line:484,column:27},end:{line:484,column:52}},"139":{start:{line:486,column:12},end:{line:486,column:87}},"140":{start:{line:486,column:60},end:{line:486,column:85}},"141":{start:{line:490,column:12},end:{line:501,column:13}},"142":{start:{line:492,column:39},end:{line:493,column:31}},"143":{start:{line:495,column:15},end:{line:496,column:71}},"144":{start:{line:500,column:15},end:{line:500,column:28}},"145":{start:{line:506,column:3},end:{line:506,column:15}},"146":{start:{line:535,column:21},end:{line:535,column:47}},"147":{start:{line:538,column:3},end:{line:538,column:70}},"148":{start:{line:538,column:56},end:{line:538,column:68}},"149":{start:{line:540,column:3},end:{line:550,column:4}},"150":{start:{line:542,column:6},end:{line:549,column:7}},"151":{start:{line:544,column:9},end:{line:544,column:90}},"152":{start:{line:548,column:9},end:{line:548,column:22}},"153":{start:{line:552,column:3},end:{line:589,column:4}},"154":{start:{line:555,column:6},end:{line:565,column:7}},"155":{start:{line:557,column:33},end:{line:557,column:102}},"156":{start:{line:559,column:9},end:{line:560,column:39}},"157":{start:{line:564,column:9},end:{line:564,column:22}},"158":{start:{line:567,column:8},end:{line:589,column:4}},"159":{start:{line:569,column:6},end:{line:588,column:7}},"160":{start:{line:571,column:24},end:{line:571,column:43}},"161":{start:{line:573,column:9},end:{line:573,column:84}},"162":{start:{line:573,column:57},end:{line:573,column:82}},"163":{start:{line:577,column:9},end:{line:587,column:10}},"164":{start:{line:579,column:36},end:{line:579,column:105}},"165":{start:{line:581,column:12},end:{line:582,column:29}},"166":{start:{line:586,column:12},end:{line:586,column:25}},"167":{start:{line:591,column:3},end:{line:591,column:15}},"168":{start:{line:609,column:21},end:{line:609,column:47}},"169":{start:{line:613,column:3},end:{line:620,column:4}},"170":{start:{line:615,column:6},end:{line:615,column:62}},"171":{start:{line:619,column:6},end:{line:619,column:62}},"172":{start:{line:622,column:3},end:{line:622,column:17}},"173":{start:{line:640,column:3},end:{line:651,column:4}},"174":{start:{line:642,column:6},end:{line:642,column:97}},"175":{start:{line:642,column:22},end:{line:642,column:23}},"176":{start:{line:642,column:55},end:{line:642,column:95}},"177":{start:{line:644,column:8},end:{line:651,column:4}},"178":{start:{line:646,column:6},end:{line:650,column:7}},"179":{start:{line:649,column:9},end:{line:649,column:120}},"180":{start:{line:649,column:79},end:{line:649,column:118}},"181":{start:{line:653,column:3},end:{line:653,column:30}},"182":{start:{line:671,column:3},end:{line:711,column:4}},"183":{start:{line:673,column:6},end:{line:691,column:7}},"184":{start:{line:675,column:9},end:{line:678,column:10}},"185":{start:{line:675,column:25},end:{line:675,column:26}},"186":{start:{line:677,column:12},end:{line:677,column:66}},"187":{start:{line:680,column:11},end:{line:691,column:7}},"188":{start:{line:682,column:9},end:{line:686,column:10}},"189":{start:{line:685,column:12},end:{line:685,column:98}},"190":{start:{line:685,column:44},end:{line:685,column:96}},"191":{start:{line:690,column:9},end:{line:690,column:27}},"192":{start:{line:695,column:6},end:{line:710,column:7}},"193":{start:{line:697,column:9},end:{line:697,column:101}},"194":{start:{line:697,column:25},end:{line:697,column:26}},"195":{start:{line:697,column:58},end:{line:697,column:99}},"196":{start:{line:699,column:11},end:{line:710,column:7}},"197":{start:{line:701,column:9},end:{line:705,column:10}},"198":{start:{line:704,column:12},end:{line:704,column:86}},"199":{start:{line:704,column:44},end:{line:704,column:84}},"200":{start:{line:709,column:9},end:{line:709,column:20}},"201":{start:{line:713,column:3},end:{line:713,column:15}},"202":{start:{line:727,column:21},end:{line:727,column:23}},"203":{start:{line:729,column:3},end:{line:747,column:4}},"204":{start:{line:731,column:6},end:{line:746,column:7}},"205":{start:{line:733,column:9},end:{line:745,column:10}},"206":{start:{line:735,column:30},end:{line:735,column:57}},"207":{start:{line:737,column:12},end:{line:740,column:15}},"208":{start:{line:739,column:15},end:{line:739,column:111}},"209":{start:{line:744,column:12},end:{line:744,column:32}},"210":{start:{line:749,column:3},end:{line:749,column:20}},"211":{start:{line:765,column:17},end:{line:765,column:35}},"212":{start:{line:766,column:3},end:{line:766,column:37}},"213":{start:{line:767,column:3},end:{line:767,column:16}}},fnMap:{"0":{name:"deepFreeze",decl:{start:{line:32,column:16},end:{line:32,column:26}},loc:{start:{line:33,column:0},end:{line:41,column:1}},line:33},"1":{name:"depthTraverse",decl:{start:{line:56,column:16},end:{line:56,column:29}},loc:{start:{line:57,column:0},end:{line:65,column:1}},line:57},"2":{name:"getAccessorList",decl:{start:{line:74,column:16},end:{line:74,column:31}},loc:{start:{line:75,column:0},end:{line:79,column:1}},line:75},"3":{name:"isIterable",decl:{start:{line:88,column:16},end:{line:88,column:26}},loc:{start:{line:89,column:0},end:{line:93,column:1}},line:89},"4":{name:"isIterableAsync",decl:{start:{line:102,column:16},end:{line:102,column:31}},loc:{start:{line:103,column:0},end:{line:107,column:1}},line:103},"5":{name:"safeAccess",decl:{start:{line:122,column:16},end:{line:122,column:26}},loc:{start:{line:123,column:0},end:{line:139,column:1}},line:123},"6":{name:"safeBatchSet",decl:{start:{line:163,column:16},end:{line:163,column:28}},loc:{start:{line:164,column:0},end:{line:183,column:1}},line:164},"7":{name:"(anonymous_7)",decl:{start:{line:170,column:24},end:{line:170,column:25}},loc:{start:{line:171,column:6},end:{line:174,column:7}},line:171},"8":{name:"(anonymous_8)",decl:{start:{line:178,column:24},end:{line:178,column:25}},loc:{start:{line:179,column:6},end:{line:181,column:7}},line:179},"9":{name:"safeEqual",decl:{start:{line:196,column:16},end:{line:196,column:25}},loc:{start:{line:197,column:0},end:{line:216,column:1}},line:197},"10":{name:"safeSet",decl:{start:{line:237,column:16},end:{line:237,column:23}},loc:{start:{line:238,column:0},end:{line:297,column:1}},line:238},"11":{name:"safeSetAll",decl:{start:{line:312,column:16},end:{line:312,column:26}},loc:{start:{line:313,column:0},end:{line:323,column:1}},line:313},"12":{name:"validate",decl:{start:{line:336,column:16},end:{line:336,column:24}},loc:{start:{line:337,column:0},end:{line:366,column:1}},line:337},"13":{name:"validateArray",decl:{start:{line:391,column:16},end:{line:391,column:29}},loc:{start:{line:393,column:0},end:{line:507,column:1}},line:393},"14":{name:"validateEntry",decl:{start:{line:532,column:16},end:{line:532,column:29}},loc:{start:{line:534,column:0},end:{line:592,column:1}},line:534},"15":{name:"validateEntryOrArray",decl:{start:{line:607,column:16},end:{line:607,column:36}},loc:{start:{line:608,column:0},end:{line:623,column:1}},line:608},"16":{name:"_deepFreeze",decl:{start:{line:638,column:9},end:{line:638,column:20}},loc:{start:{line:639,column:0},end:{line:654,column:1}},line:639},"17":{name:"_depthTraverse",decl:{start:{line:669,column:9},end:{line:669,column:23}},loc:{start:{line:670,column:0},end:{line:714,column:1}},line:670},"18":{name:"_getAccessorList",decl:{start:{line:725,column:9},end:{line:725,column:25}},loc:{start:{line:726,column:0},end:{line:750,column:1}},line:726},"19":{name:"(anonymous_19)",decl:{start:{line:737,column:30},end:{line:737,column:31}},loc:{start:{line:738,column:12},end:{line:740,column:13}},line:738},"20":{name:"_validateError",decl:{start:{line:763,column:9},end:{line:763,column:23}},loc:{start:{line:764,column:0},end:{line:768,column:1}},line:764}},branchMap:{"0":{loc:{start:{line:32,column:33},end:{line:32,column:52}},type:"default-arg",locations:[{start:{line:32,column:50},end:{line:32,column:52}}],line:32},"1":{loc:{start:{line:35,column:3},end:{line:35,column:87}},type:"if",locations:[{start:{line:35,column:3},end:{line:35,column:87}}],line:35},"2":{loc:{start:{line:38,column:3},end:{line:38,column:102}},type:"if",locations:[{start:{line:38,column:3},end:{line:38,column:102}}],line:38},"3":{loc:{start:{line:56,column:42},end:{line:56,column:56}},type:"default-arg",locations:[{start:{line:56,column:51},end:{line:56,column:56}}],line:56},"4":{loc:{start:{line:59,column:3},end:{line:59,column:87}},type:"if",locations:[{start:{line:59,column:3},end:{line:59,column:87}}],line:59},"5":{loc:{start:{line:62,column:3},end:{line:62,column:90}},type:"if",locations:[{start:{line:62,column:3},end:{line:62,column:90}}],line:62},"6":{loc:{start:{line:76,column:3},end:{line:76,column:110}},type:"if",locations:[{start:{line:76,column:3},end:{line:76,column:110}},{start:{line:76,column:3},end:{line:76,column:110}}],line:76},"7":{loc:{start:{line:90,column:3},end:{line:90,column:92}},type:"if",locations:[{start:{line:90,column:3},end:{line:90,column:92}},{start:{line:90,column:3},end:{line:90,column:92}}],line:90},"8":{loc:{start:{line:90,column:7},end:{line:90,column:73}},type:"binary-expr",locations:[{start:{line:90,column:7},end:{line:90,column:22}},{start:{line:90,column:26},end:{line:90,column:43}},{start:{line:90,column:47},end:{line:90,column:73}}],line:90},"9":{loc:{start:{line:104,column:3},end:{line:104,column:92}},type:"if",locations:[{start:{line:104,column:3},end:{line:104,column:92}},{start:{line:104,column:3},end:{line:104,column:92}}],line:104},"10":{loc:{start:{line:104,column:7},end:{line:104,column:73}},type:"binary-expr",locations:[{start:{line:104,column:7},end:{line:104,column:22}},{start:{line:104,column:26},end:{line:104,column:43}},{start:{line:104,column:47},end:{line:104,column:73}}],line:104},"11":{loc:{start:{line:122,column:43},end:{line:122,column:64}},type:"default-arg",locations:[{start:{line:122,column:58},end:{line:122,column:64}}],line:122},"12":{loc:{start:{line:124,column:3},end:{line:124,column:57}},type:"if",locations:[{start:{line:124,column:3},end:{line:124,column:57}},{start:{line:124,column:3},end:{line:124,column:57}}],line:124},"13":{loc:{start:{line:125,column:3},end:{line:125,column:61}},type:"if",locations:[{start:{line:125,column:3},end:{line:125,column:61}},{start:{line:125,column:3},end:{line:125,column:61}}],line:125},"14":{loc:{start:{line:133,column:6},end:{line:133,column:108}},type:"if",locations:[{start:{line:133,column:6},end:{line:133,column:108}},{start:{line:133,column:6},end:{line:133,column:108}}],line:133},"15":{loc:{start:{line:133,column:10},end:{line:133,column:82}},type:"binary-expr",locations:[{start:{line:133,column:10},end:{line:133,column:51}},{start:{line:133,column:55},end:{line:133,column:82}}],line:133},"16":{loc:{start:{line:163,column:53},end:{line:163,column:70}},type:"default-arg",locations:[{start:{line:163,column:65},end:{line:163,column:70}}],line:163},"17":{loc:{start:{line:163,column:72},end:{line:163,column:94}},type:"default-arg",locations:[{start:{line:163,column:93},end:{line:163,column:94}}],line:163},"18":{loc:{start:{line:163,column:96},end:{line:163,column:116}},type:"default-arg",locations:[{start:{line:163,column:112},end:{line:163,column:116}}],line:163},"19":{loc:{start:{line:165,column:3},end:{line:165,column:107}},type:"if",locations:[{start:{line:165,column:3},end:{line:165,column:107}},{start:{line:165,column:3},end:{line:165,column:107}}],line:165},"20":{loc:{start:{line:166,column:3},end:{line:166,column:112}},type:"if",locations:[{start:{line:166,column:3},end:{line:166,column:112}},{start:{line:166,column:3},end:{line:166,column:112}}],line:166},"21":{loc:{start:{line:168,column:3},end:{line:182,column:4}},type:"if",locations:[{start:{line:168,column:3},end:{line:182,column:4}},{start:{line:168,column:3},end:{line:182,column:4}}],line:168},"22":{loc:{start:{line:198,column:3},end:{line:201,column:4}},type:"if",locations:[{start:{line:198,column:3},end:{line:201,column:4}},{start:{line:198,column:3},end:{line:201,column:4}}],line:198},"23":{loc:{start:{line:198,column:7},end:{line:198,column:107}},type:"binary-expr",locations:[{start:{line:198,column:7},end:{line:198,column:36}},{start:{line:198,column:40},end:{line:198,column:55}},{start:{line:198,column:59},end:{line:198,column:88}},{start:{line:198,column:92},end:{line:198,column:107}}],line:198},"24":{loc:{start:{line:212,column:6},end:{line:212,column:68}},type:"if",locations:[{start:{line:212,column:6},end:{line:212,column:68}},{start:{line:212,column:6},end:{line:212,column:68}}],line:212},"25":{loc:{start:{line:237,column:47},end:{line:237,column:64}},type:"default-arg",locations:[{start:{line:237,column:59},end:{line:237,column:64}}],line:237},"26":{loc:{start:{line:237,column:66},end:{line:237,column:86}},type:"default-arg",locations:[{start:{line:237,column:82},end:{line:237,column:86}}],line:237},"27":{loc:{start:{line:239,column:3},end:{line:239,column:102}},type:"if",locations:[{start:{line:239,column:3},end:{line:239,column:102}},{start:{line:239,column:3},end:{line:239,column:102}}],line:239},"28":{loc:{start:{line:240,column:3},end:{line:240,column:109}},type:"if",locations:[{start:{line:240,column:3},end:{line:240,column:109}},{start:{line:240,column:3},end:{line:240,column:109}}],line:240},"29":{loc:{start:{line:248,column:6},end:{line:253,column:7}},type:"if",locations:[{start:{line:248,column:6},end:{line:253,column:7}},{start:{line:248,column:6},end:{line:253,column:7}}],line:248},"30":{loc:{start:{line:252,column:9},end:{line:252,column:71}},type:"if",locations:[{start:{line:252,column:9},end:{line:252,column:71}},{start:{line:252,column:9},end:{line:252,column:71}}],line:252},"31":{loc:{start:{line:252,column:13},end:{line:252,column:52}},type:"binary-expr",locations:[{start:{line:252,column:13},end:{line:252,column:38}},{start:{line:252,column:42},end:{line:252,column:52}}],line:252},"32":{loc:{start:{line:255,column:6},end:{line:293,column:7}},type:"if",locations:[{start:{line:255,column:6},end:{line:293,column:7}},{start:{line:255,column:6},end:{line:293,column:7}}],line:255},"33":{loc:{start:{line:257,column:9},end:{line:282,column:10}},type:"switch",locations:[{start:{line:259,column:12},end:{line:261,column:21}},{start:{line:263,column:12},end:{line:265,column:21}},{start:{line:267,column:12},end:{line:269,column:21}},{start:{line:271,column:12},end:{line:273,column:21}},{start:{line:275,column:12},end:{line:277,column:21}},{start:{line:279,column:12},end:{line:281,column:21}}],line:257},"34":{loc:{start:{line:276,column:15},end:{line:276,column:93}},type:"if",locations:[{start:{line:276,column:15},end:{line:276,column:93}},{start:{line:276,column:15},end:{line:276,column:93}}],line:276},"35":{loc:{start:{line:287,column:9},end:{line:287,column:101}},type:"if",locations:[{start:{line:287,column:9},end:{line:287,column:101}},{start:{line:287,column:9},end:{line:287,column:101}}],line:287},"36":{loc:{start:{line:287,column:13},end:{line:287,column:71}},type:"binary-expr",locations:[{start:{line:287,column:13},end:{line:287,column:26}},{start:{line:287,column:30},end:{line:287,column:71}}],line:287},"37":{loc:{start:{line:290,column:9},end:{line:290,column:101}},type:"if",locations:[{start:{line:290,column:9},end:{line:290,column:101}},{start:{line:290,column:9},end:{line:290,column:101}}],line:290},"38":{loc:{start:{line:290,column:13},end:{line:290,column:82}},type:"binary-expr",locations:[{start:{line:290,column:13},end:{line:290,column:40}},{start:{line:290,column:44},end:{line:290,column:82}}],line:290},"39":{loc:{start:{line:312,column:49},end:{line:312,column:66}},type:"default-arg",locations:[{start:{line:312,column:61},end:{line:312,column:66}}],line:312},"40":{loc:{start:{line:312,column:68},end:{line:312,column:88}},type:"default-arg",locations:[{start:{line:312,column:84},end:{line:312,column:88}}],line:312},"41":{loc:{start:{line:314,column:3},end:{line:314,column:87}},type:"if",locations:[{start:{line:314,column:3},end:{line:314,column:87}},{start:{line:314,column:3},end:{line:314,column:87}}],line:314},"42":{loc:{start:{line:315,column:3},end:{line:315,column:107}},type:"if",locations:[{start:{line:315,column:3},end:{line:315,column:107}},{start:{line:315,column:3},end:{line:315,column:107}}],line:315},"43":{loc:{start:{line:319,column:6},end:{line:319,column:65}},type:"if",locations:[{start:{line:319,column:6},end:{line:319,column:65}},{start:{line:319,column:6},end:{line:319,column:65}}],line:319},"44":{loc:{start:{line:336,column:31},end:{line:336,column:50}},type:"default-arg",locations:[{start:{line:336,column:48},end:{line:336,column:50}}],line:336},"45":{loc:{start:{line:336,column:52},end:{line:336,column:69}},type:"default-arg",locations:[{start:{line:336,column:63},end:{line:336,column:69}}],line:336},"46":{loc:{start:{line:338,column:3},end:{line:338,column:94}},type:"if",locations:[{start:{line:338,column:3},end:{line:338,column:94}},{start:{line:338,column:3},end:{line:338,column:94}}],line:338},"47":{loc:{start:{line:339,column:3},end:{line:339,column:107}},type:"if",locations:[{start:{line:339,column:3},end:{line:339,column:107}},{start:{line:339,column:3},end:{line:339,column:107}}],line:339},"48":{loc:{start:{line:345,column:6},end:{line:345,column:60}},type:"if",locations:[{start:{line:345,column:6},end:{line:345,column:60}},{start:{line:345,column:6},end:{line:345,column:60}}],line:345},"49":{loc:{start:{line:349,column:6},end:{line:362,column:7}},type:"switch",locations:[{start:{line:351,column:9},end:{line:353,column:18}},{start:{line:355,column:9},end:{line:357,column:18}},{start:{line:359,column:9},end:{line:361,column:18}}],line:349},"50":{loc:{start:{line:391,column:46},end:{line:392,column:20}},type:"default-arg",locations:[{start:{line:392,column:18},end:{line:392,column:20}}],line:391},"51":{loc:{start:{line:391,column:48},end:{line:391,column:61}},type:"default-arg",locations:[{start:{line:391,column:55},end:{line:391,column:61}}],line:391},"52":{loc:{start:{line:391,column:63},end:{line:391,column:80}},type:"default-arg",locations:[{start:{line:391,column:74},end:{line:391,column:80}}],line:391},"53":{loc:{start:{line:391,column:82},end:{line:391,column:98}},type:"default-arg",locations:[{start:{line:391,column:92},end:{line:391,column:98}}],line:391},"54":{loc:{start:{line:391,column:100},end:{line:391,column:115}},type:"default-arg",locations:[{start:{line:391,column:111},end:{line:391,column:115}}],line:391},"55":{loc:{start:{line:392,column:1},end:{line:392,column:13}},type:"default-arg",locations:[{start:{line:392,column:9},end:{line:392,column:13}}],line:392},"56":{loc:{start:{line:392,column:22},end:{line:392,column:39}},type:"default-arg",locations:[{start:{line:392,column:33},end:{line:392,column:39}}],line:392},"57":{loc:{start:{line:397,column:3},end:{line:397,column:70}},type:"if",locations:[{start:{line:397,column:3},end:{line:397,column:70}},{start:{line:397,column:3},end:{line:397,column:70}}],line:397},"58":{loc:{start:{line:397,column:7},end:{line:397,column:52}},type:"binary-expr",locations:[{start:{line:397,column:7},end:{line:397,column:16}},{start:{line:397,column:20},end:{line:397,column:52}}],line:397},"59":{loc:{start:{line:399,column:3},end:{line:409,column:4}},type:"if",locations:[{start:{line:399,column:3},end:{line:409,column:4}},{start:{line:399,column:3},end:{line:409,column:4}}],line:399},"60":{loc:{start:{line:401,column:6},end:{line:408,column:7}},type:"if",locations:[{start:{line:401,column:6},end:{line:408,column:7}},{start:{line:401,column:6},end:{line:408,column:7}}],line:401},"61":{loc:{start:{line:411,column:3},end:{line:431,column:4}},type:"if",locations:[{start:{line:411,column:3},end:{line:431,column:4}},{start:{line:411,column:3},end:{line:431,column:4}}],line:411},"62":{loc:{start:{line:415,column:9},end:{line:429,column:10}},type:"if",locations:[{start:{line:415,column:9},end:{line:429,column:10}},{start:{line:415,column:9},end:{line:429,column:10}}],line:415},"63":{loc:{start:{line:417,column:12},end:{line:428,column:13}},type:"if",locations:[{start:{line:417,column:12},end:{line:428,column:13}},{start:{line:417,column:12},end:{line:428,column:13}}],line:417},"64":{loc:{start:{line:419,column:39},end:{line:420,column:31}},type:"cond-expr",locations:[{start:{line:419,column:77},end:{line:419,column:108}},{start:{line:420,column:16},end:{line:420,column:31}}],line:419},"65":{loc:{start:{line:436,column:3},end:{line:504,column:4}},type:"if",locations:[{start:{line:436,column:3},end:{line:504,column:4}},{start:{line:436,column:3},end:{line:504,column:4}}],line:436},"66":{loc:{start:{line:440,column:9},end:{line:454,column:10}},type:"if",locations:[{start:{line:440,column:9},end:{line:454,column:10}},{start:{line:440,column:9},end:{line:454,column:10}}],line:440},"67":{loc:{start:{line:442,column:12},end:{line:453,column:13}},type:"if",locations:[{start:{line:442,column:12},end:{line:453,column:13}},{start:{line:442,column:12},end:{line:453,column:13}}],line:442},"68":{loc:{start:{line:444,column:39},end:{line:445,column:31}},type:"cond-expr",locations:[{start:{line:444,column:77},end:{line:444,column:108}},{start:{line:445,column:16},end:{line:445,column:31}}],line:444},"69":{loc:{start:{line:457,column:8},end:{line:504,column:4}},type:"if",locations:[{start:{line:457,column:8},end:{line:504,column:4}},{start:{line:457,column:8},end:{line:504,column:4}}],line:457},"70":{loc:{start:{line:461,column:9},end:{line:475,column:10}},type:"if",locations:[{start:{line:461,column:9},end:{line:475,column:10}},{start:{line:461,column:9},end:{line:475,column:10}}],line:461},"71":{loc:{start:{line:463,column:12},end:{line:474,column:13}},type:"if",locations:[{start:{line:463,column:12},end:{line:474,column:13}},{start:{line:463,column:12},end:{line:474,column:13}}],line:463},"72":{loc:{start:{line:465,column:39},end:{line:466,column:31}},type:"cond-expr",locations:[{start:{line:465,column:77},end:{line:465,column:108}},{start:{line:466,column:16},end:{line:466,column:31}}],line:465},"73":{loc:{start:{line:478,column:8},end:{line:504,column:4}},type:"if",locations:[{start:{line:478,column:8},end:{line:504,column:4}},{start:{line:478,column:8},end:{line:504,column:4}}],line:478},"74":{loc:{start:{line:486,column:12},end:{line:486,column:87}},type:"if",locations:[{start:{line:486,column:12},end:{line:486,column:87}},{start:{line:486,column:12},end:{line:486,column:87}}],line:486},"75":{loc:{start:{line:486,column:16},end:{line:486,column:56}},type:"binary-expr",locations:[{start:{line:486,column:16},end:{line:486,column:45}},{start:{line:486,column:49},end:{line:486,column:56}}],line:486},"76":{loc:{start:{line:490,column:12},end:{line:501,column:13}},type:"if",locations:[{start:{line:490,column:12},end:{line:501,column:13}},{start:{line:490,column:12},end:{line:501,column:13}}],line:490},"77":{loc:{start:{line:492,column:39},end:{line:493,column:31}},type:"cond-expr",locations:[{start:{line:492,column:77},end:{line:492,column:108}},{start:{line:493,column:16},end:{line:493,column:31}}],line:492},"78":{loc:{start:{line:532,column:46},end:{line:533,column:20}},type:"default-arg",locations:[{start:{line:533,column:18},end:{line:533,column:20}}],line:532},"79":{loc:{start:{line:532,column:48},end:{line:532,column:61}},type:"default-arg",locations:[{start:{line:532,column:55},end:{line:532,column:61}}],line:532},"80":{loc:{start:{line:532,column:63},end:{line:532,column:80}},type:"default-arg",locations:[{start:{line:532,column:74},end:{line:532,column:80}}],line:532},"81":{loc:{start:{line:532,column:82},end:{line:532,column:98}},type:"default-arg",locations:[{start:{line:532,column:92},end:{line:532,column:98}}],line:532},"82":{loc:{start:{line:532,column:100},end:{line:532,column:115}},type:"default-arg",locations:[{start:{line:532,column:111},end:{line:532,column:115}}],line:532},"83":{loc:{start:{line:533,column:1},end:{line:533,column:13}},type:"default-arg",locations:[{start:{line:533,column:9},end:{line:533,column:13}}],line:533},"84":{loc:{start:{line:533,column:22},end:{line:533,column:39}},type:"default-arg",locations:[{start:{line:533,column:33},end:{line:533,column:39}}],line:533},"85":{loc:{start:{line:538,column:3},end:{line:538,column:70}},type:"if",locations:[{start:{line:538,column:3},end:{line:538,column:70}},{start:{line:538,column:3},end:{line:538,column:70}}],line:538},"86":{loc:{start:{line:538,column:7},end:{line:538,column:52}},type:"binary-expr",locations:[{start:{line:538,column:7},end:{line:538,column:16}},{start:{line:538,column:20},end:{line:538,column:52}}],line:538},"87":{loc:{start:{line:540,column:3},end:{line:550,column:4}},type:"if",locations:[{start:{line:540,column:3},end:{line:550,column:4}},{start:{line:540,column:3},end:{line:550,column:4}}],line:540},"88":{loc:{start:{line:540,column:7},end:{line:540,column:40}},type:"binary-expr",locations:[{start:{line:540,column:7},end:{line:540,column:11}},{start:{line:540,column:15},end:{line:540,column:40}}],line:540},"89":{loc:{start:{line:542,column:6},end:{line:549,column:7}},type:"if",locations:[{start:{line:542,column:6},end:{line:549,column:7}},{start:{line:542,column:6},end:{line:549,column:7}}],line:542},"90":{loc:{start:{line:552,column:3},end:{line:589,column:4}},type:"if",locations:[{start:{line:552,column:3},end:{line:589,column:4}},{start:{line:552,column:3},end:{line:589,column:4}}],line:552},"91":{loc:{start:{line:552,column:7},end:{line:553,column:64}},type:"binary-expr",locations:[{start:{line:552,column:8},end:{line:552,column:31}},{start:{line:552,column:35},end:{line:552,column:59}},{start:{line:553,column:5},end:{line:553,column:28}},{start:{line:553,column:32},end:{line:553,column:63}}],line:552},"92":{loc:{start:{line:555,column:6},end:{line:565,column:7}},type:"if",locations:[{start:{line:555,column:6},end:{line:565,column:7}},{start:{line:555,column:6},end:{line:565,column:7}}],line:555},"93":{loc:{start:{line:557,column:33},end:{line:557,column:102}},type:"cond-expr",locations:[{start:{line:557,column:65},end:{line:557,column:90}},{start:{line:557,column:93},end:{line:557,column:102}}],line:557},"94":{loc:{start:{line:567,column:8},end:{line:589,column:4}},type:"if",locations:[{start:{line:567,column:8},end:{line:589,column:4}},{start:{line:567,column:8},end:{line:589,column:4}}],line:567},"95":{loc:{start:{line:573,column:9},end:{line:573,column:84}},type:"if",locations:[{start:{line:573,column:9},end:{line:573,column:84}},{start:{line:573,column:9},end:{line:573,column:84}}],line:573},"96":{loc:{start:{line:573,column:13},end:{line:573,column:53}},type:"binary-expr",locations:[{start:{line:573,column:13},end:{line:573,column:42}},{start:{line:573,column:46},end:{line:573,column:53}}],line:573},"97":{loc:{start:{line:577,column:9},end:{line:587,column:10}},type:"if",locations:[{start:{line:577,column:9},end:{line:587,column:10}},{start:{line:577,column:9},end:{line:587,column:10}}],line:577},"98":{loc:{start:{line:579,column:36},end:{line:579,column:105}},type:"cond-expr",locations:[{start:{line:579,column:68},end:{line:579,column:93}},{start:{line:579,column:96},end:{line:579,column:105}}],line:579},"99":{loc:{start:{line:607,column:60},end:{line:607,column:77}},type:"default-arg",locations:[{start:{line:607,column:71},end:{line:607,column:77}}],line:607},"100":{loc:{start:{line:613,column:3},end:{line:620,column:4}},type:"if",locations:[{start:{line:613,column:3},end:{line:620,column:4}},{start:{line:613,column:3},end:{line:620,column:4}}],line:613},"101":{loc:{start:{line:640,column:3},end:{line:651,column:4}},type:"if",locations:[{start:{line:640,column:3},end:{line:651,column:4}},{start:{line:640,column:3},end:{line:651,column:4}}],line:640},"102":{loc:{start:{line:644,column:8},end:{line:651,column:4}},type:"if",locations:[{start:{line:644,column:8},end:{line:651,column:4}},{start:{line:644,column:8},end:{line:651,column:4}}],line:644},"103":{loc:{start:{line:649,column:9},end:{line:649,column:120}},type:"if",locations:[{start:{line:649,column:9},end:{line:649,column:120}},{start:{line:649,column:9},end:{line:649,column:120}}],line:649},"104":{loc:{start:{line:649,column:13},end:{line:649,column:75}},type:"binary-expr",locations:[{start:{line:649,column:13},end:{line:649,column:37}},{start:{line:649,column:41},end:{line:649,column:75}}],line:649},"105":{loc:{start:{line:671,column:3},end:{line:711,column:4}},type:"if",locations:[{start:{line:671,column:3},end:{line:711,column:4}},{start:{line:671,column:3},end:{line:711,column:4}}],line:671},"106":{loc:{start:{line:673,column:6},end:{line:691,column:7}},type:"if",locations:[{start:{line:673,column:6},end:{line:691,column:7}},{start:{line:673,column:6},end:{line:691,column:7}}],line:673},"107":{loc:{start:{line:680,column:11},end:{line:691,column:7}},type:"if",locations:[{start:{line:680,column:11},end:{line:691,column:7}},{start:{line:680,column:11},end:{line:691,column:7}}],line:680},"108":{loc:{start:{line:685,column:12},end:{line:685,column:98}},type:"if",locations:[{start:{line:685,column:12},end:{line:685,column:98}},{start:{line:685,column:12},end:{line:685,column:98}}],line:685},"109":{loc:{start:{line:695,column:6},end:{line:710,column:7}},type:"if",locations:[{start:{line:695,column:6},end:{line:710,column:7}},{start:{line:695,column:6},end:{line:710,column:7}}],line:695},"110":{loc:{start:{line:699,column:11},end:{line:710,column:7}},type:"if",locations:[{start:{line:699,column:11},end:{line:710,column:7}},{start:{line:699,column:11},end:{line:710,column:7}}],line:699},"111":{loc:{start:{line:704,column:12},end:{line:704,column:86}},type:"if",locations:[{start:{line:704,column:12},end:{line:704,column:86}},{start:{line:704,column:12},end:{line:704,column:86}}],line:704},"112":{loc:{start:{line:731,column:6},end:{line:746,column:7}},type:"if",locations:[{start:{line:731,column:6},end:{line:746,column:7}},{start:{line:731,column:6},end:{line:746,column:7}}],line:731},"113":{loc:{start:{line:733,column:9},end:{line:745,column:10}},type:"if",locations:[{start:{line:733,column:9},end:{line:745,column:10}},{start:{line:733,column:9},end:{line:745,column:10}}],line:733},"114":{loc:{start:{line:739,column:30},end:{line:739,column:109}},type:"cond-expr",locations:[{start:{line:739,column:56},end:{line:739,column:86}},{start:{line:739,column:89},end:{line:739,column:109}}],line:739},"115":{loc:{start:{line:763,column:31},end:{line:763,column:47}},type:"default-arg",locations:[{start:{line:763,column:41},end:{line:763,column:47}}],line:763}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},b:{"0":[0],"1":[0],"2":[0],"3":[0],"4":[0],"5":[0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0,0],"11":[0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0],"17":[0],"18":[0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0,0,0],"24":[0,0],"25":[0],"26":[0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0,0,0,0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0],"40":[0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0],"45":[0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0,0],"50":[0],"51":[0],"52":[0],"53":[0],"54":[0],"55":[0],"56":[0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0],"79":[0],"80":[0],"81":[0],"82":[0],"83":[0],"84":[0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0,0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"69136e373787b4fb871dd83176bcd8626b9e7780"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_169jkfvo5p=function(){return actualCoverage;};}return actualCoverage;}cov_169jkfvo5p();/**
 * Provides common object manipulation utilities including depth traversal, obtaining accessors, safely setting values /
 * equality tests, and validation.
 *
 * Support for typhonjs-plugin-manager is enabled.
 */ /**
 * @typedef {object} ValidationEntry - Provides data for a validation check.
 *
 * @property {string}               [type] - Optionally tests with a typeof check.
 *
 * @property {Array<*>|Function|Set<*>}  [expected] - Optional array, function, or set of expected values to test
 * against.
 *
 * @property {string}               [message] - Optional message to include.
 *
 * @property {boolean}              [required=true] - When false if the accessor is missing validation is skipped.
 *
 * @property {boolean}              [error=true] - When true and error is thrown otherwise a boolean is returned.
 */ /**
 * Freezes all entries traversed that are objects including entries in arrays.
 *
 * @param {object|Array}   data - An object or array.
 *
 * @param {string[]}       skipFreezeKeys - An array of strings indicating keys of objects to not freeze.
 *
 * @returns {object|Array} The frozen object.
 */function deepFreeze(data,skipFreezeKeys=(cov_169jkfvo5p().b[0][0]++,[])){cov_169jkfvo5p().f[0]++;cov_169jkfvo5p().s[0]++;/* istanbul ignore if */if(typeof data!=='object'){throw new TypeError(`'data' is not an 'object'.`);}else {cov_169jkfvo5p().b[1][0]++;}/* istanbul ignore if */cov_169jkfvo5p().s[1]++;if(!Array.isArray(skipFreezeKeys)){throw new TypeError(`'skipFreezeKeys' is not an 'array'.`);}else {cov_169jkfvo5p().b[2][0]++;}cov_169jkfvo5p().s[2]++;return _deepFreeze(data,skipFreezeKeys);}/**
 * Tests for whether an object is iterable.
 *
 * @param {object} object - An object.
 *
 * @returns {boolean} Whether object is iterable.
 */function isIterable(object){cov_169jkfvo5p().f[3]++;cov_169jkfvo5p().s[9]++;if((cov_169jkfvo5p().b[8][0]++,object===null)||(cov_169jkfvo5p().b[8][1]++,object===void 0)||(cov_169jkfvo5p().b[8][2]++,typeof object!=='object')){cov_169jkfvo5p().b[7][0]++;cov_169jkfvo5p().s[10]++;return false;}else {cov_169jkfvo5p().b[7][1]++;}cov_169jkfvo5p().s[11]++;return typeof object[Symbol.iterator]==='function';}/**
 * Private implementation of depth traversal.
 *
 * @param {object|Array}   data - An object or array.
 *
 * @param {string[]}       skipFreezeKeys - An array of strings indicating keys of objects to not freeze.
 *
 * @returns {*} The frozen object.
 * @ignore
 * @private
 */function _deepFreeze(data,skipFreezeKeys){cov_169jkfvo5p().f[16]++;cov_169jkfvo5p().s[173]++;if(Array.isArray(data)){cov_169jkfvo5p().b[101][0]++;cov_169jkfvo5p().s[174]++;for(let cntr=(cov_169jkfvo5p().s[175]++,0);cntr<data.length;cntr++){cov_169jkfvo5p().s[176]++;_deepFreeze(data[cntr],skipFreezeKeys);}}else {cov_169jkfvo5p().b[101][1]++;cov_169jkfvo5p().s[177]++;if(typeof data==='object'){cov_169jkfvo5p().b[102][0]++;cov_169jkfvo5p().s[178]++;for(const key in data){cov_169jkfvo5p().s[179]++;// eslint-disable-next-line no-prototype-builtins
if((cov_169jkfvo5p().b[104][0]++,data.hasOwnProperty(key))&&(cov_169jkfvo5p().b[104][1]++,skipFreezeKeys.indexOf(key)===-1)){cov_169jkfvo5p().b[103][0]++;cov_169jkfvo5p().s[180]++;_deepFreeze(data[key],skipFreezeKeys);}else {cov_169jkfvo5p().b[103][1]++;}}}else {cov_169jkfvo5p().b[102][1]++;}}cov_169jkfvo5p().s[181]++;return Object.freeze(data);}

function cov_2aywz0rrx3(){var path="/Volumes/Data/program/javascript/projects/TyphonJS/repos/typhonrt/typhonjs-plugin/manager/src/PluginEntry.js";var hash="e18dc3b0ef3de004703dd9bba9b5fc1a64ba7f70";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Volumes/Data/program/javascript/projects/TyphonJS/repos/typhonrt/typhonjs-plugin/manager/src/PluginEntry.js",statementMap:{"0":{start:{line:28,column:6},end:{line:28,column:24}},"1":{start:{line:36,column:6},end:{line:36,column:27}},"2":{start:{line:44,column:6},end:{line:44,column:24}},"3":{start:{line:52,column:6},end:{line:52,column:32}},"4":{start:{line:60,column:6},end:{line:60,column:42}},"5":{start:{line:72,column:6},end:{line:72,column:89}},"6":{start:{line:72,column:39},end:{line:72,column:87}},"7":{start:{line:75,column:20},end:{line:75,column:51}},"8":{start:{line:78,column:6},end:{line:78,column:47}},"9":{start:{line:79,column:6},end:{line:79,column:47}},"10":{start:{line:81,column:6},end:{line:81,column:21}},"11":{start:{line:89,column:16},end:{line:89,column:34}},"12":{start:{line:96,column:19},end:{line:96,column:40}},"13":{start:{line:111,column:6},end:{line:111,column:30}},"14":{start:{line:119,column:25},end:{line:119,column:52}},"15":{start:{line:126,column:20},end:{line:126,column:42}},"16":{start:{line:133,column:16},end:{line:133,column:34}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:20,column:3},end:{line:20,column:4}},loc:{start:{line:21,column:3},end:{line:61,column:4}},line:21},"1":{name:"(anonymous_1)",decl:{start:{line:70,column:3},end:{line:70,column:4}},loc:{start:{line:71,column:3},end:{line:82,column:4}},line:71},"2":{name:"(anonymous_2)",decl:{start:{line:89,column:3},end:{line:89,column:4}},loc:{start:{line:89,column:14},end:{line:89,column:36}},line:89},"3":{name:"(anonymous_3)",decl:{start:{line:96,column:3},end:{line:96,column:4}},loc:{start:{line:96,column:17},end:{line:96,column:42}},line:96},"4":{name:"(anonymous_4)",decl:{start:{line:103,column:3},end:{line:103,column:4}},loc:{start:{line:104,column:3},end:{line:112,column:4}},line:104},"5":{name:"(anonymous_5)",decl:{start:{line:119,column:3},end:{line:119,column:4}},loc:{start:{line:119,column:23},end:{line:119,column:54}},line:119},"6":{name:"(anonymous_6)",decl:{start:{line:126,column:3},end:{line:126,column:4}},loc:{start:{line:126,column:18},end:{line:126,column:44}},line:126},"7":{name:"(anonymous_7)",decl:{start:{line:133,column:3},end:{line:133,column:4}},loc:{start:{line:133,column:14},end:{line:133,column:36}},line:133}},branchMap:{"0":{loc:{start:{line:20,column:37},end:{line:20,column:59}},type:"default-arg",locations:[{start:{line:20,column:53},end:{line:20,column:59}}],line:20},"1":{loc:{start:{line:72,column:6},end:{line:72,column:89}},type:"if",locations:[{start:{line:72,column:6},end:{line:72,column:89}},{start:{line:72,column:6},end:{line:72,column:89}}],line:72}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},b:{"0":[0],"1":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"e18dc3b0ef3de004703dd9bba9b5fc1a64ba7f70"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2aywz0rrx3=function(){return actualCoverage;};}return actualCoverage;}cov_2aywz0rrx3();/**
 * Defines a class holding the data associated with a plugin including its instance.
 */class PluginEntry{/**
    * Instantiates a PluginEntry.
    *
    * @param {string}      name - The plugin name.
    *
    * @param {PluginData}  data -  describing the plugin, manager, and optional module data.
    *
    * @param {object}      instance - The loaded plugin instance.
    *
    * @param {EventbusProxy}  eventbusProxy - An EventProxy associated with the plugin wrapping the plugin manager
    * eventbus.
    */constructor(name,data,instance,eventbusProxy=(cov_2aywz0rrx3().b[0][0]++,void 0)){cov_2aywz0rrx3().f[0]++;cov_2aywz0rrx3().s[0]++;/**
       * Data describing the plugin, manager, and optional module data.
       *
       * @type {PluginData}
       * @private
       */this._data=data;/**
       * The plugin enabled state.
       *
       * @type {boolean}
       * @private
       */cov_2aywz0rrx3().s[1]++;this._enabled=true;/**
       * The plugin name.
       *
       * @type {string}
       * @private
       */cov_2aywz0rrx3().s[2]++;this._name=name;/**
       * The loaded plugin instance.
       *
       * @type {object}
       * @private
       */cov_2aywz0rrx3().s[3]++;this._instance=instance;/**
       * An EventbusProxy associated with the plugin wrapping the plugin manager eventbus.
       *
       * @type {EventbusProxy}
       * @private
       */cov_2aywz0rrx3().s[4]++;this._eventbusProxy=eventbusProxy;}/**
    * Provides a convenience method to escape file paths.
    *
    * @param {string}   value - A string to escape.
    *
    * @returns {string} An escaped string.
    */static escape(value){cov_2aywz0rrx3().f[1]++;cov_2aywz0rrx3().s[5]++;if(typeof value!=='string'){cov_2aywz0rrx3().b[1][0]++;cov_2aywz0rrx3().s[6]++;throw new TypeError(`'value' is not a string.`);}else {cov_2aywz0rrx3().b[1][1]++;}// Remove any leading relative directory paths.
let escaped=(cov_2aywz0rrx3().s[7]++,value.replace(/^(\.\.|\.)/,''));// Escape any forward / reverse slashes for RegExp creation.
cov_2aywz0rrx3().s[8]++;escaped=escaped.replace(/[\\]/g,'\\');cov_2aywz0rrx3().s[9]++;escaped=escaped.replace(/[/]/g,'\\/');cov_2aywz0rrx3().s[10]++;return escaped;}/**
    * Get plugin data.
    *
    * @returns {PluginData} The associated PluginData.
    */get data(){cov_2aywz0rrx3().f[2]++;cov_2aywz0rrx3().s[11]++;return this._data;}/**
    * Get enabled.
    *
    * @returns {boolean} Current enabled state.
    */get enabled(){cov_2aywz0rrx3().f[3]++;cov_2aywz0rrx3().s[12]++;return this._enabled;}/**
    * Set enabled.
    *
    * @param {boolean} enabled - New enabled state.
    */set enabled(enabled){cov_2aywz0rrx3().f[4]++;cov_2aywz0rrx3().s[13]++;/**
       * The plugin enabled state.
       *
       * @type {boolean}
       * @private
       */this._enabled=enabled;}/**
    * Get associated EventbusProxy.
    *
    * @returns {EventbusProxy} Associated EventbusProxy.
    */get eventbusProxy(){cov_2aywz0rrx3().f[5]++;cov_2aywz0rrx3().s[14]++;return this._eventbusProxy;}/**
    * Get plugin instance.
    *
    * @returns {object} The plugin instance.
    */get instance(){cov_2aywz0rrx3().f[6]++;cov_2aywz0rrx3().s[15]++;return this._instance;}/**
    * Get plugin name.
    *
    * @returns {string} Plugin name.
    */get name(){cov_2aywz0rrx3().f[7]++;cov_2aywz0rrx3().s[16]++;return this._name;}}/**
 * @typedef {object} PluginData
 *
 * @property {object}   manager - Data about the plugin manager
 *
 * @property {string}   manager.eventPrepend - The plugin manager event prepend string.
 *
 * @property {object}   module - Optional object hash to associate with plugin.
 *
 * @property {object}   plugin - Data about the plugin.
 *
 * @property {string}   plugin.name - The name of the plugin.
 *
 * @property {string}   plugin.scopedName - The name of the plugin with the plugin managers event prepend string.
 *
 * @property {string}   plugin.target - Defines the target NPM module to loaded or defines a local file (full
 *                               path or relative to current working directory to load.
 *
 * @property {string}   plugin.targetEscaped - Provides the target, but properly escaped for RegExp usage.
 *
 * @property {string}   plugin.type - The type of plugin: `instance` +
 *                                    In Node: `import-module`, `import-path`, `require-module`, or `require-path`.
 *                                    In Browser: `import-path`, `import-url`.
 *
 * @property {object}   plugin.options - Defines an object of options for the plugin.
 */

function cov_22u2hw3w0z(){var path="/Volumes/Data/program/javascript/projects/TyphonJS/repos/typhonrt/typhonjs-plugin/manager/src/PluginEvent.js";var hash="b097879abce4bd05fa01a55b4f886e38cba0f8a0";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Volumes/Data/program/javascript/projects/TyphonJS/repos/typhonrt/typhonjs-plugin/manager/src/PluginEvent.js",statementMap:{"0":{start:{line:25,column:6},end:{line:25,column:86}},"1":{start:{line:32,column:6},end:{line:32,column:29}},"2":{start:{line:39,column:6},end:{line:39,column:31}},"3":{start:{line:46,column:6},end:{line:46,column:34}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:20,column:3},end:{line:20,column:4}},loc:{start:{line:21,column:3},end:{line:47,column:4}},line:21}},branchMap:{"0":{loc:{start:{line:20,column:15},end:{line:20,column:29}},type:"default-arg",locations:[{start:{line:20,column:27},end:{line:20,column:29}}],line:20},"1":{loc:{start:{line:20,column:31},end:{line:20,column:49}},type:"default-arg",locations:[{start:{line:20,column:47},end:{line:20,column:49}}],line:20}},s:{"0":0,"1":0,"2":0,"3":0},f:{"0":0},b:{"0":[0],"1":[0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"b097879abce4bd05fa01a55b4f886e38cba0f8a0"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_22u2hw3w0z=function(){return actualCoverage;};}return actualCoverage;}cov_22u2hw3w0z();/**
 * PluginEvent - Provides the data / event passed to all invoked methods in
 * {@link AbstractPluginManager#invokeSyncEvent}. The `event.data` field is returned to the caller. Before returning
 * though additional the following additional metadata is attached:
 *
 * (number)    `$$plugin_invoke_count` - The count of plugins invoked.
 *
 * (string[])  `$$plugin_invoke_names` - The names of plugins invoked.
 */class PluginEvent{/**
    * Initializes PluginEvent.
    *
    * @param {object} copyProps - Event data to copy.
    * @param {object} passthruProps - Event data to pass through.
    */constructor(copyProps=(cov_22u2hw3w0z().b[0][0]++,{}),passthruProps=(cov_22u2hw3w0z().b[1][0]++,{})){cov_22u2hw3w0z().f[0]++;cov_22u2hw3w0z().s[0]++;/**
       * Provides the unified event data assigning any pass through data to the copied data supplied.
       */this.data=Object.assign(JSON.parse(JSON.stringify(copyProps)),passthruProps);/**
       * Unique data available in each plugin invoked.
       *
       * @type {EventbusProxy} - The active EventbusProxy for that particular plugin.
       */cov_22u2hw3w0z().s[1]++;this.eventbus=void 0;/**
       * Unique data available in each plugin invoked.
       *
       * @type {string} - The active plugin name.
       */cov_22u2hw3w0z().s[2]++;this.pluginName=void 0;/**
       * Unique data available in each plugin invoked.
       *
       * @type {object} - The active plugin options.
       */cov_22u2hw3w0z().s[3]++;this.pluginOptions=void 0;}}

function cov_2im3jb3jgx(){var path="/Volumes/Data/program/javascript/projects/TyphonJS/repos/typhonrt/typhonjs-plugin/manager/src/isValidConfig.js";var hash="e27ce211ff4765d5d088bcd22fb68fe7b2021b02";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Volumes/Data/program/javascript/projects/TyphonJS/repos/typhonrt/typhonjs-plugin/manager/src/isValidConfig.js",statementMap:{"0":{start:{line:25,column:3},end:{line:25,column:58}},"1":{start:{line:25,column:43},end:{line:25,column:56}},"2":{start:{line:27,column:3},end:{line:27,column:63}},"3":{start:{line:27,column:48},end:{line:27,column:61}},"4":{start:{line:29,column:3},end:{line:33,column:4}},"5":{start:{line:32,column:6},end:{line:32,column:19}},"6":{start:{line:35,column:3},end:{line:35,column:113}},"7":{start:{line:35,column:98},end:{line:35,column:111}},"8":{start:{line:37,column:3},end:{line:37,column:15}}},fnMap:{"0":{name:"isValidConfig",decl:{start:{line:23,column:24},end:{line:23,column:37}},loc:{start:{line:24,column:0},end:{line:38,column:1}},line:24}},branchMap:{"0":{loc:{start:{line:25,column:3},end:{line:25,column:58}},type:"if",locations:[{start:{line:25,column:3},end:{line:25,column:58}},{start:{line:25,column:3},end:{line:25,column:58}}],line:25},"1":{loc:{start:{line:27,column:3},end:{line:27,column:63}},type:"if",locations:[{start:{line:27,column:3},end:{line:27,column:63}},{start:{line:27,column:3},end:{line:27,column:63}}],line:27},"2":{loc:{start:{line:29,column:3},end:{line:33,column:4}},type:"if",locations:[{start:{line:29,column:3},end:{line:33,column:4}},{start:{line:29,column:3},end:{line:33,column:4}}],line:29},"3":{loc:{start:{line:29,column:7},end:{line:30,column:41}},type:"binary-expr",locations:[{start:{line:29,column:7},end:{line:29,column:49}},{start:{line:29,column:53},end:{line:29,column:92}},{start:{line:30,column:4},end:{line:30,column:41}}],line:29},"4":{loc:{start:{line:35,column:3},end:{line:35,column:113}},type:"if",locations:[{start:{line:35,column:3},end:{line:35,column:113}},{start:{line:35,column:3},end:{line:35,column:113}}],line:35},"5":{loc:{start:{line:35,column:7},end:{line:35,column:94}},type:"binary-expr",locations:[{start:{line:35,column:7},end:{line:35,column:50}},{start:{line:35,column:54},end:{line:35,column:94}}],line:35}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},f:{"0":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"e27ce211ff4765d5d088bcd22fb68fe7b2021b02"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2im3jb3jgx=function(){return actualCoverage;};}return actualCoverage;}cov_2im3jb3jgx();/**
 * @typedef {object} PluginConfig
 *
 * @property {string}      name - Defines the name of the plugin; if no `target` entry is present the name
 *                                doubles as the target (please see target).
 *
 * @property {string|URL}  [target] - Defines the target Node module to load or defines a local file (full
 *                                    path or relative to current working directory to load. Target may also be a file
 *                                    URL / string or in the browser a web URL.
 *
 * @property {string}      [instance] - Defines an existing object instance to use as the plugin.
 *
 * @property {object}      [options] - Defines an object of options for the plugin.
 */ /**
 * Performs validation of a PluginConfig.
 *
 * @param {PluginConfig}   pluginConfig - A PluginConfig to validate.
 *
 * @returns {boolean} True if the given PluginConfig is valid.
 */function isValidConfig(pluginConfig){cov_2im3jb3jgx().f[0]++;cov_2im3jb3jgx().s[0]++;if(typeof pluginConfig!=='object'){cov_2im3jb3jgx().b[0][0]++;cov_2im3jb3jgx().s[1]++;return false;}else {cov_2im3jb3jgx().b[0][1]++;}cov_2im3jb3jgx().s[2]++;if(typeof pluginConfig.name!=='string'){cov_2im3jb3jgx().b[1][0]++;cov_2im3jb3jgx().s[3]++;return false;}else {cov_2im3jb3jgx().b[1][1]++;}cov_2im3jb3jgx().s[4]++;if((cov_2im3jb3jgx().b[3][0]++,typeof pluginConfig.target!=='undefined')&&(cov_2im3jb3jgx().b[3][1]++,typeof pluginConfig.target!=='string')&&(cov_2im3jb3jgx().b[3][2]++,!(pluginConfig.target instanceof URL))){cov_2im3jb3jgx().b[2][0]++;cov_2im3jb3jgx().s[5]++;return false;}else {cov_2im3jb3jgx().b[2][1]++;}cov_2im3jb3jgx().s[6]++;if((cov_2im3jb3jgx().b[5][0]++,typeof pluginConfig.options!=='undefined')&&(cov_2im3jb3jgx().b[5][1]++,typeof pluginConfig.options!=='object')){cov_2im3jb3jgx().b[4][0]++;cov_2im3jb3jgx().s[7]++;return false;}else {cov_2im3jb3jgx().b[4][1]++;}cov_2im3jb3jgx().s[8]++;return true;}

function cov_2i6u9283d0(){var path="/Volumes/Data/program/javascript/projects/TyphonJS/repos/typhonrt/typhonjs-plugin/manager/src/AbstractPluginManager.js";var hash="8872b73f016480eb6f228cd18fb3530972dc8a3d";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Volumes/Data/program/javascript/projects/TyphonJS/repos/typhonrt/typhonjs-plugin/manager/src/AbstractPluginManager.js",statementMap:{"0":{start:{line:148,column:6},end:{line:148,column:94}},"1":{start:{line:148,column:41},end:{line:148,column:92}},"2":{start:{line:150,column:6},end:{line:153,column:7}},"3":{start:{line:152,column:9},end:{line:152,column:87}},"4":{start:{line:161,column:6},end:{line:161,column:34}},"5":{start:{line:169,column:6},end:{line:169,column:28}},"6":{start:{line:177,column:6},end:{line:177,column:33}},"7":{start:{line:185,column:6},end:{line:185,column:102}},"8":{start:{line:193,column:6},end:{line:202,column:8}},"9":{start:{line:204,column:6},end:{line:207,column:9}},"10":{start:{line:209,column:6},end:{line:209,column:31}},"11":{start:{line:226,column:6},end:{line:226,column:108}},"12":{start:{line:226,column:30},end:{line:226,column:106}},"13":{start:{line:228,column:6},end:{line:228,column:104}},"14":{start:{line:228,column:46},end:{line:228,column:102}},"15":{start:{line:230,column:6},end:{line:233,column:7}},"16":{start:{line:232,column:9},end:{line:232,column:112}},"17":{start:{line:235,column:6},end:{line:240,column:7}},"18":{start:{line:238,column:9},end:{line:239,column:102}},"19":{start:{line:242,column:6},end:{line:245,column:7}},"20":{start:{line:244,column:9},end:{line:244,column:116}},"21":{start:{line:247,column:6},end:{line:250,column:7}},"22":{start:{line:249,column:9},end:{line:249,column:106}},"23":{start:{line:253,column:6},end:{line:256,column:7}},"24":{start:{line:255,column:9},end:{line:255,column:85}},"25":{start:{line:261,column:6},end:{line:279,column:7}},"26":{start:{line:263,column:9},end:{line:263,column:42}},"27":{start:{line:265,column:9},end:{line:265,column:36}},"28":{start:{line:267,column:9},end:{line:267,column:27}},"29":{start:{line:272,column:9},end:{line:272,column:59}},"30":{start:{line:275,column:24},end:{line:275,column:54}},"31":{start:{line:277,column:9},end:{line:277,column:36}},"32":{start:{line:278,column:9},end:{line:278,column:28}},"33":{start:{line:282,column:6},end:{line:285,column:7}},"34":{start:{line:284,column:9},end:{line:284,column:36}},"35":{start:{line:292,column:25},end:{line:310,column:9}},"36":{start:{line:312,column:6},end:{line:312,column:61}},"37":{start:{line:314,column:28},end:{line:315,column:49}},"38":{start:{line:317,column:20},end:{line:317,column:91}},"39":{start:{line:319,column:6},end:{line:319,column:52}},"40":{start:{line:322,column:6},end:{line:322,column:116}},"41":{start:{line:325,column:6},end:{line:328,column:7}},"42":{start:{line:327,column:9},end:{line:327,column:95}},"43":{start:{line:330,column:6},end:{line:330,column:24}},"44":{start:{line:344,column:6},end:{line:344,column:108}},"45":{start:{line:344,column:30},end:{line:344,column:106}},"46":{start:{line:346,column:6},end:{line:346,column:101}},"47":{start:{line:346,column:43},end:{line:346,column:99}},"48":{start:{line:348,column:26},end:{line:348,column:28}},"49":{start:{line:350,column:6},end:{line:355,column:7}},"50":{start:{line:352,column:24},end:{line:352,column:64}},"51":{start:{line:354,column:9},end:{line:354,column:50}},"52":{start:{line:354,column:23},end:{line:354,column:48}},"53":{start:{line:357,column:6},end:{line:357,column:25}},"54":{start:{line:373,column:6},end:{line:373,column:108}},"55":{start:{line:373,column:30},end:{line:373,column:106}},"56":{start:{line:375,column:6},end:{line:375,column:85}},"57":{start:{line:391,column:6},end:{line:391,column:108}},"58":{start:{line:391,column:30},end:{line:391,column:106}},"59":{start:{line:393,column:6},end:{line:393,column:87}},"60":{start:{line:393,column:39},end:{line:393,column:85}},"61":{start:{line:404,column:6},end:{line:407,column:7}},"62":{start:{line:406,column:9},end:{line:406,column:77}},"63":{start:{line:409,column:28},end:{line:409,column:61}},"64":{start:{line:412,column:6},end:{line:412,column:48}},"65":{start:{line:414,column:6},end:{line:414,column:27}},"66":{start:{line:422,column:6},end:{line:422,column:108}},"67":{start:{line:422,column:30},end:{line:422,column:106}},"68":{start:{line:425,column:6},end:{line:425,column:29}},"69":{start:{line:428,column:6},end:{line:431,column:7}},"70":{start:{line:430,column:9},end:{line:430,column:33}},"71":{start:{line:433,column:6},end:{line:433,column:33}},"72":{start:{line:435,column:6},end:{line:454,column:7}},"73":{start:{line:437,column:9},end:{line:437,column:88}},"74":{start:{line:438,column:9},end:{line:438,column:95}},"75":{start:{line:439,column:9},end:{line:439,column:104}},"76":{start:{line:440,column:9},end:{line:440,column:90}},"77":{start:{line:441,column:9},end:{line:441,column:101}},"78":{start:{line:442,column:9},end:{line:442,column:94}},"79":{start:{line:443,column:9},end:{line:443,column:101}},"80":{start:{line:444,column:9},end:{line:444,column:107}},"81":{start:{line:445,column:9},end:{line:445,column:95}},"82":{start:{line:446,column:9},end:{line:446,column:88}},"83":{start:{line:447,column:9},end:{line:447,column:86}},"84":{start:{line:448,column:9},end:{line:448,column:79}},"85":{start:{line:449,column:9},end:{line:449,column:95}},"86":{start:{line:450,column:9},end:{line:450,column:95}},"87":{start:{line:451,column:9},end:{line:451,column:97}},"88":{start:{line:452,column:9},end:{line:452,column:88}},"89":{start:{line:453,column:9},end:{line:453,column:99}},"90":{start:{line:456,column:6},end:{line:461,column:7}},"91":{start:{line:458,column:9},end:{line:458,column:107}},"92":{start:{line:460,column:9},end:{line:460,column:36}},"93":{start:{line:463,column:6},end:{line:463,column:29}},"94":{start:{line:464,column:6},end:{line:464,column:28}},"95":{start:{line:477,column:6},end:{line:477,column:108}},"96":{start:{line:477,column:30},end:{line:477,column:106}},"97":{start:{line:479,column:6},end:{line:479,column:67}},"98":{start:{line:479,column:43},end:{line:479,column:65}},"99":{start:{line:489,column:6},end:{line:489,column:68}},"100":{start:{line:499,column:6},end:{line:499,column:108}},"101":{start:{line:499,column:30},end:{line:499,column:106}},"102":{start:{line:501,column:6},end:{line:501,column:28}},"103":{start:{line:511,column:6},end:{line:511,column:108}},"104":{start:{line:511,column:30},end:{line:511,column:106}},"105":{start:{line:513,column:6},end:{line:513,column:55}},"106":{start:{line:528,column:6},end:{line:528,column:108}},"107":{start:{line:528,column:30},end:{line:528,column:106}},"108":{start:{line:530,column:6},end:{line:533,column:7}},"109":{start:{line:532,column:9},end:{line:532,column:75}},"110":{start:{line:536,column:6},end:{line:540,column:7}},"111":{start:{line:538,column:23},end:{line:538,column:55}},"112":{start:{line:539,column:9},end:{line:539,column:62}},"113":{start:{line:542,column:22},end:{line:542,column:24}},"114":{start:{line:545,column:6},end:{line:561,column:7}},"115":{start:{line:547,column:9},end:{line:552,column:10}},"116":{start:{line:549,column:26},end:{line:549,column:57}},"117":{start:{line:550,column:27},end:{line:550,column:55}},"118":{start:{line:551,column:12},end:{line:551,column:83}},"119":{start:{line:556,column:9},end:{line:560,column:10}},"120":{start:{line:558,column:27},end:{line:558,column:55}},"121":{start:{line:559,column:12},end:{line:559,column:83}},"122":{start:{line:563,column:6},end:{line:563,column:21}},"123":{start:{line:575,column:6},end:{line:575,column:108}},"124":{start:{line:575,column:30},end:{line:575,column:106}},"125":{start:{line:577,column:6},end:{line:577,column:99}},"126":{start:{line:577,column:44},end:{line:577,column:97}},"127":{start:{line:579,column:6},end:{line:579,column:45}},"128":{start:{line:593,column:6},end:{line:593,column:108}},"129":{start:{line:593,column:30},end:{line:593,column:106}},"130":{start:{line:595,column:6},end:{line:595,column:99}},"131":{start:{line:595,column:44},end:{line:595,column:97}},"132":{start:{line:597,column:6},end:{line:597,column:85}},"133":{start:{line:597,column:47},end:{line:597,column:83}},"134":{start:{line:599,column:6},end:{line:603,column:7}},"135":{start:{line:602,column:9},end:{line:602,column:82}},"136":{start:{line:606,column:22},end:{line:606,column:27}},"137":{start:{line:607,column:22},end:{line:607,column:27}},"138":{start:{line:610,column:6},end:{line:610,column:52}},"139":{start:{line:610,column:43},end:{line:610,column:50}},"140":{start:{line:612,column:6},end:{line:646,column:7}},"141":{start:{line:614,column:24},end:{line:614,column:55}},"142":{start:{line:616,column:9},end:{line:626,column:10}},"143":{start:{line:618,column:12},end:{line:618,column:29}},"144":{start:{line:620,column:12},end:{line:625,column:13}},"145":{start:{line:622,column:15},end:{line:622,column:110}},"146":{start:{line:624,column:15},end:{line:624,column:32}},"147":{start:{line:630,column:9},end:{line:645,column:10}},"148":{start:{line:632,column:27},end:{line:632,column:52}},"149":{start:{line:634,column:12},end:{line:644,column:13}},"150":{start:{line:636,column:15},end:{line:636,column:32}},"151":{start:{line:638,column:15},end:{line:643,column:16}},"152":{start:{line:640,column:18},end:{line:640,column:113}},"153":{start:{line:642,column:18},end:{line:642,column:35}},"154":{start:{line:648,column:6},end:{line:651,column:7}},"155":{start:{line:650,column:9},end:{line:650,column:77}},"156":{start:{line:653,column:6},end:{line:656,column:7}},"157":{start:{line:655,column:9},end:{line:655,column:76}},"158":{start:{line:674,column:6},end:{line:674,column:108}},"159":{start:{line:674,column:30},end:{line:674,column:106}},"160":{start:{line:676,column:6},end:{line:676,column:99}},"161":{start:{line:676,column:44},end:{line:676,column:97}},"162":{start:{line:678,column:6},end:{line:678,column:85}},"163":{start:{line:678,column:47},end:{line:678,column:83}},"164":{start:{line:680,column:6},end:{line:684,column:7}},"165":{start:{line:683,column:9},end:{line:683,column:82}},"166":{start:{line:687,column:22},end:{line:687,column:27}},"167":{start:{line:688,column:22},end:{line:688,column:27}},"168":{start:{line:691,column:19},end:{line:691,column:25}},"169":{start:{line:692,column:22},end:{line:692,column:24}},"170":{start:{line:695,column:6},end:{line:695,column:59}},"171":{start:{line:695,column:43},end:{line:695,column:57}},"172":{start:{line:697,column:6},end:{line:756,column:7}},"173":{start:{line:699,column:9},end:{line:741,column:10}},"174":{start:{line:701,column:27},end:{line:701,column:58}},"175":{start:{line:703,column:12},end:{line:717,column:13}},"176":{start:{line:705,column:15},end:{line:705,column:32}},"177":{start:{line:707,column:15},end:{line:716,column:16}},"178":{start:{line:709,column:18},end:{line:710,column:53}},"179":{start:{line:713,column:18},end:{line:713,column:97}},"180":{start:{line:713,column:74},end:{line:713,column:95}},"181":{start:{line:715,column:18},end:{line:715,column:35}},"182":{start:{line:721,column:12},end:{line:740,column:13}},"183":{start:{line:723,column:30},end:{line:723,column:55}},"184":{start:{line:725,column:15},end:{line:739,column:16}},"185":{start:{line:727,column:18},end:{line:727,column:35}},"186":{start:{line:729,column:18},end:{line:738,column:19}},"187":{start:{line:731,column:21},end:{line:732,column:56}},"188":{start:{line:735,column:21},end:{line:735,column:100}},"189":{start:{line:735,column:77},end:{line:735,column:98}},"190":{start:{line:737,column:21},end:{line:737,column:38}},"191":{start:{line:743,column:9},end:{line:746,column:10}},"192":{start:{line:745,column:12},end:{line:745,column:97}},"193":{start:{line:748,column:9},end:{line:751,column:10}},"194":{start:{line:750,column:12},end:{line:750,column:96}},"195":{start:{line:755,column:9},end:{line:755,column:38}},"196":{start:{line:759,column:6},end:{line:759,column:81}},"197":{start:{line:777,column:6},end:{line:777,column:108}},"198":{start:{line:777,column:30},end:{line:777,column:106}},"199":{start:{line:779,column:6},end:{line:779,column:85}},"200":{start:{line:779,column:47},end:{line:779,column:83}},"201":{start:{line:782,column:6},end:{line:782,column:70}},"202":{start:{line:782,column:43},end:{line:782,column:68}},"203":{start:{line:785,column:6},end:{line:785,column:117}},"204":{start:{line:802,column:6},end:{line:802,column:108}},"205":{start:{line:802,column:30},end:{line:802,column:106}},"206":{start:{line:804,column:6},end:{line:804,column:99}},"207":{start:{line:804,column:44},end:{line:804,column:97}},"208":{start:{line:806,column:6},end:{line:806,column:85}},"209":{start:{line:806,column:47},end:{line:806,column:83}},"210":{start:{line:808,column:6},end:{line:812,column:7}},"211":{start:{line:811,column:9},end:{line:811,column:82}},"212":{start:{line:815,column:22},end:{line:815,column:27}},"213":{start:{line:816,column:22},end:{line:816,column:27}},"214":{start:{line:819,column:19},end:{line:819,column:25}},"215":{start:{line:820,column:22},end:{line:820,column:24}},"216":{start:{line:823,column:6},end:{line:823,column:59}},"217":{start:{line:823,column:43},end:{line:823,column:57}},"218":{start:{line:825,column:6},end:{line:866,column:7}},"219":{start:{line:827,column:24},end:{line:827,column:55}},"220":{start:{line:829,column:9},end:{line:842,column:10}},"221":{start:{line:831,column:12},end:{line:831,column:29}},"222":{start:{line:833,column:12},end:{line:841,column:13}},"223":{start:{line:835,column:15},end:{line:835,column:119}},"224":{start:{line:838,column:15},end:{line:838,column:94}},"225":{start:{line:838,column:71},end:{line:838,column:92}},"226":{start:{line:840,column:15},end:{line:840,column:32}},"227":{start:{line:846,column:9},end:{line:865,column:10}},"228":{start:{line:848,column:27},end:{line:848,column:52}},"229":{start:{line:850,column:12},end:{line:864,column:13}},"230":{start:{line:852,column:15},end:{line:852,column:32}},"231":{start:{line:854,column:15},end:{line:863,column:16}},"232":{start:{line:856,column:18},end:{line:857,column:53}},"233":{start:{line:860,column:18},end:{line:860,column:97}},"234":{start:{line:860,column:74},end:{line:860,column:95}},"235":{start:{line:862,column:18},end:{line:862,column:35}},"236":{start:{line:868,column:6},end:{line:871,column:7}},"237":{start:{line:870,column:9},end:{line:870,column:77}},"238":{start:{line:873,column:6},end:{line:876,column:7}},"239":{start:{line:875,column:9},end:{line:875,column:76}},"240":{start:{line:879,column:6},end:{line:879,column:51}},"241":{start:{line:897,column:6},end:{line:897,column:108}},"242":{start:{line:897,column:30},end:{line:897,column:106}},"243":{start:{line:899,column:6},end:{line:899,column:85}},"244":{start:{line:899,column:47},end:{line:899,column:83}},"245":{start:{line:902,column:6},end:{line:902,column:59}},"246":{start:{line:902,column:43},end:{line:902,column:57}},"247":{start:{line:905,column:6},end:{line:905,column:116}},"248":{start:{line:917,column:6},end:{line:917,column:41}},"249":{start:{line:941,column:6},end:{line:941,column:108}},"250":{start:{line:941,column:30},end:{line:941,column:106}},"251":{start:{line:943,column:20},end:{line:943,column:51}},"252":{start:{line:945,column:6},end:{line:969,column:7}},"253":{start:{line:948,column:9},end:{line:948,column:114}},"254":{start:{line:951,column:9},end:{line:955,column:34}},"255":{start:{line:953,column:12},end:{line:953,column:46}},"256":{start:{line:957,column:9},end:{line:957,column:93}},"257":{start:{line:957,column:61},end:{line:957,column:91}},"258":{start:{line:959,column:9},end:{line:959,column:44}},"259":{start:{line:962,column:9},end:{line:966,column:10}},"260":{start:{line:964,column:12},end:{line:965,column:53}},"261":{start:{line:968,column:9},end:{line:968,column:21}},"262":{start:{line:971,column:6},end:{line:971,column:19}},"263":{start:{line:981,column:6},end:{line:981,column:108}},"264":{start:{line:981,column:30},end:{line:981,column:106}},"265":{start:{line:983,column:21},end:{line:983,column:23}},"266":{start:{line:985,column:6},end:{line:989,column:7}},"267":{start:{line:987,column:24},end:{line:987,column:53}},"268":{start:{line:988,column:9},end:{line:988,column:53}},"269":{start:{line:991,column:6},end:{line:991,column:30}},"270":{start:{line:993,column:6},end:{line:993,column:20}},"271":{start:{line:1007,column:6},end:{line:1007,column:108}},"272":{start:{line:1007,column:30},end:{line:1007,column:106}},"273":{start:{line:1009,column:6},end:{line:1009,column:77}},"274":{start:{line:1021,column:6},end:{line:1021,column:108}},"275":{start:{line:1021,column:30},end:{line:1021,column:106}},"276":{start:{line:1023,column:6},end:{line:1023,column:69}},"277":{start:{line:1023,column:43},end:{line:1023,column:67}},"278":{start:{line:1042,column:6},end:{line:1042,column:108}},"279":{start:{line:1042,column:30},end:{line:1042,column:106}},"280":{start:{line:1044,column:6},end:{line:1044,column:103}},"281":{start:{line:1044,column:45},end:{line:1044,column:101}},"282":{start:{line:1045,column:6},end:{line:1045,column:105}},"283":{start:{line:1045,column:46},end:{line:1045,column:103}},"284":{start:{line:1048,column:6},end:{line:1048,column:55}},"285":{start:{line:1048,column:41},end:{line:1048,column:53}},"286":{start:{line:1050,column:25},end:{line:1050,column:43}},"287":{start:{line:1058,column:6},end:{line:1058,column:40}},"288":{start:{line:1061,column:6},end:{line:1104,column:7}},"289":{start:{line:1064,column:9},end:{line:1065,column:17}},"290":{start:{line:1067,column:9},end:{line:1082,column:10}},"291":{start:{line:1070,column:12},end:{line:1074,column:37}},"292":{start:{line:1072,column:15},end:{line:1072,column:49}},"293":{start:{line:1076,column:12},end:{line:1076,column:59}},"294":{start:{line:1077,column:12},end:{line:1077,column:75}},"295":{start:{line:1079,column:12},end:{line:1079,column:96}},"296":{start:{line:1079,column:64},end:{line:1079,column:94}},"297":{start:{line:1081,column:12},end:{line:1081,column:62}},"298":{start:{line:1085,column:9},end:{line:1086,column:17}},"299":{start:{line:1088,column:9},end:{line:1103,column:10}},"300":{start:{line:1092,column:12},end:{line:1102,column:13}},"301":{start:{line:1094,column:15},end:{line:1101,column:59}},"302":{start:{line:1106,column:6},end:{line:1134,column:7}},"303":{start:{line:1108,column:9},end:{line:1108,column:80}},"304":{start:{line:1109,column:9},end:{line:1109,column:87}},"305":{start:{line:1110,column:9},end:{line:1110,column:96}},"306":{start:{line:1111,column:9},end:{line:1111,column:82}},"307":{start:{line:1112,column:9},end:{line:1112,column:93}},"308":{start:{line:1113,column:9},end:{line:1113,column:86}},"309":{start:{line:1114,column:9},end:{line:1114,column:93}},"310":{start:{line:1115,column:9},end:{line:1115,column:99}},"311":{start:{line:1116,column:9},end:{line:1116,column:87}},"312":{start:{line:1117,column:9},end:{line:1117,column:80}},"313":{start:{line:1118,column:9},end:{line:1118,column:78}},"314":{start:{line:1119,column:9},end:{line:1119,column:71}},"315":{start:{line:1120,column:9},end:{line:1120,column:87}},"316":{start:{line:1121,column:9},end:{line:1121,column:87}},"317":{start:{line:1122,column:9},end:{line:1122,column:89}},"318":{start:{line:1123,column:9},end:{line:1123,column:80}},"319":{start:{line:1124,column:9},end:{line:1124,column:91}},"320":{start:{line:1127,column:9},end:{line:1133,column:12}},"321":{start:{line:1136,column:6},end:{line:1136,column:72}},"322":{start:{line:1137,column:6},end:{line:1137,column:79}},"323":{start:{line:1138,column:6},end:{line:1138,column:88}},"324":{start:{line:1139,column:6},end:{line:1139,column:74}},"325":{start:{line:1140,column:6},end:{line:1140,column:85}},"326":{start:{line:1141,column:6},end:{line:1141,column:78}},"327":{start:{line:1142,column:6},end:{line:1142,column:85}},"328":{start:{line:1143,column:6},end:{line:1143,column:91}},"329":{start:{line:1144,column:6},end:{line:1144,column:79}},"330":{start:{line:1145,column:6},end:{line:1145,column:72}},"331":{start:{line:1146,column:6},end:{line:1146,column:70}},"332":{start:{line:1147,column:6},end:{line:1147,column:63}},"333":{start:{line:1148,column:6},end:{line:1148,column:79}},"334":{start:{line:1149,column:6},end:{line:1149,column:79}},"335":{start:{line:1150,column:6},end:{line:1150,column:81}},"336":{start:{line:1151,column:6},end:{line:1151,column:72}},"337":{start:{line:1152,column:6},end:{line:1152,column:83}},"338":{start:{line:1155,column:6},end:{line:1161,column:9}},"339":{start:{line:1163,column:6},end:{line:1171,column:7}},"340":{start:{line:1165,column:9},end:{line:1170,column:12}},"341":{start:{line:1173,column:6},end:{line:1173,column:32}},"342":{start:{line:1175,column:6},end:{line:1175,column:18}},"343":{start:{line:1185,column:6},end:{line:1185,column:108}},"344":{start:{line:1185,column:30},end:{line:1185,column:106}},"345":{start:{line:1187,column:6},end:{line:1187,column:94}},"346":{start:{line:1187,column:41},end:{line:1187,column:92}},"347":{start:{line:1189,column:6},end:{line:1189,column:113}},"348":{start:{line:1189,column:57},end:{line:1189,column:111}},"349":{start:{line:1190,column:6},end:{line:1190,column:101}},"350":{start:{line:1190,column:53},end:{line:1190,column:99}},"351":{start:{line:1191,column:6},end:{line:1191,column:113}},"352":{start:{line:1191,column:57},end:{line:1191,column:111}},"353":{start:{line:1192,column:6},end:{line:1192,column:113}},"354":{start:{line:1192,column:57},end:{line:1192,column:111}},"355":{start:{line:1193,column:6},end:{line:1193,column:113}},"356":{start:{line:1193,column:57},end:{line:1193,column:111}},"357":{start:{line:1194,column:6},end:{line:1194,column:110}},"358":{start:{line:1194,column:56},end:{line:1194,column:108}},"359":{start:{line:1195,column:6},end:{line:1195,column:110}},"360":{start:{line:1195,column:56},end:{line:1195,column:108}},"361":{start:{line:1209,column:6},end:{line:1209,column:108}},"362":{start:{line:1209,column:30},end:{line:1209,column:106}},"363":{start:{line:1211,column:6},end:{line:1211,column:70}},"364":{start:{line:1211,column:43},end:{line:1211,column:68}},"365":{start:{line:1225,column:6},end:{line:1225,column:108}},"366":{start:{line:1225,column:30},end:{line:1225,column:106}},"367":{start:{line:1227,column:6},end:{line:1230,column:7}},"368":{start:{line:1229,column:9},end:{line:1229,column:72}},"369":{start:{line:1232,column:6},end:{line:1232,column:95}},"370":{start:{line:1232,column:42},end:{line:1232,column:93}},"371":{start:{line:1234,column:30},end:{line:1248,column:7}},"372":{start:{line:1236,column:9},end:{line:1247,column:10}},"373":{start:{line:1238,column:12},end:{line:1238,column:36}},"374":{start:{line:1241,column:12},end:{line:1246,column:13}},"375":{start:{line:1243,column:15},end:{line:1245,column:59}},"376":{start:{line:1251,column:6},end:{line:1254,column:7}},"377":{start:{line:1253,column:9},end:{line:1253,column:59}},"378":{start:{line:1257,column:6},end:{line:1270,column:7}},"379":{start:{line:1259,column:9},end:{line:1262,column:10}},"380":{start:{line:1261,column:12},end:{line:1261,column:61}},"381":{start:{line:1266,column:9},end:{line:1269,column:10}},"382":{start:{line:1268,column:12},end:{line:1268,column:41}},"383":{start:{line:1300,column:30},end:{line:1395,column:1}},"384":{start:{line:1303,column:3},end:{line:1303,column:96}},"385":{start:{line:1303,column:41},end:{line:1303,column:94}},"386":{start:{line:1304,column:3},end:{line:1304,column:103}},"387":{start:{line:1304,column:44},end:{line:1304,column:101}},"388":{start:{line:1305,column:3},end:{line:1305,column:95}},"389":{start:{line:1305,column:40},end:{line:1305,column:93}},"390":{start:{line:1307,column:3},end:{line:1311,column:4}},"391":{start:{line:1310,column:6},end:{line:1310,column:79}},"392":{start:{line:1314,column:27},end:{line:1314,column:28}},"393":{start:{line:1315,column:29},end:{line:1315,column:31}},"394":{start:{line:1318,column:19},end:{line:1318,column:24}},"395":{start:{line:1319,column:19},end:{line:1319,column:24}},"396":{start:{line:1322,column:14},end:{line:1322,column:55}},"397":{start:{line:1324,column:19},end:{line:1324,column:21}},"398":{start:{line:1326,column:3},end:{line:1376,column:4}},"399":{start:{line:1328,column:20},end:{line:1328,column:45}},"400":{start:{line:1330,column:6},end:{line:1348,column:7}},"401":{start:{line:1332,column:9},end:{line:1332,column:26}},"402":{start:{line:1334,column:9},end:{line:1347,column:10}},"403":{start:{line:1336,column:12},end:{line:1336,column:46}},"404":{start:{line:1337,column:12},end:{line:1337,column:39}},"405":{start:{line:1338,column:12},end:{line:1338,column:57}},"406":{start:{line:1340,column:27},end:{line:1340,column:57}},"407":{start:{line:1342,column:12},end:{line:1342,column:91}},"408":{start:{line:1342,column:68},end:{line:1342,column:89}},"409":{start:{line:1344,column:12},end:{line:1344,column:29}},"410":{start:{line:1345,column:12},end:{line:1345,column:32}},"411":{start:{line:1346,column:12},end:{line:1346,column:47}},"412":{start:{line:1352,column:6},end:{line:1375,column:7}},"413":{start:{line:1354,column:23},end:{line:1354,column:42}},"414":{start:{line:1356,column:9},end:{line:1374,column:10}},"415":{start:{line:1358,column:12},end:{line:1358,column:29}},"416":{start:{line:1360,column:12},end:{line:1373,column:13}},"417":{start:{line:1362,column:15},end:{line:1362,column:49}},"418":{start:{line:1363,column:15},end:{line:1363,column:42}},"419":{start:{line:1364,column:15},end:{line:1364,column:60}},"420":{start:{line:1366,column:30},end:{line:1366,column:60}},"421":{start:{line:1368,column:15},end:{line:1368,column:94}},"422":{start:{line:1368,column:71},end:{line:1368,column:92}},"423":{start:{line:1370,column:15},end:{line:1370,column:32}},"424":{start:{line:1371,column:15},end:{line:1371,column:35}},"425":{start:{line:1372,column:15},end:{line:1372,column:50}},"426":{start:{line:1378,column:3},end:{line:1381,column:4}},"427":{start:{line:1380,column:6},end:{line:1380,column:74}},"428":{start:{line:1383,column:3},end:{line:1386,column:4}},"429":{start:{line:1385,column:6},end:{line:1385,column:73}},"430":{start:{line:1389,column:3},end:{line:1389,column:53}},"431":{start:{line:1390,column:3},end:{line:1390,column:53}},"432":{start:{line:1392,column:3},end:{line:1392,column:30}},"433":{start:{line:1394,column:3},end:{line:1394,column:18}},"434":{start:{line:1420,column:29},end:{line:1507,column:1}},"435":{start:{line:1423,column:3},end:{line:1423,column:96}},"436":{start:{line:1423,column:41},end:{line:1423,column:94}},"437":{start:{line:1424,column:3},end:{line:1424,column:103}},"438":{start:{line:1424,column:44},end:{line:1424,column:101}},"439":{start:{line:1425,column:3},end:{line:1425,column:95}},"440":{start:{line:1425,column:40},end:{line:1425,column:93}},"441":{start:{line:1427,column:3},end:{line:1431,column:4}},"442":{start:{line:1430,column:6},end:{line:1430,column:79}},"443":{start:{line:1434,column:27},end:{line:1434,column:28}},"444":{start:{line:1435,column:29},end:{line:1435,column:31}},"445":{start:{line:1438,column:19},end:{line:1438,column:24}},"446":{start:{line:1439,column:19},end:{line:1439,column:24}},"447":{start:{line:1442,column:14},end:{line:1442,column:55}},"448":{start:{line:1444,column:3},end:{line:1490,column:4}},"449":{start:{line:1446,column:20},end:{line:1446,column:45}},"450":{start:{line:1448,column:6},end:{line:1464,column:7}},"451":{start:{line:1450,column:9},end:{line:1450,column:26}},"452":{start:{line:1452,column:9},end:{line:1463,column:10}},"453":{start:{line:1454,column:12},end:{line:1454,column:46}},"454":{start:{line:1455,column:12},end:{line:1455,column:39}},"455":{start:{line:1456,column:12},end:{line:1456,column:57}},"456":{start:{line:1458,column:12},end:{line:1458,column:43}},"457":{start:{line:1460,column:12},end:{line:1460,column:29}},"458":{start:{line:1461,column:12},end:{line:1461,column:32}},"459":{start:{line:1462,column:12},end:{line:1462,column:47}},"460":{start:{line:1468,column:6},end:{line:1489,column:7}},"461":{start:{line:1470,column:23},end:{line:1470,column:42}},"462":{start:{line:1472,column:9},end:{line:1488,column:10}},"463":{start:{line:1474,column:12},end:{line:1474,column:29}},"464":{start:{line:1476,column:12},end:{line:1487,column:13}},"465":{start:{line:1478,column:15},end:{line:1478,column:49}},"466":{start:{line:1479,column:15},end:{line:1479,column:42}},"467":{start:{line:1480,column:15},end:{line:1480,column:60}},"468":{start:{line:1482,column:15},end:{line:1482,column:46}},"469":{start:{line:1484,column:15},end:{line:1484,column:32}},"470":{start:{line:1485,column:15},end:{line:1485,column:35}},"471":{start:{line:1486,column:15},end:{line:1486,column:50}},"472":{start:{line:1492,column:3},end:{line:1495,column:4}},"473":{start:{line:1494,column:6},end:{line:1494,column:74}},"474":{start:{line:1497,column:3},end:{line:1500,column:4}},"475":{start:{line:1499,column:6},end:{line:1499,column:73}},"476":{start:{line:1503,column:3},end:{line:1503,column:53}},"477":{start:{line:1504,column:3},end:{line:1504,column:53}},"478":{start:{line:1506,column:3},end:{line:1506,column:18}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:146,column:3},end:{line:146,column:4}},loc:{start:{line:147,column:3},end:{line:210,column:4}},line:147},"1":{name:"(anonymous_1)",decl:{start:{line:224,column:3},end:{line:224,column:4}},loc:{start:{line:225,column:3},end:{line:331,column:4}},line:225},"2":{name:"(anonymous_2)",decl:{start:{line:342,column:3},end:{line:342,column:4}},loc:{start:{line:343,column:3},end:{line:358,column:4}},line:343},"3":{name:"(anonymous_3)",decl:{start:{line:371,column:3},end:{line:371,column:4}},loc:{start:{line:372,column:3},end:{line:376,column:4}},line:372},"4":{name:"(anonymous_4)",decl:{start:{line:389,column:3},end:{line:389,column:4}},loc:{start:{line:390,column:3},end:{line:394,column:4}},line:390},"5":{name:"(anonymous_5)",decl:{start:{line:402,column:3},end:{line:402,column:4}},loc:{start:{line:403,column:3},end:{line:415,column:4}},line:403},"6":{name:"(anonymous_6)",decl:{start:{line:420,column:3},end:{line:420,column:4}},loc:{start:{line:421,column:3},end:{line:465,column:4}},line:421},"7":{name:"(anonymous_7)",decl:{start:{line:475,column:3},end:{line:475,column:4}},loc:{start:{line:476,column:3},end:{line:480,column:4}},line:476},"8":{name:"(anonymous_8)",decl:{start:{line:487,column:3},end:{line:487,column:4}},loc:{start:{line:488,column:3},end:{line:490,column:4}},line:488},"9":{name:"(anonymous_9)",decl:{start:{line:497,column:3},end:{line:497,column:4}},loc:{start:{line:498,column:3},end:{line:502,column:4}},line:498},"10":{name:"(anonymous_10)",decl:{start:{line:509,column:3},end:{line:509,column:4}},loc:{start:{line:510,column:3},end:{line:514,column:4}},line:510},"11":{name:"(anonymous_11)",decl:{start:{line:526,column:3},end:{line:526,column:4}},loc:{start:{line:527,column:3},end:{line:564,column:4}},line:527},"12":{name:"(anonymous_12)",decl:{start:{line:573,column:3},end:{line:573,column:4}},loc:{start:{line:574,column:3},end:{line:580,column:4}},line:574},"13":{name:"(anonymous_13)",decl:{start:{line:591,column:3},end:{line:591,column:4}},loc:{start:{line:592,column:3},end:{line:657,column:4}},line:592},"14":{name:"(anonymous_14)",decl:{start:{line:672,column:3},end:{line:672,column:4}},loc:{start:{line:673,column:3},end:{line:760,column:4}},line:673},"15":{name:"(anonymous_15)",decl:{start:{line:775,column:3},end:{line:775,column:4}},loc:{start:{line:776,column:3},end:{line:786,column:4}},line:776},"16":{name:"(anonymous_16)",decl:{start:{line:800,column:3},end:{line:800,column:4}},loc:{start:{line:801,column:3},end:{line:880,column:4}},line:801},"17":{name:"(anonymous_17)",decl:{start:{line:895,column:3},end:{line:895,column:4}},loc:{start:{line:896,column:3},end:{line:906,column:4}},line:896},"18":{name:"(anonymous_18)",decl:{start:{line:915,column:3},end:{line:915,column:4}},loc:{start:{line:916,column:3},end:{line:918,column:4}},line:916},"19":{name:"(anonymous_19)",decl:{start:{line:928,column:3},end:{line:928,column:4}},loc:{start:{line:929,column:3},end:{line:930,column:4}},line:929},"20":{name:"(anonymous_20)",decl:{start:{line:939,column:3},end:{line:939,column:4}},loc:{start:{line:940,column:3},end:{line:972,column:4}},line:940},"21":{name:"(anonymous_21)",decl:{start:{line:979,column:3},end:{line:979,column:4}},loc:{start:{line:980,column:3},end:{line:994,column:4}},line:980},"22":{name:"(anonymous_22)",decl:{start:{line:1005,column:3},end:{line:1005,column:4}},loc:{start:{line:1006,column:3},end:{line:1010,column:4}},line:1006},"23":{name:"(anonymous_23)",decl:{start:{line:1019,column:3},end:{line:1019,column:4}},loc:{start:{line:1020,column:3},end:{line:1024,column:4}},line:1020},"24":{name:"(anonymous_24)",decl:{start:{line:1040,column:3},end:{line:1040,column:4}},loc:{start:{line:1041,column:3},end:{line:1176,column:4}},line:1041},"25":{name:"(anonymous_25)",decl:{start:{line:1183,column:3},end:{line:1183,column:4}},loc:{start:{line:1184,column:3},end:{line:1196,column:4}},line:1184},"26":{name:"(anonymous_26)",decl:{start:{line:1207,column:3},end:{line:1207,column:4}},loc:{start:{line:1208,column:3},end:{line:1212,column:4}},line:1208},"27":{name:"(anonymous_27)",decl:{start:{line:1223,column:3},end:{line:1223,column:4}},loc:{start:{line:1224,column:3},end:{line:1271,column:4}},line:1224},"28":{name:"(anonymous_28)",decl:{start:{line:1234,column:30},end:{line:1234,column:31}},loc:{start:{line:1235,column:6},end:{line:1248,column:7}},line:1235},"29":{name:"(anonymous_29)",decl:{start:{line:1300,column:30},end:{line:1300,column:31}},loc:{start:{line:1302,column:0},end:{line:1395,column:1}},line:1302},"30":{name:"(anonymous_30)",decl:{start:{line:1420,column:29},end:{line:1420,column:30}},loc:{start:{line:1422,column:0},end:{line:1507,column:1}},line:1422}},branchMap:{"0":{loc:{start:{line:146,column:15},end:{line:146,column:27}},type:"default-arg",locations:[{start:{line:146,column:25},end:{line:146,column:27}}],line:146},"1":{loc:{start:{line:148,column:6},end:{line:148,column:94}},type:"if",locations:[{start:{line:148,column:6},end:{line:148,column:94}},{start:{line:148,column:6},end:{line:148,column:94}}],line:148},"2":{loc:{start:{line:150,column:6},end:{line:153,column:7}},type:"if",locations:[{start:{line:150,column:6},end:{line:153,column:7}},{start:{line:150,column:6},end:{line:153,column:7}}],line:150},"3":{loc:{start:{line:150,column:10},end:{line:150,column:89}},type:"binary-expr",locations:[{start:{line:150,column:10},end:{line:150,column:42}},{start:{line:150,column:46},end:{line:150,column:89}}],line:150},"4":{loc:{start:{line:185,column:28},end:{line:185,column:101}},type:"cond-expr",locations:[{start:{line:185,column:63},end:{line:185,column:94}},{start:{line:185,column:97},end:{line:185,column:101}}],line:185},"5":{loc:{start:{line:205,column:19},end:{line:205,column:82}},type:"cond-expr",locations:[{start:{line:205,column:49},end:{line:205,column:65}},{start:{line:205,column:68},end:{line:205,column:82}}],line:205},"6":{loc:{start:{line:226,column:6},end:{line:226,column:108}},type:"if",locations:[{start:{line:226,column:6},end:{line:226,column:108}},{start:{line:226,column:6},end:{line:226,column:108}}],line:226},"7":{loc:{start:{line:228,column:6},end:{line:228,column:104}},type:"if",locations:[{start:{line:228,column:6},end:{line:228,column:104}},{start:{line:228,column:6},end:{line:228,column:104}}],line:228},"8":{loc:{start:{line:230,column:6},end:{line:233,column:7}},type:"if",locations:[{start:{line:230,column:6},end:{line:233,column:7}},{start:{line:230,column:6},end:{line:233,column:7}}],line:230},"9":{loc:{start:{line:235,column:6},end:{line:240,column:7}},type:"if",locations:[{start:{line:235,column:6},end:{line:240,column:7}},{start:{line:235,column:6},end:{line:240,column:7}}],line:235},"10":{loc:{start:{line:235,column:10},end:{line:236,column:44}},type:"binary-expr",locations:[{start:{line:235,column:10},end:{line:235,column:52}},{start:{line:235,column:56},end:{line:235,column:95}},{start:{line:236,column:7},end:{line:236,column:44}}],line:235},"11":{loc:{start:{line:242,column:6},end:{line:245,column:7}},type:"if",locations:[{start:{line:242,column:6},end:{line:245,column:7}},{start:{line:242,column:6},end:{line:245,column:7}}],line:242},"12":{loc:{start:{line:242,column:10},end:{line:242,column:97}},type:"binary-expr",locations:[{start:{line:242,column:10},end:{line:242,column:53}},{start:{line:242,column:57},end:{line:242,column:97}}],line:242},"13":{loc:{start:{line:247,column:6},end:{line:250,column:7}},type:"if",locations:[{start:{line:247,column:6},end:{line:250,column:7}},{start:{line:247,column:6},end:{line:250,column:7}}],line:247},"14":{loc:{start:{line:247,column:10},end:{line:247,column:77}},type:"binary-expr",locations:[{start:{line:247,column:10},end:{line:247,column:43}},{start:{line:247,column:47},end:{line:247,column:77}}],line:247},"15":{loc:{start:{line:253,column:6},end:{line:256,column:7}},type:"if",locations:[{start:{line:253,column:6},end:{line:256,column:7}},{start:{line:253,column:6},end:{line:256,column:7}}],line:253},"16":{loc:{start:{line:261,column:6},end:{line:279,column:7}},type:"if",locations:[{start:{line:261,column:6},end:{line:279,column:7}},{start:{line:261,column:6},end:{line:279,column:7}}],line:261},"17":{loc:{start:{line:261,column:10},end:{line:261,column:98}},type:"binary-expr",locations:[{start:{line:261,column:10},end:{line:261,column:51}},{start:{line:261,column:55},end:{line:261,column:98}}],line:261},"18":{loc:{start:{line:272,column:18},end:{line:272,column:58}},type:"binary-expr",locations:[{start:{line:272,column:18},end:{line:272,column:37}},{start:{line:272,column:41},end:{line:272,column:58}}],line:272},"19":{loc:{start:{line:282,column:6},end:{line:285,column:7}},type:"if",locations:[{start:{line:282,column:6},end:{line:285,column:7}},{start:{line:282,column:6},end:{line:285,column:7}}],line:282},"20":{loc:{start:{line:299,column:17},end:{line:299,column:33}},type:"binary-expr",locations:[{start:{line:299,column:17},end:{line:299,column:27}},{start:{line:299,column:31},end:{line:299,column:33}}],line:299},"21":{loc:{start:{line:308,column:21},end:{line:308,column:47}},type:"binary-expr",locations:[{start:{line:308,column:21},end:{line:308,column:41}},{start:{line:308,column:45},end:{line:308,column:47}}],line:308},"22":{loc:{start:{line:314,column:28},end:{line:315,column:49}},type:"cond-expr",locations:[{start:{line:315,column:7},end:{line:315,column:40}},{start:{line:315,column:43},end:{line:315,column:49}}],line:314},"23":{loc:{start:{line:314,column:28},end:{line:314,column:92}},type:"binary-expr",locations:[{start:{line:314,column:28},end:{line:314,column:51}},{start:{line:314,column:55},end:{line:314,column:92}}],line:314},"24":{loc:{start:{line:325,column:6},end:{line:328,column:7}},type:"if",locations:[{start:{line:325,column:6},end:{line:328,column:7}},{start:{line:325,column:6},end:{line:328,column:7}}],line:325},"25":{loc:{start:{line:342,column:16},end:{line:342,column:34}},type:"default-arg",locations:[{start:{line:342,column:32},end:{line:342,column:34}}],line:342},"26":{loc:{start:{line:344,column:6},end:{line:344,column:108}},type:"if",locations:[{start:{line:344,column:6},end:{line:344,column:108}},{start:{line:344,column:6},end:{line:344,column:108}}],line:344},"27":{loc:{start:{line:346,column:6},end:{line:346,column:101}},type:"if",locations:[{start:{line:346,column:6},end:{line:346,column:101}},{start:{line:346,column:6},end:{line:346,column:101}}],line:346},"28":{loc:{start:{line:354,column:9},end:{line:354,column:50}},type:"if",locations:[{start:{line:354,column:9},end:{line:354,column:50}},{start:{line:354,column:9},end:{line:354,column:50}}],line:354},"29":{loc:{start:{line:373,column:6},end:{line:373,column:108}},type:"if",locations:[{start:{line:373,column:6},end:{line:373,column:108}},{start:{line:373,column:6},end:{line:373,column:108}}],line:373},"30":{loc:{start:{line:375,column:13},end:{line:375,column:84}},type:"cond-expr",locations:[{start:{line:375,column:41},end:{line:375,column:75}},{start:{line:375,column:78},end:{line:375,column:84}}],line:375},"31":{loc:{start:{line:391,column:6},end:{line:391,column:108}},type:"if",locations:[{start:{line:391,column:6},end:{line:391,column:108}},{start:{line:391,column:6},end:{line:391,column:108}}],line:391},"32":{loc:{start:{line:393,column:6},end:{line:393,column:87}},type:"if",locations:[{start:{line:393,column:6},end:{line:393,column:87}},{start:{line:393,column:6},end:{line:393,column:87}}],line:393},"33":{loc:{start:{line:404,column:6},end:{line:407,column:7}},type:"if",locations:[{start:{line:404,column:6},end:{line:407,column:7}},{start:{line:404,column:6},end:{line:407,column:7}}],line:404},"34":{loc:{start:{line:422,column:6},end:{line:422,column:108}},type:"if",locations:[{start:{line:422,column:6},end:{line:422,column:108}},{start:{line:422,column:6},end:{line:422,column:108}}],line:422},"35":{loc:{start:{line:435,column:6},end:{line:454,column:7}},type:"if",locations:[{start:{line:435,column:6},end:{line:454,column:7}},{start:{line:435,column:6},end:{line:454,column:7}}],line:435},"36":{loc:{start:{line:435,column:10},end:{line:435,column:74}},type:"binary-expr",locations:[{start:{line:435,column:10},end:{line:435,column:33}},{start:{line:435,column:37},end:{line:435,column:74}}],line:435},"37":{loc:{start:{line:456,column:6},end:{line:461,column:7}},type:"if",locations:[{start:{line:456,column:6},end:{line:461,column:7}},{start:{line:456,column:6},end:{line:461,column:7}}],line:456},"38":{loc:{start:{line:456,column:10},end:{line:456,column:72}},type:"binary-expr",locations:[{start:{line:456,column:10},end:{line:456,column:38}},{start:{line:456,column:42},end:{line:456,column:72}}],line:456},"39":{loc:{start:{line:477,column:6},end:{line:477,column:108}},type:"if",locations:[{start:{line:477,column:6},end:{line:477,column:108}},{start:{line:477,column:6},end:{line:477,column:108}}],line:477},"40":{loc:{start:{line:479,column:6},end:{line:479,column:67}},type:"if",locations:[{start:{line:479,column:6},end:{line:479,column:67}},{start:{line:479,column:6},end:{line:479,column:67}}],line:479},"41":{loc:{start:{line:489,column:13},end:{line:489,column:67}},type:"binary-expr",locations:[{start:{line:489,column:13},end:{line:489,column:37}},{start:{line:489,column:41},end:{line:489,column:67}}],line:489},"42":{loc:{start:{line:499,column:6},end:{line:499,column:108}},type:"if",locations:[{start:{line:499,column:6},end:{line:499,column:108}},{start:{line:499,column:6},end:{line:499,column:108}}],line:499},"43":{loc:{start:{line:511,column:6},end:{line:511,column:108}},type:"if",locations:[{start:{line:511,column:6},end:{line:511,column:108}},{start:{line:511,column:6},end:{line:511,column:108}}],line:511},"44":{loc:{start:{line:526,column:21},end:{line:526,column:46}},type:"default-arg",locations:[{start:{line:526,column:44},end:{line:526,column:46}}],line:526},"45":{loc:{start:{line:526,column:23},end:{line:526,column:39}},type:"default-arg",locations:[{start:{line:526,column:37},end:{line:526,column:39}}],line:526},"46":{loc:{start:{line:528,column:6},end:{line:528,column:108}},type:"if",locations:[{start:{line:528,column:6},end:{line:528,column:108}},{start:{line:528,column:6},end:{line:528,column:108}}],line:528},"47":{loc:{start:{line:530,column:6},end:{line:533,column:7}},type:"if",locations:[{start:{line:530,column:6},end:{line:533,column:7}},{start:{line:530,column:6},end:{line:533,column:7}}],line:530},"48":{loc:{start:{line:530,column:10},end:{line:530,column:69}},type:"binary-expr",locations:[{start:{line:530,column:10},end:{line:530,column:41}},{start:{line:530,column:45},end:{line:530,column:69}}],line:530},"49":{loc:{start:{line:536,column:6},end:{line:540,column:7}},type:"if",locations:[{start:{line:536,column:6},end:{line:540,column:7}},{start:{line:536,column:6},end:{line:540,column:7}}],line:536},"50":{loc:{start:{line:539,column:16},end:{line:539,column:61}},type:"binary-expr",locations:[{start:{line:539,column:16},end:{line:539,column:44}},{start:{line:539,column:48},end:{line:539,column:61}}],line:539},"51":{loc:{start:{line:545,column:6},end:{line:561,column:7}},type:"if",locations:[{start:{line:545,column:6},end:{line:561,column:7}},{start:{line:545,column:6},end:{line:561,column:7}}],line:545},"52":{loc:{start:{line:551,column:48},end:{line:551,column:71}},type:"binary-expr",locations:[{start:{line:551,column:48},end:{line:551,column:54}},{start:{line:551,column:58},end:{line:551,column:71}}],line:551},"53":{loc:{start:{line:559,column:48},end:{line:559,column:71}},type:"binary-expr",locations:[{start:{line:559,column:48},end:{line:559,column:54}},{start:{line:559,column:58},end:{line:559,column:71}}],line:559},"54":{loc:{start:{line:575,column:6},end:{line:575,column:108}},type:"if",locations:[{start:{line:575,column:6},end:{line:575,column:108}},{start:{line:575,column:6},end:{line:575,column:108}}],line:575},"55":{loc:{start:{line:577,column:6},end:{line:577,column:99}},type:"if",locations:[{start:{line:577,column:6},end:{line:577,column:99}},{start:{line:577,column:6},end:{line:577,column:99}}],line:577},"56":{loc:{start:{line:591,column:22},end:{line:591,column:35}},type:"default-arg",locations:[{start:{line:591,column:29},end:{line:591,column:35}}],line:591},"57":{loc:{start:{line:591,column:37},end:{line:591,column:56}},type:"default-arg",locations:[{start:{line:591,column:50},end:{line:591,column:56}}],line:591},"58":{loc:{start:{line:593,column:6},end:{line:593,column:108}},type:"if",locations:[{start:{line:593,column:6},end:{line:593,column:108}},{start:{line:593,column:6},end:{line:593,column:108}}],line:593},"59":{loc:{start:{line:595,column:6},end:{line:595,column:99}},type:"if",locations:[{start:{line:595,column:6},end:{line:595,column:99}},{start:{line:595,column:6},end:{line:595,column:99}}],line:595},"60":{loc:{start:{line:597,column:6},end:{line:597,column:85}},type:"if",locations:[{start:{line:597,column:6},end:{line:597,column:85}},{start:{line:597,column:6},end:{line:597,column:85}}],line:597},"61":{loc:{start:{line:599,column:6},end:{line:603,column:7}},type:"if",locations:[{start:{line:599,column:6},end:{line:603,column:7}},{start:{line:599,column:6},end:{line:603,column:7}}],line:599},"62":{loc:{start:{line:599,column:10},end:{line:600,column:56}},type:"binary-expr",locations:[{start:{line:599,column:10},end:{line:599,column:40}},{start:{line:599,column:44},end:{line:599,column:70}},{start:{line:600,column:7},end:{line:600,column:56}}],line:599},"63":{loc:{start:{line:610,column:6},end:{line:610,column:52}},type:"if",locations:[{start:{line:610,column:6},end:{line:610,column:52}},{start:{line:610,column:6},end:{line:610,column:52}}],line:610},"64":{loc:{start:{line:612,column:6},end:{line:646,column:7}},type:"if",locations:[{start:{line:612,column:6},end:{line:646,column:7}},{start:{line:612,column:6},end:{line:646,column:7}}],line:612},"65":{loc:{start:{line:616,column:9},end:{line:626,column:10}},type:"if",locations:[{start:{line:616,column:9},end:{line:626,column:10}},{start:{line:616,column:9},end:{line:626,column:10}}],line:616},"66":{loc:{start:{line:616,column:13},end:{line:616,column:79}},type:"binary-expr",locations:[{start:{line:616,column:13},end:{line:616,column:42}},{start:{line:616,column:46},end:{line:616,column:60}},{start:{line:616,column:64},end:{line:616,column:79}}],line:616},"67":{loc:{start:{line:620,column:12},end:{line:625,column:13}},type:"if",locations:[{start:{line:620,column:12},end:{line:625,column:13}},{start:{line:620,column:12},end:{line:625,column:13}}],line:620},"68":{loc:{start:{line:622,column:15},end:{line:622,column:109}},type:"cond-expr",locations:[{start:{line:622,column:37},end:{line:622,column:73}},{start:{line:622,column:76},end:{line:622,column:109}}],line:622},"69":{loc:{start:{line:634,column:12},end:{line:644,column:13}},type:"if",locations:[{start:{line:634,column:12},end:{line:644,column:13}},{start:{line:634,column:12},end:{line:644,column:13}}],line:634},"70":{loc:{start:{line:634,column:16},end:{line:634,column:82}},type:"binary-expr",locations:[{start:{line:634,column:16},end:{line:634,column:45}},{start:{line:634,column:49},end:{line:634,column:63}},{start:{line:634,column:67},end:{line:634,column:82}}],line:634},"71":{loc:{start:{line:638,column:15},end:{line:643,column:16}},type:"if",locations:[{start:{line:638,column:15},end:{line:643,column:16}},{start:{line:638,column:15},end:{line:643,column:16}}],line:638},"72":{loc:{start:{line:640,column:18},end:{line:640,column:112}},type:"cond-expr",locations:[{start:{line:640,column:40},end:{line:640,column:76}},{start:{line:640,column:79},end:{line:640,column:112}}],line:640},"73":{loc:{start:{line:648,column:6},end:{line:651,column:7}},type:"if",locations:[{start:{line:648,column:6},end:{line:651,column:7}},{start:{line:648,column:6},end:{line:651,column:7}}],line:648},"74":{loc:{start:{line:648,column:10},end:{line:648,column:51}},type:"binary-expr",locations:[{start:{line:648,column:10},end:{line:648,column:37}},{start:{line:648,column:41},end:{line:648,column:51}}],line:648},"75":{loc:{start:{line:653,column:6},end:{line:656,column:7}},type:"if",locations:[{start:{line:653,column:6},end:{line:656,column:7}},{start:{line:653,column:6},end:{line:656,column:7}}],line:653},"76":{loc:{start:{line:653,column:10},end:{line:653,column:51}},type:"binary-expr",locations:[{start:{line:653,column:10},end:{line:653,column:37}},{start:{line:653,column:41},end:{line:653,column:51}}],line:653},"77":{loc:{start:{line:672,column:27},end:{line:672,column:40}},type:"default-arg",locations:[{start:{line:672,column:34},end:{line:672,column:40}}],line:672},"78":{loc:{start:{line:672,column:42},end:{line:672,column:61}},type:"default-arg",locations:[{start:{line:672,column:55},end:{line:672,column:61}}],line:672},"79":{loc:{start:{line:674,column:6},end:{line:674,column:108}},type:"if",locations:[{start:{line:674,column:6},end:{line:674,column:108}},{start:{line:674,column:6},end:{line:674,column:108}}],line:674},"80":{loc:{start:{line:676,column:6},end:{line:676,column:99}},type:"if",locations:[{start:{line:676,column:6},end:{line:676,column:99}},{start:{line:676,column:6},end:{line:676,column:99}}],line:676},"81":{loc:{start:{line:678,column:6},end:{line:678,column:85}},type:"if",locations:[{start:{line:678,column:6},end:{line:678,column:85}},{start:{line:678,column:6},end:{line:678,column:85}}],line:678},"82":{loc:{start:{line:680,column:6},end:{line:684,column:7}},type:"if",locations:[{start:{line:680,column:6},end:{line:684,column:7}},{start:{line:680,column:6},end:{line:684,column:7}}],line:680},"83":{loc:{start:{line:680,column:10},end:{line:681,column:56}},type:"binary-expr",locations:[{start:{line:680,column:10},end:{line:680,column:40}},{start:{line:680,column:44},end:{line:680,column:70}},{start:{line:681,column:7},end:{line:681,column:56}}],line:680},"84":{loc:{start:{line:695,column:6},end:{line:695,column:59}},type:"if",locations:[{start:{line:695,column:6},end:{line:695,column:59}},{start:{line:695,column:6},end:{line:695,column:59}}],line:695},"85":{loc:{start:{line:699,column:9},end:{line:741,column:10}},type:"if",locations:[{start:{line:699,column:9},end:{line:741,column:10}},{start:{line:699,column:9},end:{line:741,column:10}}],line:699},"86":{loc:{start:{line:703,column:12},end:{line:717,column:13}},type:"if",locations:[{start:{line:703,column:12},end:{line:717,column:13}},{start:{line:703,column:12},end:{line:717,column:13}}],line:703},"87":{loc:{start:{line:703,column:16},end:{line:703,column:82}},type:"binary-expr",locations:[{start:{line:703,column:16},end:{line:703,column:45}},{start:{line:703,column:49},end:{line:703,column:63}},{start:{line:703,column:67},end:{line:703,column:82}}],line:703},"88":{loc:{start:{line:707,column:15},end:{line:716,column:16}},type:"if",locations:[{start:{line:707,column:15},end:{line:716,column:16}},{start:{line:707,column:15},end:{line:716,column:16}}],line:707},"89":{loc:{start:{line:709,column:27},end:{line:710,column:52}},type:"cond-expr",locations:[{start:{line:709,column:49},end:{line:709,column:85}},{start:{line:710,column:19},end:{line:710,column:52}}],line:709},"90":{loc:{start:{line:713,column:18},end:{line:713,column:97}},type:"if",locations:[{start:{line:713,column:18},end:{line:713,column:97}},{start:{line:713,column:18},end:{line:713,column:97}}],line:713},"91":{loc:{start:{line:713,column:22},end:{line:713,column:70}},type:"binary-expr",locations:[{start:{line:713,column:22},end:{line:713,column:37}},{start:{line:713,column:41},end:{line:713,column:70}}],line:713},"92":{loc:{start:{line:725,column:15},end:{line:739,column:16}},type:"if",locations:[{start:{line:725,column:15},end:{line:739,column:16}},{start:{line:725,column:15},end:{line:739,column:16}}],line:725},"93":{loc:{start:{line:725,column:19},end:{line:725,column:85}},type:"binary-expr",locations:[{start:{line:725,column:19},end:{line:725,column:48}},{start:{line:725,column:52},end:{line:725,column:66}},{start:{line:725,column:70},end:{line:725,column:85}}],line:725},"94":{loc:{start:{line:729,column:18},end:{line:738,column:19}},type:"if",locations:[{start:{line:729,column:18},end:{line:738,column:19}},{start:{line:729,column:18},end:{line:738,column:19}}],line:729},"95":{loc:{start:{line:731,column:30},end:{line:732,column:55}},type:"cond-expr",locations:[{start:{line:731,column:52},end:{line:731,column:88}},{start:{line:732,column:22},end:{line:732,column:55}}],line:731},"96":{loc:{start:{line:735,column:21},end:{line:735,column:100}},type:"if",locations:[{start:{line:735,column:21},end:{line:735,column:100}},{start:{line:735,column:21},end:{line:735,column:100}}],line:735},"97":{loc:{start:{line:735,column:25},end:{line:735,column:73}},type:"binary-expr",locations:[{start:{line:735,column:25},end:{line:735,column:40}},{start:{line:735,column:44},end:{line:735,column:73}}],line:735},"98":{loc:{start:{line:743,column:9},end:{line:746,column:10}},type:"if",locations:[{start:{line:743,column:9},end:{line:746,column:10}},{start:{line:743,column:9},end:{line:746,column:10}}],line:743},"99":{loc:{start:{line:743,column:13},end:{line:743,column:54}},type:"binary-expr",locations:[{start:{line:743,column:13},end:{line:743,column:40}},{start:{line:743,column:44},end:{line:743,column:54}}],line:743},"100":{loc:{start:{line:748,column:9},end:{line:751,column:10}},type:"if",locations:[{start:{line:748,column:9},end:{line:751,column:10}},{start:{line:748,column:9},end:{line:751,column:10}}],line:748},"101":{loc:{start:{line:748,column:13},end:{line:748,column:54}},type:"binary-expr",locations:[{start:{line:748,column:13},end:{line:748,column:40}},{start:{line:748,column:44},end:{line:748,column:54}}],line:748},"102":{loc:{start:{line:759,column:13},end:{line:759,column:80}},type:"cond-expr",locations:[{start:{line:759,column:34},end:{line:759,column:54}},{start:{line:759,column:57},end:{line:759,column:80}}],line:759},"103":{loc:{start:{line:775,column:32},end:{line:775,column:46}},type:"default-arg",locations:[{start:{line:775,column:44},end:{line:775,column:46}}],line:775},"104":{loc:{start:{line:775,column:48},end:{line:775,column:66}},type:"default-arg",locations:[{start:{line:775,column:64},end:{line:775,column:66}}],line:775},"105":{loc:{start:{line:775,column:68},end:{line:775,column:87}},type:"default-arg",locations:[{start:{line:775,column:81},end:{line:775,column:87}}],line:775},"106":{loc:{start:{line:777,column:6},end:{line:777,column:108}},type:"if",locations:[{start:{line:777,column:6},end:{line:777,column:108}},{start:{line:777,column:6},end:{line:777,column:108}}],line:777},"107":{loc:{start:{line:779,column:6},end:{line:779,column:85}},type:"if",locations:[{start:{line:779,column:6},end:{line:779,column:85}},{start:{line:779,column:6},end:{line:779,column:85}}],line:779},"108":{loc:{start:{line:782,column:6},end:{line:782,column:70}},type:"if",locations:[{start:{line:782,column:6},end:{line:782,column:70}},{start:{line:782,column:6},end:{line:782,column:70}}],line:782},"109":{loc:{start:{line:800,column:26},end:{line:800,column:39}},type:"default-arg",locations:[{start:{line:800,column:33},end:{line:800,column:39}}],line:800},"110":{loc:{start:{line:800,column:41},end:{line:800,column:60}},type:"default-arg",locations:[{start:{line:800,column:54},end:{line:800,column:60}}],line:800},"111":{loc:{start:{line:802,column:6},end:{line:802,column:108}},type:"if",locations:[{start:{line:802,column:6},end:{line:802,column:108}},{start:{line:802,column:6},end:{line:802,column:108}}],line:802},"112":{loc:{start:{line:804,column:6},end:{line:804,column:99}},type:"if",locations:[{start:{line:804,column:6},end:{line:804,column:99}},{start:{line:804,column:6},end:{line:804,column:99}}],line:804},"113":{loc:{start:{line:806,column:6},end:{line:806,column:85}},type:"if",locations:[{start:{line:806,column:6},end:{line:806,column:85}},{start:{line:806,column:6},end:{line:806,column:85}}],line:806},"114":{loc:{start:{line:808,column:6},end:{line:812,column:7}},type:"if",locations:[{start:{line:808,column:6},end:{line:812,column:7}},{start:{line:808,column:6},end:{line:812,column:7}}],line:808},"115":{loc:{start:{line:808,column:10},end:{line:809,column:56}},type:"binary-expr",locations:[{start:{line:808,column:10},end:{line:808,column:40}},{start:{line:808,column:44},end:{line:808,column:70}},{start:{line:809,column:7},end:{line:809,column:56}}],line:808},"116":{loc:{start:{line:823,column:6},end:{line:823,column:59}},type:"if",locations:[{start:{line:823,column:6},end:{line:823,column:59}},{start:{line:823,column:6},end:{line:823,column:59}}],line:823},"117":{loc:{start:{line:825,column:6},end:{line:866,column:7}},type:"if",locations:[{start:{line:825,column:6},end:{line:866,column:7}},{start:{line:825,column:6},end:{line:866,column:7}}],line:825},"118":{loc:{start:{line:829,column:9},end:{line:842,column:10}},type:"if",locations:[{start:{line:829,column:9},end:{line:842,column:10}},{start:{line:829,column:9},end:{line:842,column:10}}],line:829},"119":{loc:{start:{line:829,column:13},end:{line:829,column:79}},type:"binary-expr",locations:[{start:{line:829,column:13},end:{line:829,column:42}},{start:{line:829,column:46},end:{line:829,column:60}},{start:{line:829,column:64},end:{line:829,column:79}}],line:829},"120":{loc:{start:{line:833,column:12},end:{line:841,column:13}},type:"if",locations:[{start:{line:833,column:12},end:{line:841,column:13}},{start:{line:833,column:12},end:{line:841,column:13}}],line:833},"121":{loc:{start:{line:835,column:24},end:{line:835,column:118}},type:"cond-expr",locations:[{start:{line:835,column:46},end:{line:835,column:82}},{start:{line:835,column:85},end:{line:835,column:118}}],line:835},"122":{loc:{start:{line:838,column:15},end:{line:838,column:94}},type:"if",locations:[{start:{line:838,column:15},end:{line:838,column:94}},{start:{line:838,column:15},end:{line:838,column:94}}],line:838},"123":{loc:{start:{line:838,column:19},end:{line:838,column:67}},type:"binary-expr",locations:[{start:{line:838,column:19},end:{line:838,column:34}},{start:{line:838,column:38},end:{line:838,column:67}}],line:838},"124":{loc:{start:{line:850,column:12},end:{line:864,column:13}},type:"if",locations:[{start:{line:850,column:12},end:{line:864,column:13}},{start:{line:850,column:12},end:{line:864,column:13}}],line:850},"125":{loc:{start:{line:850,column:16},end:{line:850,column:82}},type:"binary-expr",locations:[{start:{line:850,column:16},end:{line:850,column:45}},{start:{line:850,column:49},end:{line:850,column:63}},{start:{line:850,column:67},end:{line:850,column:82}}],line:850},"126":{loc:{start:{line:854,column:15},end:{line:863,column:16}},type:"if",locations:[{start:{line:854,column:15},end:{line:863,column:16}},{start:{line:854,column:15},end:{line:863,column:16}}],line:854},"127":{loc:{start:{line:856,column:27},end:{line:857,column:52}},type:"cond-expr",locations:[{start:{line:856,column:49},end:{line:856,column:85}},{start:{line:857,column:19},end:{line:857,column:52}}],line:856},"128":{loc:{start:{line:860,column:18},end:{line:860,column:97}},type:"if",locations:[{start:{line:860,column:18},end:{line:860,column:97}},{start:{line:860,column:18},end:{line:860,column:97}}],line:860},"129":{loc:{start:{line:860,column:22},end:{line:860,column:70}},type:"binary-expr",locations:[{start:{line:860,column:22},end:{line:860,column:37}},{start:{line:860,column:41},end:{line:860,column:70}}],line:860},"130":{loc:{start:{line:868,column:6},end:{line:871,column:7}},type:"if",locations:[{start:{line:868,column:6},end:{line:871,column:7}},{start:{line:868,column:6},end:{line:871,column:7}}],line:868},"131":{loc:{start:{line:868,column:10},end:{line:868,column:51}},type:"binary-expr",locations:[{start:{line:868,column:10},end:{line:868,column:37}},{start:{line:868,column:41},end:{line:868,column:51}}],line:868},"132":{loc:{start:{line:873,column:6},end:{line:876,column:7}},type:"if",locations:[{start:{line:873,column:6},end:{line:876,column:7}},{start:{line:873,column:6},end:{line:876,column:7}}],line:873},"133":{loc:{start:{line:873,column:10},end:{line:873,column:51}},type:"binary-expr",locations:[{start:{line:873,column:10},end:{line:873,column:37}},{start:{line:873,column:41},end:{line:873,column:51}}],line:873},"134":{loc:{start:{line:879,column:13},end:{line:879,column:50}},type:"cond-expr",locations:[{start:{line:879,column:34},end:{line:879,column:41}},{start:{line:879,column:44},end:{line:879,column:50}}],line:879},"135":{loc:{start:{line:895,column:31},end:{line:895,column:45}},type:"default-arg",locations:[{start:{line:895,column:43},end:{line:895,column:45}}],line:895},"136":{loc:{start:{line:895,column:47},end:{line:895,column:65}},type:"default-arg",locations:[{start:{line:895,column:63},end:{line:895,column:65}}],line:895},"137":{loc:{start:{line:895,column:67},end:{line:895,column:86}},type:"default-arg",locations:[{start:{line:895,column:80},end:{line:895,column:86}}],line:895},"138":{loc:{start:{line:897,column:6},end:{line:897,column:108}},type:"if",locations:[{start:{line:897,column:6},end:{line:897,column:108}},{start:{line:897,column:6},end:{line:897,column:108}}],line:897},"139":{loc:{start:{line:899,column:6},end:{line:899,column:85}},type:"if",locations:[{start:{line:899,column:6},end:{line:899,column:85}},{start:{line:899,column:6},end:{line:899,column:85}}],line:899},"140":{loc:{start:{line:902,column:6},end:{line:902,column:59}},type:"if",locations:[{start:{line:902,column:6},end:{line:902,column:59}},{start:{line:902,column:6},end:{line:902,column:59}}],line:902},"141":{loc:{start:{line:941,column:6},end:{line:941,column:108}},type:"if",locations:[{start:{line:941,column:6},end:{line:941,column:108}},{start:{line:941,column:6},end:{line:941,column:108}}],line:941},"142":{loc:{start:{line:945,column:6},end:{line:969,column:7}},type:"if",locations:[{start:{line:945,column:6},end:{line:969,column:7}},{start:{line:945,column:6},end:{line:969,column:7}}],line:945},"143":{loc:{start:{line:957,column:9},end:{line:957,column:93}},type:"if",locations:[{start:{line:957,column:9},end:{line:957,column:93}},{start:{line:957,column:9},end:{line:957,column:93}}],line:957},"144":{loc:{start:{line:962,column:9},end:{line:966,column:10}},type:"if",locations:[{start:{line:962,column:9},end:{line:966,column:10}},{start:{line:962,column:9},end:{line:966,column:10}}],line:962},"145":{loc:{start:{line:981,column:6},end:{line:981,column:108}},type:"if",locations:[{start:{line:981,column:6},end:{line:981,column:108}},{start:{line:981,column:6},end:{line:981,column:108}}],line:981},"146":{loc:{start:{line:1007,column:6},end:{line:1007,column:108}},type:"if",locations:[{start:{line:1007,column:6},end:{line:1007,column:108}},{start:{line:1007,column:6},end:{line:1007,column:108}}],line:1007},"147":{loc:{start:{line:1009,column:13},end:{line:1009,column:76}},type:"cond-expr",locations:[{start:{line:1009,column:45},end:{line:1009,column:68}},{start:{line:1009,column:71},end:{line:1009,column:76}}],line:1009},"148":{loc:{start:{line:1021,column:6},end:{line:1021,column:108}},type:"if",locations:[{start:{line:1021,column:6},end:{line:1021,column:108}},{start:{line:1021,column:6},end:{line:1021,column:108}}],line:1021},"149":{loc:{start:{line:1023,column:6},end:{line:1023,column:69}},type:"if",locations:[{start:{line:1023,column:6},end:{line:1023,column:69}},{start:{line:1023,column:6},end:{line:1023,column:69}}],line:1023},"150":{loc:{start:{line:1040,column:21},end:{line:1040,column:64}},type:"default-arg",locations:[{start:{line:1040,column:62},end:{line:1040,column:64}}],line:1040},"151":{loc:{start:{line:1040,column:33},end:{line:1040,column:57}},type:"default-arg",locations:[{start:{line:1040,column:48},end:{line:1040,column:57}}],line:1040},"152":{loc:{start:{line:1042,column:6},end:{line:1042,column:108}},type:"if",locations:[{start:{line:1042,column:6},end:{line:1042,column:108}},{start:{line:1042,column:6},end:{line:1042,column:108}}],line:1042},"153":{loc:{start:{line:1044,column:6},end:{line:1044,column:103}},type:"if",locations:[{start:{line:1044,column:6},end:{line:1044,column:103}},{start:{line:1044,column:6},end:{line:1044,column:103}}],line:1044},"154":{loc:{start:{line:1045,column:6},end:{line:1045,column:105}},type:"if",locations:[{start:{line:1045,column:6},end:{line:1045,column:105}},{start:{line:1045,column:6},end:{line:1045,column:105}}],line:1045},"155":{loc:{start:{line:1048,column:6},end:{line:1048,column:55}},type:"if",locations:[{start:{line:1048,column:6},end:{line:1048,column:55}},{start:{line:1048,column:6},end:{line:1048,column:55}}],line:1048},"156":{loc:{start:{line:1061,column:6},end:{line:1104,column:7}},type:"if",locations:[{start:{line:1061,column:6},end:{line:1104,column:7}},{start:{line:1061,column:6},end:{line:1104,column:7}}],line:1061},"157":{loc:{start:{line:1079,column:12},end:{line:1079,column:96}},type:"if",locations:[{start:{line:1079,column:12},end:{line:1079,column:96}},{start:{line:1079,column:12},end:{line:1079,column:96}}],line:1079},"158":{loc:{start:{line:1092,column:12},end:{line:1102,column:13}},type:"if",locations:[{start:{line:1092,column:12},end:{line:1102,column:13}},{start:{line:1092,column:12},end:{line:1102,column:13}}],line:1092},"159":{loc:{start:{line:1106,column:6},end:{line:1134,column:7}},type:"if",locations:[{start:{line:1106,column:6},end:{line:1134,column:7}},{start:{line:1106,column:6},end:{line:1134,column:7}}],line:1106},"160":{loc:{start:{line:1163,column:6},end:{line:1171,column:7}},type:"if",locations:[{start:{line:1163,column:6},end:{line:1171,column:7}},{start:{line:1163,column:6},end:{line:1171,column:7}}],line:1163},"161":{loc:{start:{line:1163,column:10},end:{line:1163,column:72}},type:"binary-expr",locations:[{start:{line:1163,column:10},end:{line:1163,column:38}},{start:{line:1163,column:42},end:{line:1163,column:72}}],line:1163},"162":{loc:{start:{line:1183,column:14},end:{line:1183,column:26}},type:"default-arg",locations:[{start:{line:1183,column:24},end:{line:1183,column:26}}],line:1183},"163":{loc:{start:{line:1185,column:6},end:{line:1185,column:108}},type:"if",locations:[{start:{line:1185,column:6},end:{line:1185,column:108}},{start:{line:1185,column:6},end:{line:1185,column:108}}],line:1185},"164":{loc:{start:{line:1187,column:6},end:{line:1187,column:94}},type:"if",locations:[{start:{line:1187,column:6},end:{line:1187,column:94}},{start:{line:1187,column:6},end:{line:1187,column:94}}],line:1187},"165":{loc:{start:{line:1189,column:6},end:{line:1189,column:113}},type:"if",locations:[{start:{line:1189,column:6},end:{line:1189,column:113}},{start:{line:1189,column:6},end:{line:1189,column:113}}],line:1189},"166":{loc:{start:{line:1190,column:6},end:{line:1190,column:101}},type:"if",locations:[{start:{line:1190,column:6},end:{line:1190,column:101}},{start:{line:1190,column:6},end:{line:1190,column:101}}],line:1190},"167":{loc:{start:{line:1191,column:6},end:{line:1191,column:113}},type:"if",locations:[{start:{line:1191,column:6},end:{line:1191,column:113}},{start:{line:1191,column:6},end:{line:1191,column:113}}],line:1191},"168":{loc:{start:{line:1192,column:6},end:{line:1192,column:113}},type:"if",locations:[{start:{line:1192,column:6},end:{line:1192,column:113}},{start:{line:1192,column:6},end:{line:1192,column:113}}],line:1192},"169":{loc:{start:{line:1193,column:6},end:{line:1193,column:113}},type:"if",locations:[{start:{line:1193,column:6},end:{line:1193,column:113}},{start:{line:1193,column:6},end:{line:1193,column:113}}],line:1193},"170":{loc:{start:{line:1194,column:6},end:{line:1194,column:110}},type:"if",locations:[{start:{line:1194,column:6},end:{line:1194,column:110}},{start:{line:1194,column:6},end:{line:1194,column:110}}],line:1194},"171":{loc:{start:{line:1195,column:6},end:{line:1195,column:110}},type:"if",locations:[{start:{line:1195,column:6},end:{line:1195,column:110}},{start:{line:1195,column:6},end:{line:1195,column:110}}],line:1195},"172":{loc:{start:{line:1207,column:23},end:{line:1207,column:35}},type:"default-arg",locations:[{start:{line:1207,column:33},end:{line:1207,column:35}}],line:1207},"173":{loc:{start:{line:1209,column:6},end:{line:1209,column:108}},type:"if",locations:[{start:{line:1209,column:6},end:{line:1209,column:108}},{start:{line:1209,column:6},end:{line:1209,column:108}}],line:1209},"174":{loc:{start:{line:1211,column:6},end:{line:1211,column:70}},type:"if",locations:[{start:{line:1211,column:6},end:{line:1211,column:70}},{start:{line:1211,column:6},end:{line:1211,column:70}}],line:1211},"175":{loc:{start:{line:1223,column:21},end:{line:1223,column:55}},type:"default-arg",locations:[{start:{line:1223,column:53},end:{line:1223,column:55}}],line:1223},"176":{loc:{start:{line:1223,column:32},end:{line:1223,column:48}},type:"default-arg",locations:[{start:{line:1223,column:46},end:{line:1223,column:48}}],line:1223},"177":{loc:{start:{line:1225,column:6},end:{line:1225,column:108}},type:"if",locations:[{start:{line:1225,column:6},end:{line:1225,column:108}},{start:{line:1225,column:6},end:{line:1225,column:108}}],line:1225},"178":{loc:{start:{line:1227,column:6},end:{line:1230,column:7}},type:"if",locations:[{start:{line:1227,column:6},end:{line:1230,column:7}},{start:{line:1227,column:6},end:{line:1230,column:7}}],line:1227},"179":{loc:{start:{line:1227,column:10},end:{line:1227,column:72}},type:"binary-expr",locations:[{start:{line:1227,column:10},end:{line:1227,column:41}},{start:{line:1227,column:45},end:{line:1227,column:72}}],line:1227},"180":{loc:{start:{line:1232,column:6},end:{line:1232,column:95}},type:"if",locations:[{start:{line:1232,column:6},end:{line:1232,column:95}},{start:{line:1232,column:6},end:{line:1232,column:95}}],line:1232},"181":{loc:{start:{line:1236,column:9},end:{line:1247,column:10}},type:"if",locations:[{start:{line:1236,column:9},end:{line:1247,column:10}},{start:{line:1236,column:9},end:{line:1247,column:10}}],line:1236},"182":{loc:{start:{line:1241,column:12},end:{line:1246,column:13}},type:"if",locations:[{start:{line:1241,column:12},end:{line:1246,column:13}},{start:{line:1241,column:12},end:{line:1246,column:13}}],line:1241},"183":{loc:{start:{line:1251,column:6},end:{line:1254,column:7}},type:"if",locations:[{start:{line:1251,column:6},end:{line:1254,column:7}},{start:{line:1251,column:6},end:{line:1254,column:7}}],line:1251},"184":{loc:{start:{line:1257,column:6},end:{line:1270,column:7}},type:"if",locations:[{start:{line:1257,column:6},end:{line:1270,column:7}},{start:{line:1257,column:6},end:{line:1270,column:7}}],line:1257},"185":{loc:{start:{line:1300,column:49},end:{line:1300,column:63}},type:"default-arg",locations:[{start:{line:1300,column:61},end:{line:1300,column:63}}],line:1300},"186":{loc:{start:{line:1300,column:65},end:{line:1300,column:83}},type:"default-arg",locations:[{start:{line:1300,column:81},end:{line:1300,column:83}}],line:1300},"187":{loc:{start:{line:1301,column:1},end:{line:1301,column:25}},type:"default-arg",locations:[{start:{line:1301,column:21},end:{line:1301,column:25}}],line:1301},"188":{loc:{start:{line:1303,column:3},end:{line:1303,column:96}},type:"if",locations:[{start:{line:1303,column:3},end:{line:1303,column:96}},{start:{line:1303,column:3},end:{line:1303,column:96}}],line:1303},"189":{loc:{start:{line:1304,column:3},end:{line:1304,column:103}},type:"if",locations:[{start:{line:1304,column:3},end:{line:1304,column:103}},{start:{line:1304,column:3},end:{line:1304,column:103}}],line:1304},"190":{loc:{start:{line:1305,column:3},end:{line:1305,column:95}},type:"if",locations:[{start:{line:1305,column:3},end:{line:1305,column:95}},{start:{line:1305,column:3},end:{line:1305,column:95}}],line:1305},"191":{loc:{start:{line:1307,column:3},end:{line:1311,column:4}},type:"if",locations:[{start:{line:1307,column:3},end:{line:1311,column:4}},{start:{line:1307,column:3},end:{line:1311,column:4}}],line:1307},"192":{loc:{start:{line:1307,column:7},end:{line:1308,column:53}},type:"binary-expr",locations:[{start:{line:1307,column:7},end:{line:1307,column:37}},{start:{line:1307,column:41},end:{line:1307,column:67}},{start:{line:1308,column:4},end:{line:1308,column:53}}],line:1307},"193":{loc:{start:{line:1326,column:3},end:{line:1376,column:4}},type:"if",locations:[{start:{line:1326,column:3},end:{line:1376,column:4}},{start:{line:1326,column:3},end:{line:1376,column:4}}],line:1326},"194":{loc:{start:{line:1330,column:6},end:{line:1348,column:7}},type:"if",locations:[{start:{line:1330,column:6},end:{line:1348,column:7}},{start:{line:1330,column:6},end:{line:1348,column:7}}],line:1330},"195":{loc:{start:{line:1330,column:10},end:{line:1330,column:73}},type:"binary-expr",locations:[{start:{line:1330,column:10},end:{line:1330,column:38}},{start:{line:1330,column:42},end:{line:1330,column:55}},{start:{line:1330,column:59},end:{line:1330,column:73}}],line:1330},"196":{loc:{start:{line:1334,column:9},end:{line:1347,column:10}},type:"if",locations:[{start:{line:1334,column:9},end:{line:1347,column:10}},{start:{line:1334,column:9},end:{line:1347,column:10}}],line:1334},"197":{loc:{start:{line:1342,column:12},end:{line:1342,column:91}},type:"if",locations:[{start:{line:1342,column:12},end:{line:1342,column:91}},{start:{line:1342,column:12},end:{line:1342,column:91}}],line:1342},"198":{loc:{start:{line:1342,column:16},end:{line:1342,column:64}},type:"binary-expr",locations:[{start:{line:1342,column:16},end:{line:1342,column:45}},{start:{line:1342,column:49},end:{line:1342,column:64}}],line:1342},"199":{loc:{start:{line:1356,column:9},end:{line:1374,column:10}},type:"if",locations:[{start:{line:1356,column:9},end:{line:1374,column:10}},{start:{line:1356,column:9},end:{line:1374,column:10}}],line:1356},"200":{loc:{start:{line:1356,column:13},end:{line:1356,column:76}},type:"binary-expr",locations:[{start:{line:1356,column:13},end:{line:1356,column:41}},{start:{line:1356,column:45},end:{line:1356,column:58}},{start:{line:1356,column:62},end:{line:1356,column:76}}],line:1356},"201":{loc:{start:{line:1360,column:12},end:{line:1373,column:13}},type:"if",locations:[{start:{line:1360,column:12},end:{line:1373,column:13}},{start:{line:1360,column:12},end:{line:1373,column:13}}],line:1360},"202":{loc:{start:{line:1368,column:15},end:{line:1368,column:94}},type:"if",locations:[{start:{line:1368,column:15},end:{line:1368,column:94}},{start:{line:1368,column:15},end:{line:1368,column:94}}],line:1368},"203":{loc:{start:{line:1368,column:19},end:{line:1368,column:67}},type:"binary-expr",locations:[{start:{line:1368,column:19},end:{line:1368,column:48}},{start:{line:1368,column:52},end:{line:1368,column:67}}],line:1368},"204":{loc:{start:{line:1378,column:3},end:{line:1381,column:4}},type:"if",locations:[{start:{line:1378,column:3},end:{line:1381,column:4}},{start:{line:1378,column:3},end:{line:1381,column:4}}],line:1378},"205":{loc:{start:{line:1378,column:7},end:{line:1378,column:63}},type:"binary-expr",locations:[{start:{line:1378,column:7},end:{line:1378,column:24}},{start:{line:1378,column:28},end:{line:1378,column:49}},{start:{line:1378,column:53},end:{line:1378,column:63}}],line:1378},"206":{loc:{start:{line:1383,column:3},end:{line:1386,column:4}},type:"if",locations:[{start:{line:1383,column:3},end:{line:1386,column:4}},{start:{line:1383,column:3},end:{line:1386,column:4}}],line:1383},"207":{loc:{start:{line:1383,column:7},end:{line:1383,column:63}},type:"binary-expr",locations:[{start:{line:1383,column:7},end:{line:1383,column:24}},{start:{line:1383,column:28},end:{line:1383,column:49}},{start:{line:1383,column:53},end:{line:1383,column:63}}],line:1383},"208":{loc:{start:{line:1420,column:42},end:{line:1420,column:56}},type:"default-arg",locations:[{start:{line:1420,column:54},end:{line:1420,column:56}}],line:1420},"209":{loc:{start:{line:1420,column:58},end:{line:1420,column:76}},type:"default-arg",locations:[{start:{line:1420,column:74},end:{line:1420,column:76}}],line:1420},"210":{loc:{start:{line:1421,column:1},end:{line:1421,column:25}},type:"default-arg",locations:[{start:{line:1421,column:21},end:{line:1421,column:25}}],line:1421},"211":{loc:{start:{line:1423,column:3},end:{line:1423,column:96}},type:"if",locations:[{start:{line:1423,column:3},end:{line:1423,column:96}},{start:{line:1423,column:3},end:{line:1423,column:96}}],line:1423},"212":{loc:{start:{line:1424,column:3},end:{line:1424,column:103}},type:"if",locations:[{start:{line:1424,column:3},end:{line:1424,column:103}},{start:{line:1424,column:3},end:{line:1424,column:103}}],line:1424},"213":{loc:{start:{line:1425,column:3},end:{line:1425,column:95}},type:"if",locations:[{start:{line:1425,column:3},end:{line:1425,column:95}},{start:{line:1425,column:3},end:{line:1425,column:95}}],line:1425},"214":{loc:{start:{line:1427,column:3},end:{line:1431,column:4}},type:"if",locations:[{start:{line:1427,column:3},end:{line:1431,column:4}},{start:{line:1427,column:3},end:{line:1431,column:4}}],line:1427},"215":{loc:{start:{line:1427,column:7},end:{line:1428,column:53}},type:"binary-expr",locations:[{start:{line:1427,column:7},end:{line:1427,column:37}},{start:{line:1427,column:41},end:{line:1427,column:67}},{start:{line:1428,column:4},end:{line:1428,column:53}}],line:1427},"216":{loc:{start:{line:1444,column:3},end:{line:1490,column:4}},type:"if",locations:[{start:{line:1444,column:3},end:{line:1490,column:4}},{start:{line:1444,column:3},end:{line:1490,column:4}}],line:1444},"217":{loc:{start:{line:1448,column:6},end:{line:1464,column:7}},type:"if",locations:[{start:{line:1448,column:6},end:{line:1464,column:7}},{start:{line:1448,column:6},end:{line:1464,column:7}}],line:1448},"218":{loc:{start:{line:1448,column:10},end:{line:1448,column:73}},type:"binary-expr",locations:[{start:{line:1448,column:10},end:{line:1448,column:38}},{start:{line:1448,column:42},end:{line:1448,column:55}},{start:{line:1448,column:59},end:{line:1448,column:73}}],line:1448},"219":{loc:{start:{line:1452,column:9},end:{line:1463,column:10}},type:"if",locations:[{start:{line:1452,column:9},end:{line:1463,column:10}},{start:{line:1452,column:9},end:{line:1463,column:10}}],line:1452},"220":{loc:{start:{line:1472,column:9},end:{line:1488,column:10}},type:"if",locations:[{start:{line:1472,column:9},end:{line:1488,column:10}},{start:{line:1472,column:9},end:{line:1488,column:10}}],line:1472},"221":{loc:{start:{line:1472,column:13},end:{line:1472,column:76}},type:"binary-expr",locations:[{start:{line:1472,column:13},end:{line:1472,column:41}},{start:{line:1472,column:45},end:{line:1472,column:58}},{start:{line:1472,column:62},end:{line:1472,column:76}}],line:1472},"222":{loc:{start:{line:1476,column:12},end:{line:1487,column:13}},type:"if",locations:[{start:{line:1476,column:12},end:{line:1487,column:13}},{start:{line:1476,column:12},end:{line:1487,column:13}}],line:1476},"223":{loc:{start:{line:1492,column:3},end:{line:1495,column:4}},type:"if",locations:[{start:{line:1492,column:3},end:{line:1495,column:4}},{start:{line:1492,column:3},end:{line:1495,column:4}}],line:1492},"224":{loc:{start:{line:1492,column:7},end:{line:1492,column:63}},type:"binary-expr",locations:[{start:{line:1492,column:7},end:{line:1492,column:24}},{start:{line:1492,column:28},end:{line:1492,column:49}},{start:{line:1492,column:53},end:{line:1492,column:63}}],line:1492},"225":{loc:{start:{line:1497,column:3},end:{line:1500,column:4}},type:"if",locations:[{start:{line:1497,column:3},end:{line:1500,column:4}},{start:{line:1497,column:3},end:{line:1500,column:4}}],line:1497},"226":{loc:{start:{line:1497,column:7},end:{line:1497,column:63}},type:"binary-expr",locations:[{start:{line:1497,column:7},end:{line:1497,column:24}},{start:{line:1497,column:28},end:{line:1497,column:49}},{start:{line:1497,column:53},end:{line:1497,column:63}}],line:1497}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0},b:{"0":[0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0],"45":[0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0],"57":[0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0],"78":[0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0],"104":[0],"105":[0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0],"110":[0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0],"136":[0],"137":[0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0],"151":[0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0],"173":[0,0],"174":[0,0],"175":[0],"176":[0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0],"185":[0],"186":[0],"187":[0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0,0],"193":[0,0],"194":[0,0],"195":[0,0,0],"196":[0,0],"197":[0,0],"198":[0,0],"199":[0,0],"200":[0,0,0],"201":[0,0],"202":[0,0],"203":[0,0],"204":[0,0],"205":[0,0,0],"206":[0,0],"207":[0,0,0],"208":[0],"209":[0],"210":[0],"211":[0,0],"212":[0,0],"213":[0,0],"214":[0,0],"215":[0,0,0],"216":[0,0],"217":[0,0],"218":[0,0,0],"219":[0,0],"220":[0,0],"221":[0,0,0],"222":[0,0],"223":[0,0],"224":[0,0,0],"225":[0,0],"226":[0,0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"8872b73f016480eb6f228cd18fb3530972dc8a3d"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2i6u9283d0=function(){return actualCoverage;};}return actualCoverage;}cov_2i6u9283d0();/**
 * Provides a lightweight plugin manager for Node / NPM & the browser with eventbus integration for plugins in a safe
 * and protected manner across NPM modules, local files, and preloaded object instances. This pattern facilitates
 * message passing between modules versus direct dependencies / method invocation.
 *
 * It isn't necessary to use an eventbus associated with the plugin manager though invocation then relies on invoking
 * methods directly with the plugin manager instance.
 *
 * A default eventbus will be created, but you may also pass in an eventbus from `@typhonjs-plugin/eventbus` and the
 * plugin manager will register by default under these event categories:
 *
 * `plugins:async:add` - {@link AbstractPluginManager#add}
 *
 * `plugins:async:add:all` - {@link AbstractPluginManager#addAll}
 *
 * `plugins:async:destroy:manager` - {@link AbstractPluginManager#destroy}
 *
 * `plugins:async:invoke` - {@link AbstractPluginManager#invokeAsync}
 *
 * `plugins:async:invoke:event` - {@link AbstractPluginManager#invokeAsyncEvent}
 *
 * `plugins:async:remove` - {@link AbstractPluginManager#remove}
 *
 * `plugins:async:remove:all` - {@link AbstractPluginManager#removeAll}
 *
 * `plugins:create:eventbus:proxy` - {@link AbstractPluginManager#createEventbusProxy}
 *
 * `plugins:get:enabled` - {@link AbstractPluginManager#getPluginsEnabled}
 *
 * `plugins:get:options` - {@link AbstractPluginManager#getOptions}
 *
 * `plugins:has:plugin` - {@link AbstractPluginManager#hasPlugin}
 *
 * `plugins:invoke` - {@link AbstractPluginManager#invoke}
 *
 * `plugins:is:valid:config` - {@link AbstractPluginManager#isValidConfig}
 *
 * `plugins:set:enabled` - {@link AbstractPluginManager#setPluginsEnabled}
 *
 * `plugins:set:options` - {@link AbstractPluginManager#setOptions}
 *
 * `plugins:sync:invoke` - {@link AbstractPluginManager#invokeSync}
 *
 * `plugins:sync:invoke:event` - {@link AbstractPluginManager#invokeSyncEvent}
 *
 * Automatically when a plugin is loaded and unloaded respective callbacks `onPluginLoad` and `onPluginUnload` will
 * be attempted to be invoked on the plugin. This is an opportunity for the plugin to receive any associated eventbus
 * and wire itself into it. It should be noted that a protected proxy around the eventbus is passed to the plugins
 * such that when the plugin is removed automatically all events registered on the eventbus are cleaned up without
 * a plugin author needing to do this manually in the `onPluginUnload` callback. This solves any dangling event binding
 * issues.
 *
 * By supporting ES Modules in Node and the browser and CJS on Node the plugin manager is by nature asynchronous for
 * the
 * core methods of adding / removing plugins and destroying the manager. The lifecycle methods `onPluginLoad` and
 * `onPluginUnload` will be awaited on such that if a plugin returns a Promise or is an async method
 * then it will complete before execution continues.
 *
 * It is recommended to interact with the plugin manager eventbus through an eventbus proxy. The
 * `createEventbusProxy` method will return a proxy to the default or currently set eventbus.
 *
 * If eventbus functionality is enabled it is important especially if using a process / global level eventbus such as
 * `@typhonjs-plugin/eventbus/instances` to call {@link AbstractPluginManager#destroy} to clean up all plugin eventbus
 * resources and the plugin manager event bindings; this is primarily a testing concern.
 *
 * @see https://www.npmjs.com/package/@typhonjs-plugin/eventbus
 *
 * @example
 * import PluginManager from '@typhonjs-plugin/manager';
 *
 * const pluginManager = new PluginManager();
 *
 * pluginManager.add({ name: 'an-npm-plugin-enabled-module' });
 * pluginManager.add({ name: 'my-local-module', target: './myModule.js' });
 *
 * const eventbus = pluginManager.createEventbusProxy();
 *
 * // Let's say an-npm-plugin-enabled-module responds to 'cool:event' which returns 'true'.
 * // Let's say my-local-module responds to 'hot:event' which returns 'false'.
 * // Both of the plugin / modules will have 'onPluginLoaded' invoked with a proxy to the eventbus and any plugin
 * // options defined.
 *
 * // One can then use the eventbus functionality to invoke associated module / plugin methods even retrieving results.
 * assert(eventbus.triggerSync('cool:event') === true);
 * assert(eventbus.triggerSync('hot:event') === false);
 *
 * // One can also indirectly invoke any method of the plugin via:
 * eventbus.triggerSync('plugins:invoke:sync:event', 'aCoolMethod'); // Any plugin with a method named `aCoolMethod` is
 *    invoked. eventbus.triggerSync('plugins:invoke:sync:event', 'aCoolMethod', {}, {},
 *    'an-npm-plugin-enabled-module'); // specific invocation.
 *
 * // The 3rd parameter will make a copy of the hash and the 4th defines a pass through object hash sending a single
 * // event / object hash to the invoked method.
 *
 * // -----------------------
 *
 * // Given that `@typhonjs-plugin/eventbus/instances` defines a global / process level eventbus you can import it in
 *    an
 * entirely different file or even NPM module and invoke methods of loaded plugins like this:
 *
 * import eventbus from '@typhonjs-plugin/eventbus/instances';
 *
 * eventbus.triggerSync('plugins:invoke', 'aCoolMethod'); // Any plugin with a method named `aCoolMethod` is invoked.
 *
 * assert(eventbus.triggerSync('cool:event') === true);
 *
 * eventbus.trigger('plugins:remove', 'an-npm-plugin-enabled-module'); // Removes the plugin and unregisters events.
 *
 * assert(eventbus.triggerSync('cool:event') === true); // Will now fail!
 *
 * // In this case though when using the global eventbus be mindful to always call `pluginManager.destroy()` in the
 *    main
 * // thread of execution scope to remove all plugins and the plugin manager event bindings!
 */class AbstractPluginManager{/**
    * Instantiates AbstractPluginManager
    *
    * @param {object}   [options] - Provides various configuration options:
    *
    * @param {Eventbus} [options.eventbus] - An instance of '@typhonjs-plugin/eventbus' used as the plugin
    * eventbus. If not provided a default eventbus is created.
    *
    * @param {string}   [options.eventPrepend='plugin'] - A customized name to prepend PluginManager events on the
    *                                                     eventbus.
    *
    * @param {boolean}  [options.throwNoMethod=false] - If true then when a method fails to be invoked by any plugin
    *                                                   an exception will be thrown.
    *
    * @param {boolean}  [options.throwNoPlugin=false] - If true then when no plugin is matched to be invoked an
    *                                                   exception will be thrown.
    *
    * @param {PluginSupportImpl}  [options.PluginSupport] - Optional class to pass in which extends the plugin manager. A default
    *                                              implementation is available: {@link PluginSupport}
    */constructor(options=(cov_2i6u9283d0().b[0][0]++,{})){cov_2i6u9283d0().f[0]++;cov_2i6u9283d0().s[0]++;if(typeof options!=='object'){cov_2i6u9283d0().b[1][0]++;cov_2i6u9283d0().s[1]++;throw new TypeError(`'options' is not an object.`);}else {cov_2i6u9283d0().b[1][1]++;}cov_2i6u9283d0().s[2]++;if((cov_2i6u9283d0().b[3][0]++,options.PluginSupport!==void 0)&&(cov_2i6u9283d0().b[3][1]++,typeof options.PluginSupport!=='function')){cov_2i6u9283d0().b[2][0]++;cov_2i6u9283d0().s[3]++;throw new TypeError(`'options.pluginSupport' is not a constructor function.`);}else {cov_2i6u9283d0().b[2][1]++;}/**
       * Stores the plugins by name with an associated PluginEntry.
       *
       * @type {Map<string, PluginEntry>}
       * @private
       */cov_2i6u9283d0().s[4]++;this._pluginMap=new Map();/**
       * Stores any associated eventbus.
       *
       * @type {Eventbus}
       * @protected
       */cov_2i6u9283d0().s[5]++;this._eventbus=null;/**
       * Stores any EventbusProxy instances created, so that they may be automatically destroyed.
       *
       * @type {EventbusProxy[]}
       * @private
       */cov_2i6u9283d0().s[6]++;this._eventbusProxies=[];/**
       * Provides an instance of PluginSupportImpl interface to extend the plugin manager through the eventbus API.
       *
       * @type {PluginSupportImpl}
       * @private
       */cov_2i6u9283d0().s[7]++;this._pluginSupport=options.PluginSupport!==void 0?(cov_2i6u9283d0().b[4][0]++,new options.PluginSupport(this)):(cov_2i6u9283d0().b[4][1]++,null);/**
       * Defines options for throwing exceptions. Turned off by default.
       *
       * @type {PluginManagerOptions}
       * @private
       */cov_2i6u9283d0().s[8]++;this._options={pluginsEnabled:true,noEventAdd:false,noEventDestroy:false,noEventOptions:true,noEventRemoval:false,throwNoMethod:false,throwNoPlugin:false};cov_2i6u9283d0().s[9]++;this.setEventbus({eventbus:options.eventbus!==void 0?(cov_2i6u9283d0().b[5][0]++,options.eventbus):(cov_2i6u9283d0().b[5][1]++,new Eventbus()),eventPrepend:options.eventPrepend});cov_2i6u9283d0().s[10]++;this.setOptions(options);}/**
    * Adds a plugin by the given configuration parameters. A plugin `name` is always required. If no other options
    * are provided then the `name` doubles as the NPM module / local file to load. The loading first checks for an
    * existing `instance` to use as the plugin. Then the `target` is chosen as the NPM module / local file to load.
    * By passing in `options` this will be stored and accessible to the plugin during all callbacks.
    *
    * @param {PluginConfig}   pluginConfig - Defines the plugin to load.
    *
    * @param {object}         [moduleData] - Optional object hash to associate with plugin.
    *
    * @returns {Promise<PluginData|undefined>} The PluginData that represents the plugin added.
    */async add(pluginConfig,moduleData){cov_2i6u9283d0().f[1]++;cov_2i6u9283d0().s[11]++;if(this.isDestroyed){cov_2i6u9283d0().b[6][0]++;cov_2i6u9283d0().s[12]++;throw new ReferenceError('This PluginManager instance has been destroyed.');}else {cov_2i6u9283d0().b[6][1]++;}cov_2i6u9283d0().s[13]++;if(typeof pluginConfig!=='object'){cov_2i6u9283d0().b[7][0]++;cov_2i6u9283d0().s[14]++;throw new TypeError(`'pluginConfig' is not an object.`);}else {cov_2i6u9283d0().b[7][1]++;}cov_2i6u9283d0().s[15]++;if(typeof pluginConfig.name!=='string'){cov_2i6u9283d0().b[8][0]++;cov_2i6u9283d0().s[16]++;throw new TypeError(`'pluginConfig.name' is not a string for entry: ${JSON.stringify(pluginConfig)}.`);}else {cov_2i6u9283d0().b[8][1]++;}cov_2i6u9283d0().s[17]++;if((cov_2i6u9283d0().b[10][0]++,typeof pluginConfig.target!=='undefined')&&(cov_2i6u9283d0().b[10][1]++,typeof pluginConfig.target!=='string')&&(cov_2i6u9283d0().b[10][2]++,!(pluginConfig.target instanceof URL))){cov_2i6u9283d0().b[9][0]++;cov_2i6u9283d0().s[18]++;throw new TypeError(`'pluginConfig.target' is not a string or URL for entry: ${JSON.stringify(pluginConfig)}.`);}else {cov_2i6u9283d0().b[9][1]++;}cov_2i6u9283d0().s[19]++;if((cov_2i6u9283d0().b[12][0]++,typeof pluginConfig.options!=='undefined')&&(cov_2i6u9283d0().b[12][1]++,typeof pluginConfig.options!=='object')){cov_2i6u9283d0().b[11][0]++;cov_2i6u9283d0().s[20]++;throw new TypeError(`'pluginConfig.options' is not an object for entry: ${JSON.stringify(pluginConfig)}.`);}else {cov_2i6u9283d0().b[11][1]++;}cov_2i6u9283d0().s[21]++;if((cov_2i6u9283d0().b[14][0]++,typeof moduleData!=='undefined')&&(cov_2i6u9283d0().b[14][1]++,typeof moduleData!=='object')){cov_2i6u9283d0().b[13][0]++;cov_2i6u9283d0().s[22]++;throw new TypeError(`'moduleData' is not an object for entry: ${JSON.stringify(pluginConfig)}.`);}else {cov_2i6u9283d0().b[13][1]++;}// If a plugin with the same name already exists post a warning and exit early.
cov_2i6u9283d0().s[23]++;if(this._pluginMap.has(pluginConfig.name)){cov_2i6u9283d0().b[15][0]++;cov_2i6u9283d0().s[24]++;throw new Error(`A plugin already exists with name: ${pluginConfig.name}.`);}else {cov_2i6u9283d0().b[15][1]++;}let instance,target,type;// Use an existing instance of a plugin; a static class is assumed when instance is a function.
cov_2i6u9283d0().s[25]++;if((cov_2i6u9283d0().b[17][0]++,typeof pluginConfig.instance==='object')||(cov_2i6u9283d0().b[17][1]++,typeof pluginConfig.instance==='function')){cov_2i6u9283d0().b[16][0]++;cov_2i6u9283d0().s[26]++;instance=pluginConfig.instance;cov_2i6u9283d0().s[27]++;target=pluginConfig.name;cov_2i6u9283d0().s[28]++;type='instance';}else {cov_2i6u9283d0().b[16][1]++;cov_2i6u9283d0().s[29]++;// If a target is defined use it instead of the name.
target=(cov_2i6u9283d0().b[18][0]++,pluginConfig.target)||(cov_2i6u9283d0().b[18][1]++,pluginConfig.name);// Defer to child class to load module in Node or the browser.
const result=(cov_2i6u9283d0().s[30]++,await this._loadModule(target));cov_2i6u9283d0().s[31]++;instance=result.instance;cov_2i6u9283d0().s[32]++;type=result.type;}// Convert any URL target a string.
cov_2i6u9283d0().s[33]++;if(target instanceof URL){cov_2i6u9283d0().b[19][0]++;cov_2i6u9283d0().s[34]++;target=target.toString();}else {cov_2i6u9283d0().b[19][1]++;}/**
       * Create an object hash with data describing the plugin, manager, and any extra module data.
       *
       * @type {PluginData}
       */const pluginData=(cov_2i6u9283d0().s[35]++,JSON.parse(JSON.stringify({manager:{eventPrepend:this._eventPrepend},module:(cov_2i6u9283d0().b[20][0]++,moduleData)||(cov_2i6u9283d0().b[20][1]++,{}),plugin:{name:pluginConfig.name,scopedName:`${this._eventPrepend}:${pluginConfig.name}`,target,targetEscaped:PluginEntry.escape(target),type,options:(cov_2i6u9283d0().b[21][0]++,pluginConfig.options)||(cov_2i6u9283d0().b[21][1]++,{})}})));cov_2i6u9283d0().s[36]++;deepFreeze(pluginData,['eventPrepend','scopedName']);const eventbusProxy=(cov_2i6u9283d0().s[37]++,(cov_2i6u9283d0().b[23][0]++,this._eventbus!==null)&&(cov_2i6u9283d0().b[23][1]++,typeof this._eventbus!=='undefined')?(cov_2i6u9283d0().b[22][0]++,new EventbusProxy(this._eventbus)):(cov_2i6u9283d0().b[22][1]++,void 0));const entry=(cov_2i6u9283d0().s[38]++,new PluginEntry(pluginConfig.name,pluginData,instance,eventbusProxy));cov_2i6u9283d0().s[39]++;this._pluginMap.set(pluginConfig.name,entry);// Invoke private module method which allows skipping optional error checking.
cov_2i6u9283d0().s[40]++;await s_INVOKE_ASYNC_EVENTS('onPluginLoad',{},{},pluginConfig.name,this._pluginMap,this._options,false);// Invoke `typhonjs:plugin:manager:plugin:added` allowing external code to react to plugin addition.
cov_2i6u9283d0().s[41]++;if(this._eventbus){cov_2i6u9283d0().b[24][0]++;cov_2i6u9283d0().s[42]++;await this._eventbus.triggerAsync(`typhonjs:plugin:manager:plugin:added`,pluginData);}else {cov_2i6u9283d0().b[24][1]++;}cov_2i6u9283d0().s[43]++;return pluginData;}/**
    * Initializes multiple plugins in a single call.
    *
    * @param {PluginConfig[]} pluginConfigs - An array of plugin config object hash entries.
    *
    * @param {object}         [moduleData] - Optional object hash to associate with all plugins.
    *
    * @returns {Promise<PluginData[]>} An array of PluginData objects of all loaded plugins.
    */async addAll(pluginConfigs=(cov_2i6u9283d0().b[25][0]++,[]),moduleData){cov_2i6u9283d0().f[2]++;cov_2i6u9283d0().s[44]++;if(this.isDestroyed){cov_2i6u9283d0().b[26][0]++;cov_2i6u9283d0().s[45]++;throw new ReferenceError('This PluginManager instance has been destroyed.');}else {cov_2i6u9283d0().b[26][1]++;}cov_2i6u9283d0().s[46]++;if(!Array.isArray(pluginConfigs)){cov_2i6u9283d0().b[27][0]++;cov_2i6u9283d0().s[47]++;throw new TypeError(`'pluginConfigs' is not an array.`);}else {cov_2i6u9283d0().b[27][1]++;}const pluginsData=(cov_2i6u9283d0().s[48]++,[]);cov_2i6u9283d0().s[49]++;for(const pluginConfig of pluginConfigs){const result=(cov_2i6u9283d0().s[50]++,await this.add(pluginConfig,moduleData));cov_2i6u9283d0().s[51]++;if(result){cov_2i6u9283d0().b[28][0]++;cov_2i6u9283d0().s[52]++;pluginsData.push(result);}else {cov_2i6u9283d0().b[28][1]++;}}cov_2i6u9283d0().s[53]++;return pluginsData;}/**
    * Provides the eventbus callback which may prevent addition if optional `noEventAdd` is enabled. This disables
    * the ability for plugins to be added via events preventing any external code adding plugins in this manner.
    *
    * @param {PluginConfig}   pluginConfig - Defines the plugin to load.
    *
    * @param {object}         [moduleData] - Optional object hash to associate with all plugins.
    *
    * @returns {Promise<PluginData|undefined>} - Operation success.
    * @private
    */async _addEventbus(pluginConfig,moduleData){cov_2i6u9283d0().f[3]++;cov_2i6u9283d0().s[54]++;if(this.isDestroyed){cov_2i6u9283d0().b[29][0]++;cov_2i6u9283d0().s[55]++;throw new ReferenceError('This PluginManager instance has been destroyed.');}else {cov_2i6u9283d0().b[29][1]++;}cov_2i6u9283d0().s[56]++;return !this._options.noEventAdd?(cov_2i6u9283d0().b[30][0]++,this.add(pluginConfig,moduleData)):(cov_2i6u9283d0().b[30][1]++,void 0);}/**
    * Provides the eventbus callback which may prevent addition if optional `noEventAdd` is enabled. This disables
    * the ability for plugins to be added via events preventing any external code adding plugins in this manner.
    *
    * @param {PluginConfig[]} pluginConfigs - An array of plugin config object hash entries.
    *
    * @param {object}         [moduleData] - Optional object hash to associate with all plugins.
    *
    * @returns {Promise<PluginData[]>} An array of PluginData objects of all loaded plugins.
    * @private
    */async _addAllEventbus(pluginConfigs,moduleData){cov_2i6u9283d0().f[4]++;cov_2i6u9283d0().s[57]++;if(this.isDestroyed){cov_2i6u9283d0().b[31][0]++;cov_2i6u9283d0().s[58]++;throw new ReferenceError('This PluginManager instance has been destroyed.');}else {cov_2i6u9283d0().b[31][1]++;}cov_2i6u9283d0().s[59]++;if(!this._options.noEventAdd){cov_2i6u9283d0().b[32][0]++;cov_2i6u9283d0().s[60]++;return this.addAll(pluginConfigs,moduleData);}else {cov_2i6u9283d0().b[32][1]++;}}/**
    * If an eventbus is assigned to this plugin manager then a new EventbusProxy wrapping this eventbus is returned.
    * It is added to `this._eventbusProxies` so †hat the instances are destroyed when the plugin manager is destroyed.
    *
    * @returns {EventbusProxy} A proxy for the currently set Eventbus.
    */createEventbusProxy(){cov_2i6u9283d0().f[5]++;cov_2i6u9283d0().s[61]++;if(!(this._eventbus instanceof Eventbus)){cov_2i6u9283d0().b[33][0]++;cov_2i6u9283d0().s[62]++;throw new ReferenceError('No eventbus assigned to plugin manager.');}else {cov_2i6u9283d0().b[33][1]++;}const eventbusProxy=(cov_2i6u9283d0().s[63]++,new EventbusProxy(this._eventbus));// Store proxy to make sure it is destroyed when the plugin manager is destroyed.
cov_2i6u9283d0().s[64]++;this._eventbusProxies.push(eventbusProxy);cov_2i6u9283d0().s[65]++;return eventbusProxy;}/**
    * Destroys all managed plugins after unloading them.
    */async destroy(){cov_2i6u9283d0().f[6]++;cov_2i6u9283d0().s[66]++;if(this.isDestroyed){cov_2i6u9283d0().b[34][0]++;cov_2i6u9283d0().s[67]++;throw new ReferenceError('This PluginManager instance has been destroyed.');}else {cov_2i6u9283d0().b[34][1]++;}// Remove all plugins; this will invoke onPluginUnload.
cov_2i6u9283d0().s[68]++;await this.removeAll();// Destroy any EventbusProxy instances created.
cov_2i6u9283d0().s[69]++;for(const eventbusProxy of this._eventbusProxies){cov_2i6u9283d0().s[70]++;eventbusProxy.destroy();}cov_2i6u9283d0().s[71]++;this._eventbusProxies=[];cov_2i6u9283d0().s[72]++;if((cov_2i6u9283d0().b[36][0]++,this._eventbus!==null)&&(cov_2i6u9283d0().b[36][1]++,typeof this._eventbus!=='undefined')){cov_2i6u9283d0().b[35][0]++;cov_2i6u9283d0().s[73]++;this._eventbus.off(`${this._eventPrepend}:async:add`,this._addEventbus,this);cov_2i6u9283d0().s[74]++;this._eventbus.off(`${this._eventPrepend}:async:add:all`,this._addAllEventbus,this);cov_2i6u9283d0().s[75]++;this._eventbus.off(`${this._eventPrepend}:async:destroy:manager`,this._destroyEventbus,this);cov_2i6u9283d0().s[76]++;this._eventbus.off(`${this._eventPrepend}:async:invoke`,this.invokeAsync,this);cov_2i6u9283d0().s[77]++;this._eventbus.off(`${this._eventPrepend}:async:invoke:event`,this.invokeAsyncEvent,this);cov_2i6u9283d0().s[78]++;this._eventbus.off(`${this._eventPrepend}:async:remove`,this._removeEventbus,this);cov_2i6u9283d0().s[79]++;this._eventbus.off(`${this._eventPrepend}:async:remove:all`,this._removeAllEventbus,this);cov_2i6u9283d0().s[80]++;this._eventbus.off(`${this._eventPrepend}:create:eventbus:proxy`,this.createEventbusProxy,this);cov_2i6u9283d0().s[81]++;this._eventbus.off(`${this._eventPrepend}:get:enabled`,this.getPluginsEnabled,this);cov_2i6u9283d0().s[82]++;this._eventbus.off(`${this._eventPrepend}:get:options`,this.getOptions,this);cov_2i6u9283d0().s[83]++;this._eventbus.off(`${this._eventPrepend}:has:plugin`,this.hasPlugin,this);cov_2i6u9283d0().s[84]++;this._eventbus.off(`${this._eventPrepend}:invoke`,this.invoke,this);cov_2i6u9283d0().s[85]++;this._eventbus.off(`${this._eventPrepend}:is:valid:config`,this.isValidConfig,this);cov_2i6u9283d0().s[86]++;this._eventbus.off(`${this._eventPrepend}:set:enabled`,this.setPluginsEnabled,this);cov_2i6u9283d0().s[87]++;this._eventbus.off(`${this._eventPrepend}:set:options`,this._setOptionsEventbus,this);cov_2i6u9283d0().s[88]++;this._eventbus.off(`${this._eventPrepend}:sync:invoke`,this.invokeSync,this);cov_2i6u9283d0().s[89]++;this._eventbus.off(`${this._eventPrepend}:sync:invoke:event`,this.invokeSyncEvent,this);}else {cov_2i6u9283d0().b[35][1]++;}cov_2i6u9283d0().s[90]++;if((cov_2i6u9283d0().b[38][0]++,this._pluginSupport!==null)&&(cov_2i6u9283d0().b[38][1]++,this._pluginSupport!==void 0)){cov_2i6u9283d0().b[37][0]++;cov_2i6u9283d0().s[91]++;await this._pluginSupport.destroy({eventbus:this._eventbus,eventPrepend:this._eventPrepend});cov_2i6u9283d0().s[92]++;this._pluginSupport=null;}else {cov_2i6u9283d0().b[37][1]++;}cov_2i6u9283d0().s[93]++;this._pluginMap=null;cov_2i6u9283d0().s[94]++;this._eventbus=null;}/**
    * Provides the eventbus callback which may prevent plugin manager destruction if optional `noEventDestroy` is
    * enabled. This disables the ability for the plugin manager to be destroyed via events preventing any external
    * code removing plugins in this manner.
    *
    * @private
    * @returns {Promise} The promise returned from `destroy` or immediate resolution.
    */async _destroyEventbus(){cov_2i6u9283d0().f[7]++;cov_2i6u9283d0().s[95]++;if(this.isDestroyed){cov_2i6u9283d0().b[39][0]++;cov_2i6u9283d0().s[96]++;throw new ReferenceError('This PluginManager instance has been destroyed.');}else {cov_2i6u9283d0().b[39][1]++;}cov_2i6u9283d0().s[97]++;if(!this._options.noEventDestroy){cov_2i6u9283d0().b[40][0]++;cov_2i6u9283d0().s[98]++;return this.destroy();}else {cov_2i6u9283d0().b[40][1]++;}}/**
    * Returns whether this plugin manager has been destroyed.
    *
    * @returns {boolean} Returns whether this plugin manager has been destroyed.
    */get isDestroyed(){cov_2i6u9283d0().f[8]++;cov_2i6u9283d0().s[99]++;return (cov_2i6u9283d0().b[41][0]++,this._pluginMap===null)||(cov_2i6u9283d0().b[41][1]++,this._pluginMap===void 0);}/**
    * Returns any associated eventbus.
    *
    * @returns {Eventbus|null} The associated eventbus.
    */getEventbus(){cov_2i6u9283d0().f[9]++;cov_2i6u9283d0().s[100]++;if(this.isDestroyed){cov_2i6u9283d0().b[42][0]++;cov_2i6u9283d0().s[101]++;throw new ReferenceError('This PluginManager instance has been destroyed.');}else {cov_2i6u9283d0().b[42][1]++;}cov_2i6u9283d0().s[102]++;return this._eventbus;}/**
    * Returns a copy of the plugin manager options.
    *
    * @returns {PluginManagerOptions} A copy of the plugin manager options.
    */getOptions(){cov_2i6u9283d0().f[10]++;cov_2i6u9283d0().s[103]++;if(this.isDestroyed){cov_2i6u9283d0().b[43][0]++;cov_2i6u9283d0().s[104]++;throw new ReferenceError('This PluginManager instance has been destroyed.');}else {cov_2i6u9283d0().b[43][1]++;}cov_2i6u9283d0().s[105]++;return JSON.parse(JSON.stringify(this._options));}/**
    * Returns the enabled state of a plugin, a list of plugins, or all plugins.
    *
    * @param {undefined|object}  [options] - Options object. If undefined all plugin enabled state is returned.
    *
    * @param {string|Iterable<string>}   [options.pluginNames] - Plugin name or iterable list of names to get state.
    *
    * @returns {boolean|Array<{pluginName: string, enabled: boolean}>} - Enabled state for single plugin or array of
    *                                                                    results for multiple plugins.
    */getPluginsEnabled({pluginNames=(cov_2i6u9283d0().b[45][0]++,[])}=(cov_2i6u9283d0().b[44][0]++,{})){cov_2i6u9283d0().f[11]++;cov_2i6u9283d0().s[106]++;if(this.isDestroyed){cov_2i6u9283d0().b[46][0]++;cov_2i6u9283d0().s[107]++;throw new ReferenceError('This PluginManager instance has been destroyed.');}else {cov_2i6u9283d0().b[46][1]++;}cov_2i6u9283d0().s[108]++;if((cov_2i6u9283d0().b[48][0]++,typeof pluginNames!=='string')&&(cov_2i6u9283d0().b[48][1]++,!isIterable(pluginNames))){cov_2i6u9283d0().b[47][0]++;cov_2i6u9283d0().s[109]++;throw new TypeError(`'pluginNames' is not a string or iterable.`);}else {cov_2i6u9283d0().b[47][1]++;}// Return a single boolean enabled result for a single plugin if found.
cov_2i6u9283d0().s[110]++;if(typeof pluginNames==='string'){cov_2i6u9283d0().b[49][0]++;const entry=(cov_2i6u9283d0().s[111]++,this._pluginMap.get(pluginNames));cov_2i6u9283d0().s[112]++;return (cov_2i6u9283d0().b[50][0]++,entry instanceof PluginEntry)&&(cov_2i6u9283d0().b[50][1]++,entry.enabled);}else {cov_2i6u9283d0().b[49][1]++;}const results=(cov_2i6u9283d0().s[113]++,[]);// If there are plugin names specified then limit returned results to just them.
cov_2i6u9283d0().s[114]++;if(pluginNames.length){cov_2i6u9283d0().b[51][0]++;cov_2i6u9283d0().s[115]++;for(const pluginName of pluginNames){const entry=(cov_2i6u9283d0().s[116]++,this._pluginMap.get(pluginName));const loaded=(cov_2i6u9283d0().s[117]++,entry instanceof PluginEntry);cov_2i6u9283d0().s[118]++;results.push({pluginName,enabled:(cov_2i6u9283d0().b[52][0]++,loaded)&&(cov_2i6u9283d0().b[52][1]++,entry.enabled),loaded});}}else// Return all plugins enabled state.
{cov_2i6u9283d0().b[51][1]++;cov_2i6u9283d0().s[119]++;for(const[pluginName,entry]of this._pluginMap.entries()){const loaded=(cov_2i6u9283d0().s[120]++,entry instanceof PluginEntry);cov_2i6u9283d0().s[121]++;results.push({pluginName,enabled:(cov_2i6u9283d0().b[53][0]++,loaded)&&(cov_2i6u9283d0().b[53][1]++,entry.enabled),loaded});}}cov_2i6u9283d0().s[122]++;return results;}/**
    * Returns true if there is a plugin loaded with the given plugin name.
    *
    * @param {string}   pluginName - Plugin name to test.
    *
    * @returns {boolean} - True if a plugin exists.
    */hasPlugin(pluginName){cov_2i6u9283d0().f[12]++;cov_2i6u9283d0().s[123]++;if(this.isDestroyed){cov_2i6u9283d0().b[54][0]++;cov_2i6u9283d0().s[124]++;throw new ReferenceError('This PluginManager instance has been destroyed.');}else {cov_2i6u9283d0().b[54][1]++;}cov_2i6u9283d0().s[125]++;if(typeof pluginName!=='string'){cov_2i6u9283d0().b[55][0]++;cov_2i6u9283d0().s[126]++;throw new TypeError(`'pluginName' is not a string.`);}else {cov_2i6u9283d0().b[55][1]++;}cov_2i6u9283d0().s[127]++;return this._pluginMap.has(pluginName);}/**
    * This dispatch method simply invokes any plugin targets for the given methodName..
    *
    * @param {string}            methodName - Method name to invoke.
    *
    * @param {*|Array<*>}        [args] - Optional arguments. An array will be spread as multiple arguments.
    *
    * @param {string|string[]}   [nameOrList] - An optional plugin name or array / iterable of plugin names to invoke.
    */invoke(methodName,args=(cov_2i6u9283d0().b[56][0]++,void 0),nameOrList=(cov_2i6u9283d0().b[57][0]++,void 0)){cov_2i6u9283d0().f[13]++;cov_2i6u9283d0().s[128]++;if(this.isDestroyed){cov_2i6u9283d0().b[58][0]++;cov_2i6u9283d0().s[129]++;throw new ReferenceError('This PluginManager instance has been destroyed.');}else {cov_2i6u9283d0().b[58][1]++;}cov_2i6u9283d0().s[130]++;if(typeof methodName!=='string'){cov_2i6u9283d0().b[59][0]++;cov_2i6u9283d0().s[131]++;throw new TypeError(`'methodName' is not a string.`);}else {cov_2i6u9283d0().b[59][1]++;}cov_2i6u9283d0().s[132]++;if(typeof nameOrList==='undefined'){cov_2i6u9283d0().b[60][0]++;cov_2i6u9283d0().s[133]++;nameOrList=this._pluginMap.keys();}else {cov_2i6u9283d0().b[60][1]++;}cov_2i6u9283d0().s[134]++;if((cov_2i6u9283d0().b[62][0]++,typeof nameOrList!=='string')&&(cov_2i6u9283d0().b[62][1]++,!Array.isArray(nameOrList))&&(cov_2i6u9283d0().b[62][2]++,typeof nameOrList[Symbol.iterator]!=='function')){cov_2i6u9283d0().b[61][0]++;cov_2i6u9283d0().s[135]++;throw new TypeError(`'nameOrList' is not a string, array, or iterator.`);}else {cov_2i6u9283d0().b[61][1]++;}// Track if a plugin method is invoked.
let hasMethod=(cov_2i6u9283d0().s[136]++,false);let hasPlugin=(cov_2i6u9283d0().s[137]++,false);// Early out if plugins are not enabled.
cov_2i6u9283d0().s[138]++;if(!this._options.pluginsEnabled){cov_2i6u9283d0().b[63][0]++;cov_2i6u9283d0().s[139]++;return;}else {cov_2i6u9283d0().b[63][1]++;}cov_2i6u9283d0().s[140]++;if(typeof nameOrList==='string'){cov_2i6u9283d0().b[64][0]++;const plugin=(cov_2i6u9283d0().s[141]++,this._pluginMap.get(nameOrList));cov_2i6u9283d0().s[142]++;if((cov_2i6u9283d0().b[66][0]++,plugin instanceof PluginEntry)&&(cov_2i6u9283d0().b[66][1]++,plugin.enabled)&&(cov_2i6u9283d0().b[66][2]++,plugin.instance)){cov_2i6u9283d0().b[65][0]++;cov_2i6u9283d0().s[143]++;hasPlugin=true;cov_2i6u9283d0().s[144]++;if(typeof plugin.instance[methodName]==='function'){cov_2i6u9283d0().b[67][0]++;cov_2i6u9283d0().s[145]++;Array.isArray(args)?(cov_2i6u9283d0().b[68][0]++,plugin.instance[methodName](...args)):(cov_2i6u9283d0().b[68][1]++,plugin.instance[methodName](args));cov_2i6u9283d0().s[146]++;hasMethod=true;}else {cov_2i6u9283d0().b[67][1]++;}}else {cov_2i6u9283d0().b[65][1]++;}}else {cov_2i6u9283d0().b[64][1]++;cov_2i6u9283d0().s[147]++;for(const name of nameOrList){const plugin=(cov_2i6u9283d0().s[148]++,this._pluginMap.get(name));cov_2i6u9283d0().s[149]++;if((cov_2i6u9283d0().b[70][0]++,plugin instanceof PluginEntry)&&(cov_2i6u9283d0().b[70][1]++,plugin.enabled)&&(cov_2i6u9283d0().b[70][2]++,plugin.instance)){cov_2i6u9283d0().b[69][0]++;cov_2i6u9283d0().s[150]++;hasPlugin=true;cov_2i6u9283d0().s[151]++;if(typeof plugin.instance[methodName]==='function'){cov_2i6u9283d0().b[71][0]++;cov_2i6u9283d0().s[152]++;Array.isArray(args)?(cov_2i6u9283d0().b[72][0]++,plugin.instance[methodName](...args)):(cov_2i6u9283d0().b[72][1]++,plugin.instance[methodName](args));cov_2i6u9283d0().s[153]++;hasMethod=true;}else {cov_2i6u9283d0().b[71][1]++;}}else {cov_2i6u9283d0().b[69][1]++;}}}cov_2i6u9283d0().s[154]++;if((cov_2i6u9283d0().b[74][0]++,this._options.throwNoPlugin)&&(cov_2i6u9283d0().b[74][1]++,!hasPlugin)){cov_2i6u9283d0().b[73][0]++;cov_2i6u9283d0().s[155]++;throw new Error(`PluginManager failed to find any target plugins.`);}else {cov_2i6u9283d0().b[73][1]++;}cov_2i6u9283d0().s[156]++;if((cov_2i6u9283d0().b[76][0]++,this._options.throwNoMethod)&&(cov_2i6u9283d0().b[76][1]++,!hasMethod)){cov_2i6u9283d0().b[75][0]++;cov_2i6u9283d0().s[157]++;throw new Error(`PluginManager failed to invoke '${methodName}'.`);}else {cov_2i6u9283d0().b[75][1]++;}}/**
    * This dispatch method uses ES6 Promises and adds any returned results to an array which is added to a Promise.all
    * construction which passes back a Promise which waits until all Promises complete. Any target invoked may return a
    * Promise or any result. This is very useful to use for any asynchronous operations.
    *
    * @param {string}            methodName - Method name to invoke.
    *
    * @param {*|Array<*>}        [args] - Optional arguments. An array will be spread as multiple arguments.
    *
    * @param {string|string[]}   [nameOrList] - An optional plugin name or array / iterable of plugin names to invoke.
    *
    * @returns {Promise<*|Array<*>>} A Promise with any returned results.
    */invokeAsync(methodName,args=(cov_2i6u9283d0().b[77][0]++,void 0),nameOrList=(cov_2i6u9283d0().b[78][0]++,void 0)){cov_2i6u9283d0().f[14]++;cov_2i6u9283d0().s[158]++;if(this.isDestroyed){cov_2i6u9283d0().b[79][0]++;cov_2i6u9283d0().s[159]++;throw new ReferenceError('This PluginManager instance has been destroyed.');}else {cov_2i6u9283d0().b[79][1]++;}cov_2i6u9283d0().s[160]++;if(typeof methodName!=='string'){cov_2i6u9283d0().b[80][0]++;cov_2i6u9283d0().s[161]++;throw new TypeError(`'methodName' is not a string.`);}else {cov_2i6u9283d0().b[80][1]++;}cov_2i6u9283d0().s[162]++;if(typeof nameOrList==='undefined'){cov_2i6u9283d0().b[81][0]++;cov_2i6u9283d0().s[163]++;nameOrList=this._pluginMap.keys();}else {cov_2i6u9283d0().b[81][1]++;}cov_2i6u9283d0().s[164]++;if((cov_2i6u9283d0().b[83][0]++,typeof nameOrList!=='string')&&(cov_2i6u9283d0().b[83][1]++,!Array.isArray(nameOrList))&&(cov_2i6u9283d0().b[83][2]++,typeof nameOrList[Symbol.iterator]!=='function')){cov_2i6u9283d0().b[82][0]++;cov_2i6u9283d0().s[165]++;throw new TypeError(`'nameOrList' is not a string, array, or iterator.`);}else {cov_2i6u9283d0().b[82][1]++;}// Track if a plugin method is invoked.
let hasMethod=(cov_2i6u9283d0().s[166]++,false);let hasPlugin=(cov_2i6u9283d0().s[167]++,false);// Capture results.
let result=(cov_2i6u9283d0().s[168]++,void 0);const results=(cov_2i6u9283d0().s[169]++,[]);// Early out if plugins are not enabled.
cov_2i6u9283d0().s[170]++;if(!this._options.pluginsEnabled){cov_2i6u9283d0().b[84][0]++;cov_2i6u9283d0().s[171]++;return result;}else {cov_2i6u9283d0().b[84][1]++;}cov_2i6u9283d0().s[172]++;try{cov_2i6u9283d0().s[173]++;if(typeof nameOrList==='string'){cov_2i6u9283d0().b[85][0]++;const plugin=(cov_2i6u9283d0().s[174]++,this._pluginMap.get(nameOrList));cov_2i6u9283d0().s[175]++;if((cov_2i6u9283d0().b[87][0]++,plugin instanceof PluginEntry)&&(cov_2i6u9283d0().b[87][1]++,plugin.enabled)&&(cov_2i6u9283d0().b[87][2]++,plugin.instance)){cov_2i6u9283d0().b[86][0]++;cov_2i6u9283d0().s[176]++;hasPlugin=true;cov_2i6u9283d0().s[177]++;if(typeof plugin.instance[methodName]==='function'){cov_2i6u9283d0().b[88][0]++;cov_2i6u9283d0().s[178]++;result=Array.isArray(args)?(cov_2i6u9283d0().b[89][0]++,plugin.instance[methodName](...args)):(cov_2i6u9283d0().b[89][1]++,plugin.instance[methodName](args));// If we received a valid result return immediately.
cov_2i6u9283d0().s[179]++;if((cov_2i6u9283d0().b[91][0]++,result!==null)||(cov_2i6u9283d0().b[91][1]++,typeof result!=='undefined')){cov_2i6u9283d0().b[90][0]++;cov_2i6u9283d0().s[180]++;results.push(result);}else {cov_2i6u9283d0().b[90][1]++;}cov_2i6u9283d0().s[181]++;hasMethod=true;}else {cov_2i6u9283d0().b[88][1]++;}}else {cov_2i6u9283d0().b[86][1]++;}}else {cov_2i6u9283d0().b[85][1]++;cov_2i6u9283d0().s[182]++;for(const name of nameOrList){const plugin=(cov_2i6u9283d0().s[183]++,this._pluginMap.get(name));cov_2i6u9283d0().s[184]++;if((cov_2i6u9283d0().b[93][0]++,plugin instanceof PluginEntry)&&(cov_2i6u9283d0().b[93][1]++,plugin.enabled)&&(cov_2i6u9283d0().b[93][2]++,plugin.instance)){cov_2i6u9283d0().b[92][0]++;cov_2i6u9283d0().s[185]++;hasPlugin=true;cov_2i6u9283d0().s[186]++;if(typeof plugin.instance[methodName]==='function'){cov_2i6u9283d0().b[94][0]++;cov_2i6u9283d0().s[187]++;result=Array.isArray(args)?(cov_2i6u9283d0().b[95][0]++,plugin.instance[methodName](...args)):(cov_2i6u9283d0().b[95][1]++,plugin.instance[methodName](args));// If we received a valid result return immediately.
cov_2i6u9283d0().s[188]++;if((cov_2i6u9283d0().b[97][0]++,result!==null)||(cov_2i6u9283d0().b[97][1]++,typeof result!=='undefined')){cov_2i6u9283d0().b[96][0]++;cov_2i6u9283d0().s[189]++;results.push(result);}else {cov_2i6u9283d0().b[96][1]++;}cov_2i6u9283d0().s[190]++;hasMethod=true;}else {cov_2i6u9283d0().b[94][1]++;}}else {cov_2i6u9283d0().b[92][1]++;}}}cov_2i6u9283d0().s[191]++;if((cov_2i6u9283d0().b[99][0]++,this._options.throwNoPlugin)&&(cov_2i6u9283d0().b[99][1]++,!hasPlugin)){cov_2i6u9283d0().b[98][0]++;cov_2i6u9283d0().s[192]++;return Promise.reject(new Error(`PluginManager failed to find any target plugins.`));}else {cov_2i6u9283d0().b[98][1]++;}cov_2i6u9283d0().s[193]++;if((cov_2i6u9283d0().b[101][0]++,this._options.throwNoMethod)&&(cov_2i6u9283d0().b[101][1]++,!hasMethod)){cov_2i6u9283d0().b[100][0]++;cov_2i6u9283d0().s[194]++;return Promise.reject(new Error(`PluginManager failed to invoke '${methodName}'.`));}else {cov_2i6u9283d0().b[100][1]++;}}catch(error){cov_2i6u9283d0().s[195]++;return Promise.reject(error);}// If there are multiple results then use Promise.all otherwise Promise.resolve.
cov_2i6u9283d0().s[196]++;return results.length>1?(cov_2i6u9283d0().b[102][0]++,Promise.all(results)):(cov_2i6u9283d0().b[102][1]++,Promise.resolve(result));}/**
    * This dispatch method synchronously passes to and returns from any invoked targets a PluginEvent.
    *
    * @param {string}            methodName - Method name to invoke.
    *
    * @param {object}            [copyProps={}] - plugin event object.
    *
    * @param {object}            [passthruProps={}] - if true, event has plugin option.
    *
    * @param {string|string[]}   [nameOrList] - An optional plugin name or array / iterable of plugin names to invoke.
    *
    * @returns {Promise<PluginEvent>} A PluginEvent representing the invocation results.
    */invokeAsyncEvent(methodName,copyProps=(cov_2i6u9283d0().b[103][0]++,{}),passthruProps=(cov_2i6u9283d0().b[104][0]++,{}),nameOrList=(cov_2i6u9283d0().b[105][0]++,void 0)){cov_2i6u9283d0().f[15]++;cov_2i6u9283d0().s[197]++;if(this.isDestroyed){cov_2i6u9283d0().b[106][0]++;cov_2i6u9283d0().s[198]++;throw new ReferenceError('This PluginManager instance has been destroyed.');}else {cov_2i6u9283d0().b[106][1]++;}cov_2i6u9283d0().s[199]++;if(typeof nameOrList==='undefined'){cov_2i6u9283d0().b[107][0]++;cov_2i6u9283d0().s[200]++;nameOrList=this._pluginMap.keys();}else {cov_2i6u9283d0().b[107][1]++;}// Early out if plugins are not enabled.
cov_2i6u9283d0().s[201]++;if(!this._options.pluginsEnabled){cov_2i6u9283d0().b[108][0]++;cov_2i6u9283d0().s[202]++;return Promise.resolve();}else {cov_2i6u9283d0().b[108][1]++;}// Invokes the private internal async events method with optional error checking enabled.
cov_2i6u9283d0().s[203]++;return s_INVOKE_ASYNC_EVENTS(methodName,copyProps,passthruProps,nameOrList,this._pluginMap,this._options);}/**
    * This dispatch method synchronously passes back a single value or an array with all results returned by any
    * invoked targets.
    *
    * @param {string}            methodName - Method name to invoke.
    *
    * @param {*|Array<*>}        [args] - Optional arguments. An array will be spread as multiple arguments.
    *
    * @param {string|string[]}   [nameOrList] - An optional plugin name or array / iterable of plugin names to invoke.
    *
    * @returns {*|Array<*>} An array of results.
    */invokeSync(methodName,args=(cov_2i6u9283d0().b[109][0]++,void 0),nameOrList=(cov_2i6u9283d0().b[110][0]++,void 0)){cov_2i6u9283d0().f[16]++;cov_2i6u9283d0().s[204]++;if(this.isDestroyed){cov_2i6u9283d0().b[111][0]++;cov_2i6u9283d0().s[205]++;throw new ReferenceError('This PluginManager instance has been destroyed.');}else {cov_2i6u9283d0().b[111][1]++;}cov_2i6u9283d0().s[206]++;if(typeof methodName!=='string'){cov_2i6u9283d0().b[112][0]++;cov_2i6u9283d0().s[207]++;throw new TypeError(`'methodName' is not a string.`);}else {cov_2i6u9283d0().b[112][1]++;}cov_2i6u9283d0().s[208]++;if(typeof nameOrList==='undefined'){cov_2i6u9283d0().b[113][0]++;cov_2i6u9283d0().s[209]++;nameOrList=this._pluginMap.keys();}else {cov_2i6u9283d0().b[113][1]++;}cov_2i6u9283d0().s[210]++;if((cov_2i6u9283d0().b[115][0]++,typeof nameOrList!=='string')&&(cov_2i6u9283d0().b[115][1]++,!Array.isArray(nameOrList))&&(cov_2i6u9283d0().b[115][2]++,typeof nameOrList[Symbol.iterator]!=='function')){cov_2i6u9283d0().b[114][0]++;cov_2i6u9283d0().s[211]++;throw new TypeError(`'nameOrList' is not a string, array, or iterator.`);}else {cov_2i6u9283d0().b[114][1]++;}// Track if a plugin method is invoked.
let hasMethod=(cov_2i6u9283d0().s[212]++,false);let hasPlugin=(cov_2i6u9283d0().s[213]++,false);// Capture results.
let result=(cov_2i6u9283d0().s[214]++,void 0);const results=(cov_2i6u9283d0().s[215]++,[]);// Early out if plugins are not enabled.
cov_2i6u9283d0().s[216]++;if(!this._options.pluginsEnabled){cov_2i6u9283d0().b[116][0]++;cov_2i6u9283d0().s[217]++;return result;}else {cov_2i6u9283d0().b[116][1]++;}cov_2i6u9283d0().s[218]++;if(typeof nameOrList==='string'){cov_2i6u9283d0().b[117][0]++;const plugin=(cov_2i6u9283d0().s[219]++,this._pluginMap.get(nameOrList));cov_2i6u9283d0().s[220]++;if((cov_2i6u9283d0().b[119][0]++,plugin instanceof PluginEntry)&&(cov_2i6u9283d0().b[119][1]++,plugin.enabled)&&(cov_2i6u9283d0().b[119][2]++,plugin.instance)){cov_2i6u9283d0().b[118][0]++;cov_2i6u9283d0().s[221]++;hasPlugin=true;cov_2i6u9283d0().s[222]++;if(typeof plugin.instance[methodName]==='function'){cov_2i6u9283d0().b[120][0]++;cov_2i6u9283d0().s[223]++;result=Array.isArray(args)?(cov_2i6u9283d0().b[121][0]++,plugin.instance[methodName](...args)):(cov_2i6u9283d0().b[121][1]++,plugin.instance[methodName](args));// If we received a valid result return immediately.
cov_2i6u9283d0().s[224]++;if((cov_2i6u9283d0().b[123][0]++,result!==null)||(cov_2i6u9283d0().b[123][1]++,typeof result!=='undefined')){cov_2i6u9283d0().b[122][0]++;cov_2i6u9283d0().s[225]++;results.push(result);}else {cov_2i6u9283d0().b[122][1]++;}cov_2i6u9283d0().s[226]++;hasMethod=true;}else {cov_2i6u9283d0().b[120][1]++;}}else {cov_2i6u9283d0().b[118][1]++;}}else {cov_2i6u9283d0().b[117][1]++;cov_2i6u9283d0().s[227]++;for(const name of nameOrList){const plugin=(cov_2i6u9283d0().s[228]++,this._pluginMap.get(name));cov_2i6u9283d0().s[229]++;if((cov_2i6u9283d0().b[125][0]++,plugin instanceof PluginEntry)&&(cov_2i6u9283d0().b[125][1]++,plugin.enabled)&&(cov_2i6u9283d0().b[125][2]++,plugin.instance)){cov_2i6u9283d0().b[124][0]++;cov_2i6u9283d0().s[230]++;hasPlugin=true;cov_2i6u9283d0().s[231]++;if(typeof plugin.instance[methodName]==='function'){cov_2i6u9283d0().b[126][0]++;cov_2i6u9283d0().s[232]++;result=Array.isArray(args)?(cov_2i6u9283d0().b[127][0]++,plugin.instance[methodName](...args)):(cov_2i6u9283d0().b[127][1]++,plugin.instance[methodName](args));// If we received a valid result return immediately.
cov_2i6u9283d0().s[233]++;if((cov_2i6u9283d0().b[129][0]++,result!==null)||(cov_2i6u9283d0().b[129][1]++,typeof result!=='undefined')){cov_2i6u9283d0().b[128][0]++;cov_2i6u9283d0().s[234]++;results.push(result);}else {cov_2i6u9283d0().b[128][1]++;}cov_2i6u9283d0().s[235]++;hasMethod=true;}else {cov_2i6u9283d0().b[126][1]++;}}else {cov_2i6u9283d0().b[124][1]++;}}}cov_2i6u9283d0().s[236]++;if((cov_2i6u9283d0().b[131][0]++,this._options.throwNoPlugin)&&(cov_2i6u9283d0().b[131][1]++,!hasPlugin)){cov_2i6u9283d0().b[130][0]++;cov_2i6u9283d0().s[237]++;throw new Error(`PluginManager failed to find any target plugins.`);}else {cov_2i6u9283d0().b[130][1]++;}cov_2i6u9283d0().s[238]++;if((cov_2i6u9283d0().b[133][0]++,this._options.throwNoMethod)&&(cov_2i6u9283d0().b[133][1]++,!hasMethod)){cov_2i6u9283d0().b[132][0]++;cov_2i6u9283d0().s[239]++;throw new Error(`PluginManager failed to invoke '${methodName}'.`);}else {cov_2i6u9283d0().b[132][1]++;}// Return the results array if there are more than one or just a single result.
cov_2i6u9283d0().s[240]++;return results.length>1?(cov_2i6u9283d0().b[134][0]++,results):(cov_2i6u9283d0().b[134][1]++,result);}/**
    * This dispatch method synchronously passes to and returns from any invoked targets a PluginEvent.
    *
    * @param {string}            methodName - Method name to invoke.
    *
    * @param {object}            [copyProps={}] - plugin event object.
    *
    * @param {object}            [passthruProps={}] - if true, event has plugin option.
    *
    * @param {string|string[]}   [nameOrList] - An optional plugin name or array / iterable of plugin names to invoke.
    *
    * @returns {PluginEvent|undefined} A plugin event with invocation results.
    */invokeSyncEvent(methodName,copyProps=(cov_2i6u9283d0().b[135][0]++,{}),passthruProps=(cov_2i6u9283d0().b[136][0]++,{}),nameOrList=(cov_2i6u9283d0().b[137][0]++,void 0)){cov_2i6u9283d0().f[17]++;cov_2i6u9283d0().s[241]++;if(this.isDestroyed){cov_2i6u9283d0().b[138][0]++;cov_2i6u9283d0().s[242]++;throw new ReferenceError('This PluginManager instance has been destroyed.');}else {cov_2i6u9283d0().b[138][1]++;}cov_2i6u9283d0().s[243]++;if(typeof nameOrList==='undefined'){cov_2i6u9283d0().b[139][0]++;cov_2i6u9283d0().s[244]++;nameOrList=this._pluginMap.keys();}else {cov_2i6u9283d0().b[139][1]++;}// Early out if plugins are not enabled.
cov_2i6u9283d0().s[245]++;if(!this._options.pluginsEnabled){cov_2i6u9283d0().b[140][0]++;cov_2i6u9283d0().s[246]++;return void 0;}else {cov_2i6u9283d0().b[140][1]++;}// Invokes the private internal sync events method with optional error checking enabled.
cov_2i6u9283d0().s[247]++;return s_INVOKE_SYNC_EVENTS(methodName,copyProps,passthruProps,nameOrList,this._pluginMap,this._options);}/**
    * Performs validation of a PluginConfig.
    *
    * @param {PluginConfig}   pluginConfig - A PluginConfig to validate.
    *
    * @returns {boolean} True if the given PluginConfig is valid.
    */isValidConfig(pluginConfig){cov_2i6u9283d0().f[18]++;cov_2i6u9283d0().s[248]++;return isValidConfig(pluginConfig);}/**
    * Child implementations provide platform specific module loading by overriding this method.
    *
    * @param {string|URL}   moduleOrPath - A module name, file path, or URL.
    *
    * @returns {Promise<*>} Loaded module.
    * @private
    */async _loadModule(moduleOrPath)// eslint-disable-line no-unused-vars
{cov_2i6u9283d0().f[19]++;}/**
    * Removes a plugin by name after unloading it and clearing any event bindings automatically.
    *
    * @param {string}   pluginName - The plugin name to remove.
    *
    * @returns {Promise<boolean>} - Operation success.
    */async remove(pluginName){cov_2i6u9283d0().f[20]++;cov_2i6u9283d0().s[249]++;if(this.isDestroyed){cov_2i6u9283d0().b[141][0]++;cov_2i6u9283d0().s[250]++;throw new ReferenceError('This PluginManager instance has been destroyed.');}else {cov_2i6u9283d0().b[141][1]++;}const entry=(cov_2i6u9283d0().s[251]++,this._pluginMap.get(pluginName));cov_2i6u9283d0().s[252]++;if(entry instanceof PluginEntry){cov_2i6u9283d0().b[142][0]++;cov_2i6u9283d0().s[253]++;// Invoke private module method which allows skipping optional error checking.
await s_INVOKE_ASYNC_EVENTS('onPluginUnload',{},{},pluginName,this._pluginMap,this._options,false);// Automatically remove any potential reference to a stored event proxy instance.
cov_2i6u9283d0().s[254]++;try{cov_2i6u9283d0().s[255]++;entry.instance._eventbus=void 0;}catch(err){/* nop */}cov_2i6u9283d0().s[256]++;if(entry.eventbusProxy instanceof EventbusProxy){cov_2i6u9283d0().b[143][0]++;cov_2i6u9283d0().s[257]++;entry.eventbusProxy.destroy();}else {cov_2i6u9283d0().b[143][1]++;}cov_2i6u9283d0().s[258]++;this._pluginMap.delete(pluginName);// Invoke `typhonjs:plugin:manager:plugin:removed` allowing external code to react to plugin removed.
cov_2i6u9283d0().s[259]++;if(this._eventbus){cov_2i6u9283d0().b[144][0]++;cov_2i6u9283d0().s[260]++;await this._eventbus.triggerAsync(`typhonjs:plugin:manager:plugin:removed`,JSON.parse(JSON.stringify(entry.data)));}else {cov_2i6u9283d0().b[144][1]++;}cov_2i6u9283d0().s[261]++;return true;}else {cov_2i6u9283d0().b[142][1]++;}cov_2i6u9283d0().s[262]++;return false;}/**
    * Removes all plugins after unloading them and clearing any event bindings automatically.
    *
    * @returns {Promise.<Array<{plugin: string, result: boolean}>>} A list of plugin names and removal success state.
    */async removeAll(){cov_2i6u9283d0().f[21]++;cov_2i6u9283d0().s[263]++;if(this.isDestroyed){cov_2i6u9283d0().b[145][0]++;cov_2i6u9283d0().s[264]++;throw new ReferenceError('This PluginManager instance has been destroyed.');}else {cov_2i6u9283d0().b[145][1]++;}const values=(cov_2i6u9283d0().s[265]++,[]);cov_2i6u9283d0().s[266]++;for(const pluginName of this._pluginMap.keys()){const result=(cov_2i6u9283d0().s[267]++,await this.remove(pluginName));cov_2i6u9283d0().s[268]++;values.push({plugin:pluginName,result});}cov_2i6u9283d0().s[269]++;this._pluginMap.clear();cov_2i6u9283d0().s[270]++;return values;}/**
    * Provides the eventbus callback which may prevent removal if optional `noEventRemoval` is enabled. This disables
    * the ability for plugins to be removed via events preventing any external code removing plugins in this manner.
    *
    * @param {string}   pluginName - The plugin name to remove.
    *
    * @returns {Promise<boolean>} - Operation success.
    * @private
    */async _removeEventbus(pluginName){cov_2i6u9283d0().f[22]++;cov_2i6u9283d0().s[271]++;if(this.isDestroyed){cov_2i6u9283d0().b[146][0]++;cov_2i6u9283d0().s[272]++;throw new ReferenceError('This PluginManager instance has been destroyed.');}else {cov_2i6u9283d0().b[146][1]++;}cov_2i6u9283d0().s[273]++;return !this._options.noEventRemoval?(cov_2i6u9283d0().b[147][0]++,this.remove(pluginName)):(cov_2i6u9283d0().b[147][1]++,false);}/**
    * Provides the eventbus callback which may prevent removal if optional `noEventRemoval` is enabled. This disables
    * the ability for plugins to be removed via events preventing any external code removing plugins in this manner.
    *
    * @returns {Promise.<Array<{plugin: string, result: boolean}>>} A list of plugin names and removal success state.
    * @private
    */async _removeAllEventbus(){cov_2i6u9283d0().f[23]++;cov_2i6u9283d0().s[274]++;if(this.isDestroyed){cov_2i6u9283d0().b[148][0]++;cov_2i6u9283d0().s[275]++;throw new ReferenceError('This PluginManager instance has been destroyed.');}else {cov_2i6u9283d0().b[148][1]++;}cov_2i6u9283d0().s[276]++;if(!this._options.noEventRemoval){cov_2i6u9283d0().b[149][0]++;cov_2i6u9283d0().s[277]++;return this.removeAll();}else {cov_2i6u9283d0().b[149][1]++;}}/**
    * Sets the eventbus associated with this plugin manager. If any previous eventbus was associated all plugin manager
    * events will be removed then added to the new eventbus. If there are any existing plugins being managed their
    * events will be removed from the old eventbus and then `onPluginLoad` will be called with the new eventbus.
    *
    * @param {object}     options - An options object.
    *
    * @param {Eventbus}   options.eventbus - The new eventbus to associate.
    *
    * @param {string}     [options.eventPrepend='plugins'] - An optional string to prepend to all of the event
    *                                                        binding targets.
    *
    * @returns {Promise<AbstractPluginManager>} This plugin manager.
    */async setEventbus({eventbus,eventPrepend=(cov_2i6u9283d0().b[151][0]++,'plugins')}=(cov_2i6u9283d0().b[150][0]++,{})){cov_2i6u9283d0().f[24]++;cov_2i6u9283d0().s[278]++;if(this.isDestroyed){cov_2i6u9283d0().b[152][0]++;cov_2i6u9283d0().s[279]++;throw new ReferenceError('This PluginManager instance has been destroyed.');}else {cov_2i6u9283d0().b[152][1]++;}cov_2i6u9283d0().s[280]++;if(!(eventbus instanceof Eventbus)){cov_2i6u9283d0().b[153][0]++;cov_2i6u9283d0().s[281]++;throw new TypeError(`'eventbus' is not an 'Eventbus'.`);}else {cov_2i6u9283d0().b[153][1]++;}cov_2i6u9283d0().s[282]++;if(typeof eventPrepend!=='string'){cov_2i6u9283d0().b[154][0]++;cov_2i6u9283d0().s[283]++;throw new TypeError(`'eventPrepend' is not a 'string'.`);}else {cov_2i6u9283d0().b[154][1]++;}// Early escape if the eventbus is the same as the current eventbus.
cov_2i6u9283d0().s[284]++;if(eventbus===this._eventbus){cov_2i6u9283d0().b[155][0]++;cov_2i6u9283d0().s[285]++;return this;}else {cov_2i6u9283d0().b[155][1]++;}const oldPrepend=(cov_2i6u9283d0().s[286]++,this._eventPrepend);/**
       * Stores the prepend string for eventbus registration.
       *
       * @type {string}
       * @private
       */cov_2i6u9283d0().s[287]++;this._eventPrepend=eventPrepend;// Unload and reload any existing plugins from the old eventbus to the target eventbus.
cov_2i6u9283d0().s[288]++;if(this._pluginMap.size>0){cov_2i6u9283d0().b[156][0]++;cov_2i6u9283d0().s[289]++;// Invoke private module method which allows skipping optional error checking.
await s_INVOKE_ASYNC_EVENTS('onPluginUnload',{},{},this._pluginMap.keys(),this._pluginMap,this._options,false);cov_2i6u9283d0().s[290]++;for(const entry of this._pluginMap.values()){cov_2i6u9283d0().s[291]++;// Automatically remove any potential reference to a stored event proxy instance.
try{cov_2i6u9283d0().s[292]++;entry.instance._eventbus=void 0;}catch(err){/* nop */}cov_2i6u9283d0().s[293]++;entry.data.manager.eventPrepend=eventPrepend;cov_2i6u9283d0().s[294]++;entry.data.plugin.scopedName=`${eventPrepend}:${entry.name}`;cov_2i6u9283d0().s[295]++;if(entry.eventbusProxy instanceof EventbusProxy){cov_2i6u9283d0().b[157][0]++;cov_2i6u9283d0().s[296]++;entry.eventbusProxy.destroy();}else {cov_2i6u9283d0().b[157][1]++;}cov_2i6u9283d0().s[297]++;entry.eventbusProxy=new EventbusProxy(eventbus);}// Invoke private module method which allows skipping optional error checking.
cov_2i6u9283d0().s[298]++;await s_INVOKE_ASYNC_EVENTS('onPluginLoad',{},{},this._pluginMap.keys(),this._pluginMap,this._options,false);cov_2i6u9283d0().s[299]++;for(const entry of this._pluginMap.values()){cov_2i6u9283d0().s[300]++;// Invoke `typhonjs:plugin:manager:eventbus:changed` allowing external code to react to plugin
// changing eventbus.
if(this._eventbus){cov_2i6u9283d0().b[158][0]++;cov_2i6u9283d0().s[301]++;this._eventbus.trigger(`typhonjs:plugin:manager:eventbus:changed`,Object.assign({oldEventbus:this._eventbus,oldManagerEventPrepend:oldPrepend,oldScopedName:`${oldPrepend}:${entry.name}`,newEventbus:eventbus,newManagerEventPrepend:eventPrepend,newScopedName:`${eventPrepend}:${entry.name}`},JSON.parse(JSON.stringify(entry.data))));}else {cov_2i6u9283d0().b[158][1]++;}}}else {cov_2i6u9283d0().b[156][1]++;}cov_2i6u9283d0().s[302]++;if(this._eventbus!==null){cov_2i6u9283d0().b[159][0]++;cov_2i6u9283d0().s[303]++;this._eventbus.off(`${oldPrepend}:async:add`,this._addEventbus,this);cov_2i6u9283d0().s[304]++;this._eventbus.off(`${oldPrepend}:async:add:all`,this._addAllEventbus,this);cov_2i6u9283d0().s[305]++;this._eventbus.off(`${oldPrepend}:async:destroy:manager`,this._destroyEventbus,this);cov_2i6u9283d0().s[306]++;this._eventbus.off(`${oldPrepend}:async:invoke`,this.invokeAsync,this);cov_2i6u9283d0().s[307]++;this._eventbus.off(`${oldPrepend}:async:invoke:event`,this.invokeAsyncEvent,this);cov_2i6u9283d0().s[308]++;this._eventbus.off(`${oldPrepend}:async:remove`,this._removeEventbus,this);cov_2i6u9283d0().s[309]++;this._eventbus.off(`${oldPrepend}:async:remove:all`,this._removeAllEventbus,this);cov_2i6u9283d0().s[310]++;this._eventbus.off(`${oldPrepend}:create:eventbus:proxy`,this.createEventbusProxy,this);cov_2i6u9283d0().s[311]++;this._eventbus.off(`${oldPrepend}:get:enabled`,this.getPluginsEnabled,this);cov_2i6u9283d0().s[312]++;this._eventbus.off(`${oldPrepend}:get:options`,this.getOptions,this);cov_2i6u9283d0().s[313]++;this._eventbus.off(`${oldPrepend}:has:plugin`,this.hasPlugin,this);cov_2i6u9283d0().s[314]++;this._eventbus.off(`${oldPrepend}:invoke`,this.invoke,this);cov_2i6u9283d0().s[315]++;this._eventbus.off(`${oldPrepend}:is:valid:config`,this.isValidConfig,this);cov_2i6u9283d0().s[316]++;this._eventbus.off(`${oldPrepend}:set:enabled`,this.setPluginsEnabled,this);cov_2i6u9283d0().s[317]++;this._eventbus.off(`${oldPrepend}:set:options`,this._setOptionsEventbus,this);cov_2i6u9283d0().s[318]++;this._eventbus.off(`${oldPrepend}:sync:invoke`,this.invokeSync,this);cov_2i6u9283d0().s[319]++;this._eventbus.off(`${oldPrepend}:sync:invoke:event`,this.invokeSyncEvent,this);// Invoke `typhonjs:plugin:manager:eventbus:removed` allowing external code to react to eventbus removal.
cov_2i6u9283d0().s[320]++;this._eventbus.trigger(`typhonjs:plugin:manager:eventbus:removed`,{oldEventbus:this._eventbus,oldEventPrepend:oldPrepend,newEventbus:eventbus,newEventPrepend:eventPrepend});}else {cov_2i6u9283d0().b[159][1]++;}cov_2i6u9283d0().s[321]++;eventbus.on(`${eventPrepend}:async:add`,this._addEventbus,this);cov_2i6u9283d0().s[322]++;eventbus.on(`${eventPrepend}:async:add:all`,this._addAllEventbus,this);cov_2i6u9283d0().s[323]++;eventbus.on(`${eventPrepend}:async:destroy:manager`,this._destroyEventbus,this);cov_2i6u9283d0().s[324]++;eventbus.on(`${eventPrepend}:async:invoke`,this.invokeAsync,this);cov_2i6u9283d0().s[325]++;eventbus.on(`${eventPrepend}:async:invoke:event`,this.invokeAsyncEvent,this);cov_2i6u9283d0().s[326]++;eventbus.on(`${eventPrepend}:async:remove`,this._removeEventbus,this);cov_2i6u9283d0().s[327]++;eventbus.on(`${eventPrepend}:async:remove:all`,this._removeAllEventbus,this);cov_2i6u9283d0().s[328]++;eventbus.on(`${eventPrepend}:create:eventbus:proxy`,this.createEventbusProxy,this);cov_2i6u9283d0().s[329]++;eventbus.on(`${eventPrepend}:get:enabled`,this.getPluginsEnabled,this);cov_2i6u9283d0().s[330]++;eventbus.on(`${eventPrepend}:get:options`,this.getOptions,this);cov_2i6u9283d0().s[331]++;eventbus.on(`${eventPrepend}:has:plugin`,this.hasPlugin,this);cov_2i6u9283d0().s[332]++;eventbus.on(`${eventPrepend}:invoke`,this.invoke,this);cov_2i6u9283d0().s[333]++;eventbus.on(`${eventPrepend}:is:valid:config`,this.isValidConfig,this);cov_2i6u9283d0().s[334]++;eventbus.on(`${eventPrepend}:set:enabled`,this.setPluginsEnabled,this);cov_2i6u9283d0().s[335]++;eventbus.on(`${eventPrepend}:set:options`,this._setOptionsEventbus,this);cov_2i6u9283d0().s[336]++;eventbus.on(`${eventPrepend}:sync:invoke`,this.invokeSync,this);cov_2i6u9283d0().s[337]++;eventbus.on(`${eventPrepend}:sync:invoke:event`,this.invokeSyncEvent,this);// Invoke `typhonjs:plugin:manager:eventbus:set` allowing external code to react to eventbus set.
cov_2i6u9283d0().s[338]++;eventbus.trigger('typhonjs:plugin:manager:eventbus:set',{oldEventbus:this._eventbus,oldEventPrepend:oldPrepend,newEventbus:eventbus,newEventPrepend:eventPrepend});cov_2i6u9283d0().s[339]++;if((cov_2i6u9283d0().b[161][0]++,this._pluginSupport!==null)&&(cov_2i6u9283d0().b[161][1]++,this._pluginSupport!==void 0)){cov_2i6u9283d0().b[160][0]++;cov_2i6u9283d0().s[340]++;this._pluginSupport.setEventbus({oldEventbus:this._eventbus,newEventbus:eventbus,oldPrepend,newPrepend:eventPrepend});}else {cov_2i6u9283d0().b[160][1]++;}cov_2i6u9283d0().s[341]++;this._eventbus=eventbus;cov_2i6u9283d0().s[342]++;return this;}/**
    * Set optional parameters. All parameters are off by default.
    *
    * @param {PluginManagerOptions} options - Defines optional parameters to set.
    */setOptions(options=(cov_2i6u9283d0().b[162][0]++,{})){cov_2i6u9283d0().f[25]++;cov_2i6u9283d0().s[343]++;if(this.isDestroyed){cov_2i6u9283d0().b[163][0]++;cov_2i6u9283d0().s[344]++;throw new ReferenceError('This PluginManager instance has been destroyed.');}else {cov_2i6u9283d0().b[163][1]++;}cov_2i6u9283d0().s[345]++;if(typeof options!=='object'){cov_2i6u9283d0().b[164][0]++;cov_2i6u9283d0().s[346]++;throw new TypeError(`'options' is not an object.`);}else {cov_2i6u9283d0().b[164][1]++;}cov_2i6u9283d0().s[347]++;if(typeof options.pluginsEnabled==='boolean'){cov_2i6u9283d0().b[165][0]++;cov_2i6u9283d0().s[348]++;this._options.pluginsEnabled=options.pluginsEnabled;}else {cov_2i6u9283d0().b[165][1]++;}cov_2i6u9283d0().s[349]++;if(typeof options.noEventAdd==='boolean'){cov_2i6u9283d0().b[166][0]++;cov_2i6u9283d0().s[350]++;this._options.noEventAdd=options.noEventAdd;}else {cov_2i6u9283d0().b[166][1]++;}cov_2i6u9283d0().s[351]++;if(typeof options.noEventDestroy==='boolean'){cov_2i6u9283d0().b[167][0]++;cov_2i6u9283d0().s[352]++;this._options.noEventDestroy=options.noEventDestroy;}else {cov_2i6u9283d0().b[167][1]++;}cov_2i6u9283d0().s[353]++;if(typeof options.noEventOptions==='boolean'){cov_2i6u9283d0().b[168][0]++;cov_2i6u9283d0().s[354]++;this._options.noEventOptions=options.noEventOptions;}else {cov_2i6u9283d0().b[168][1]++;}cov_2i6u9283d0().s[355]++;if(typeof options.noEventRemoval==='boolean'){cov_2i6u9283d0().b[169][0]++;cov_2i6u9283d0().s[356]++;this._options.noEventRemoval=options.noEventRemoval;}else {cov_2i6u9283d0().b[169][1]++;}cov_2i6u9283d0().s[357]++;if(typeof options.throwNoMethod==='boolean'){cov_2i6u9283d0().b[170][0]++;cov_2i6u9283d0().s[358]++;this._options.throwNoMethod=options.throwNoMethod;}else {cov_2i6u9283d0().b[170][1]++;}cov_2i6u9283d0().s[359]++;if(typeof options.throwNoPlugin==='boolean'){cov_2i6u9283d0().b[171][0]++;cov_2i6u9283d0().s[360]++;this._options.throwNoPlugin=options.throwNoPlugin;}else {cov_2i6u9283d0().b[171][1]++;}}/**
    * Provides the eventbus callback which may prevent plugin manager options being set if optional `noEventOptions` is
    * enabled. This disables the ability for the plugin manager options to be set via events preventing any external
    * code modifying options.
    *
    * @param {PluginManagerOptions} options - Defines optional parameters to set.
    *
    * @private
    */_setOptionsEventbus(options=(cov_2i6u9283d0().b[172][0]++,{})){cov_2i6u9283d0().f[26]++;cov_2i6u9283d0().s[361]++;if(this.isDestroyed){cov_2i6u9283d0().b[173][0]++;cov_2i6u9283d0().s[362]++;throw new ReferenceError('This PluginManager instance has been destroyed.');}else {cov_2i6u9283d0().b[173][1]++;}cov_2i6u9283d0().s[363]++;if(!this._options.noEventOptions){cov_2i6u9283d0().b[174][0]++;cov_2i6u9283d0().s[364]++;this.setOptions(options);}else {cov_2i6u9283d0().b[174][1]++;}}/**
    * Sets the enabled state of a plugin, a list of plugins, or all plugins.
    *
    * @param {object}            options - Options object.
    *
    * @param {boolean}           options.enabled - The enabled state.
    *
    * @param {string|string[]}   [options.pluginNames] - Plugin name or list of names to set state.
    */setPluginsEnabled({enabled,pluginNames=(cov_2i6u9283d0().b[176][0]++,[])}=(cov_2i6u9283d0().b[175][0]++,{})){cov_2i6u9283d0().f[27]++;cov_2i6u9283d0().s[365]++;if(this.isDestroyed){cov_2i6u9283d0().b[177][0]++;cov_2i6u9283d0().s[366]++;throw new ReferenceError('This PluginManager instance has been destroyed.');}else {cov_2i6u9283d0().b[177][1]++;}cov_2i6u9283d0().s[367]++;if((cov_2i6u9283d0().b[179][0]++,typeof pluginNames!=='string')&&(cov_2i6u9283d0().b[179][1]++,!Array.isArray(pluginNames))){cov_2i6u9283d0().b[178][0]++;cov_2i6u9283d0().s[368]++;throw new TypeError(`'pluginNames' is not a string or array.`);}else {cov_2i6u9283d0().b[178][1]++;}cov_2i6u9283d0().s[369]++;if(typeof enabled!=='boolean'){cov_2i6u9283d0().b[180][0]++;cov_2i6u9283d0().s[370]++;throw new TypeError(`'enabled' is not a boolean.`);}else {cov_2i6u9283d0().b[180][1]++;}cov_2i6u9283d0().s[371]++;const setEntryEnabled=entry=>{cov_2i6u9283d0().f[28]++;cov_2i6u9283d0().s[372]++;if(entry instanceof PluginEntry){cov_2i6u9283d0().b[181][0]++;cov_2i6u9283d0().s[373]++;entry.enabled=enabled;// Invoke `typhonjs:plugin:manager:plugin:enabled` allowing external code to react to plugin enabled state.
cov_2i6u9283d0().s[374]++;if(this._eventbus){cov_2i6u9283d0().b[182][0]++;cov_2i6u9283d0().s[375]++;this._eventbus.trigger(`typhonjs:plugin:manager:plugin:enabled`,Object.assign({enabled},JSON.parse(JSON.stringify(entry.data))));}else {cov_2i6u9283d0().b[182][1]++;}}else {cov_2i6u9283d0().b[181][1]++;}};// Set enabled state for a single plugin if found.
cov_2i6u9283d0().s[376]++;if(typeof pluginNames==='string'){cov_2i6u9283d0().b[183][0]++;cov_2i6u9283d0().s[377]++;setEntryEnabled(this._pluginMap.get(pluginNames));}else {cov_2i6u9283d0().b[183][1]++;}// If there are plugin names specified then limit setting enabled state just them.
cov_2i6u9283d0().s[378]++;if(pluginNames.length){cov_2i6u9283d0().b[184][0]++;cov_2i6u9283d0().s[379]++;for(const pluginName of pluginNames){cov_2i6u9283d0().s[380]++;setEntryEnabled(this._pluginMap.get(pluginName));}}else// Set all plugins enabled state.
{cov_2i6u9283d0().b[184][1]++;cov_2i6u9283d0().s[381]++;for(const pluginEntry of this._pluginMap.values()){cov_2i6u9283d0().s[382]++;setEntryEnabled(pluginEntry);}}}}// Module Private ----------------------------------------------------------------------------------------------------
/**
 * Private implementation to invoke asynchronous events. This allows internal calls in PluginManager for
 * `onPluginLoad` and `onPluginUnload` callbacks to bypass optional error checking.
 *
 * This dispatch method asynchronously passes to and returns from any invoked targets a PluginEvent. Any invoked plugin
 * may return a Promise which is awaited upon by `Promise.all` before returning the PluginEvent data via a Promise.
 *
 * @param {string}                     methodName - Method name to invoke.
 *
 * @param {object}                     copyProps - plugin event object.
 *
 * @param {object}                     passthruProps - if true, event has plugin option.
 *
 * @param {string|string[]}            nameOrList - An optional plugin name or array / iterable of plugin names to
 *                                                  invoke.
 *
 * @param {Map<string, PluginEvent>}   pluginMap - Stores the plugins by name with an associated PluginEntry.
 *
 * @param {object}                     options - Defines options for throwing exceptions. Turned off by default.
 *
 * @param {boolean}                    [performErrorCheck=true] - If false optional error checking is disabled.
 *
 * @returns {Promise<PluginEvent>} A PluginEvent representing the invocation results.
 */cov_2i6u9283d0().s[383]++;const s_INVOKE_ASYNC_EVENTS=async(methodName,copyProps=(cov_2i6u9283d0().b[185][0]++,{}),passthruProps=(cov_2i6u9283d0().b[186][0]++,{}),nameOrList,pluginMap,options,performErrorCheck=(cov_2i6u9283d0().b[187][0]++,true))=>{cov_2i6u9283d0().f[29]++;cov_2i6u9283d0().s[384]++;if(typeof methodName!=='string'){cov_2i6u9283d0().b[188][0]++;cov_2i6u9283d0().s[385]++;throw new TypeError(`'methodName' is not a string.`);}else {cov_2i6u9283d0().b[188][1]++;}cov_2i6u9283d0().s[386]++;if(typeof passthruProps!=='object'){cov_2i6u9283d0().b[189][0]++;cov_2i6u9283d0().s[387]++;throw new TypeError(`'passthruProps' is not an object.`);}else {cov_2i6u9283d0().b[189][1]++;}cov_2i6u9283d0().s[388]++;if(typeof copyProps!=='object'){cov_2i6u9283d0().b[190][0]++;cov_2i6u9283d0().s[389]++;throw new TypeError(`'copyProps' is not an object.`);}else {cov_2i6u9283d0().b[190][1]++;}cov_2i6u9283d0().s[390]++;if((cov_2i6u9283d0().b[192][0]++,typeof nameOrList!=='string')&&(cov_2i6u9283d0().b[192][1]++,!Array.isArray(nameOrList))&&(cov_2i6u9283d0().b[192][2]++,typeof nameOrList[Symbol.iterator]!=='function')){cov_2i6u9283d0().b[191][0]++;cov_2i6u9283d0().s[391]++;throw new TypeError(`'nameOrList' is not a string, array, or iterator.`);}else {cov_2i6u9283d0().b[191][1]++;}// Track how many plugins were invoked.
let pluginInvokeCount=(cov_2i6u9283d0().s[392]++,0);const pluginInvokeNames=(cov_2i6u9283d0().s[393]++,[]);// Track if a plugin method is invoked
let hasMethod=(cov_2i6u9283d0().s[394]++,false);let hasPlugin=(cov_2i6u9283d0().s[395]++,false);// Create plugin event.
const ev=(cov_2i6u9283d0().s[396]++,new PluginEvent(copyProps,passthruProps));const results=(cov_2i6u9283d0().s[397]++,[]);cov_2i6u9283d0().s[398]++;if(typeof nameOrList==='string'){cov_2i6u9283d0().b[193][0]++;const entry=(cov_2i6u9283d0().s[399]++,pluginMap.get(nameOrList));cov_2i6u9283d0().s[400]++;if((cov_2i6u9283d0().b[195][0]++,entry instanceof PluginEntry)&&(cov_2i6u9283d0().b[195][1]++,entry.enabled)&&(cov_2i6u9283d0().b[195][2]++,entry.instance)){cov_2i6u9283d0().b[194][0]++;cov_2i6u9283d0().s[401]++;hasPlugin=true;cov_2i6u9283d0().s[402]++;if(typeof entry.instance[methodName]==='function'){cov_2i6u9283d0().b[196][0]++;cov_2i6u9283d0().s[403]++;ev.eventbus=entry.eventbusProxy;cov_2i6u9283d0().s[404]++;ev.pluginName=entry.name;cov_2i6u9283d0().s[405]++;ev.pluginOptions=entry.data.plugin.options;const result=(cov_2i6u9283d0().s[406]++,entry.instance[methodName](ev));cov_2i6u9283d0().s[407]++;if((cov_2i6u9283d0().b[198][0]++,typeof result!=='undefined')&&(cov_2i6u9283d0().b[198][1]++,result!==null)){cov_2i6u9283d0().b[197][0]++;cov_2i6u9283d0().s[408]++;results.push(result);}else {cov_2i6u9283d0().b[197][1]++;}cov_2i6u9283d0().s[409]++;hasMethod=true;cov_2i6u9283d0().s[410]++;pluginInvokeCount++;cov_2i6u9283d0().s[411]++;pluginInvokeNames.push(entry.name);}else {cov_2i6u9283d0().b[196][1]++;}}else {cov_2i6u9283d0().b[194][1]++;}}else {cov_2i6u9283d0().b[193][1]++;cov_2i6u9283d0().s[412]++;for(const name of nameOrList){const entry=(cov_2i6u9283d0().s[413]++,pluginMap.get(name));cov_2i6u9283d0().s[414]++;if((cov_2i6u9283d0().b[200][0]++,entry instanceof PluginEntry)&&(cov_2i6u9283d0().b[200][1]++,entry.enabled)&&(cov_2i6u9283d0().b[200][2]++,entry.instance)){cov_2i6u9283d0().b[199][0]++;cov_2i6u9283d0().s[415]++;hasPlugin=true;cov_2i6u9283d0().s[416]++;if(typeof entry.instance[methodName]==='function'){cov_2i6u9283d0().b[201][0]++;cov_2i6u9283d0().s[417]++;ev.eventbus=entry.eventbusProxy;cov_2i6u9283d0().s[418]++;ev.pluginName=entry.name;cov_2i6u9283d0().s[419]++;ev.pluginOptions=entry.data.plugin.options;const result=(cov_2i6u9283d0().s[420]++,entry.instance[methodName](ev));cov_2i6u9283d0().s[421]++;if((cov_2i6u9283d0().b[203][0]++,typeof result!=='undefined')&&(cov_2i6u9283d0().b[203][1]++,result!==null)){cov_2i6u9283d0().b[202][0]++;cov_2i6u9283d0().s[422]++;results.push(result);}else {cov_2i6u9283d0().b[202][1]++;}cov_2i6u9283d0().s[423]++;hasMethod=true;cov_2i6u9283d0().s[424]++;pluginInvokeCount++;cov_2i6u9283d0().s[425]++;pluginInvokeNames.push(entry.name);}else {cov_2i6u9283d0().b[201][1]++;}}else {cov_2i6u9283d0().b[199][1]++;}}}cov_2i6u9283d0().s[426]++;if((cov_2i6u9283d0().b[205][0]++,performErrorCheck)&&(cov_2i6u9283d0().b[205][1]++,options.throwNoPlugin)&&(cov_2i6u9283d0().b[205][2]++,!hasPlugin)){cov_2i6u9283d0().b[204][0]++;cov_2i6u9283d0().s[427]++;throw new Error(`PluginManager failed to find any target plugins.`);}else {cov_2i6u9283d0().b[204][1]++;}cov_2i6u9283d0().s[428]++;if((cov_2i6u9283d0().b[207][0]++,performErrorCheck)&&(cov_2i6u9283d0().b[207][1]++,options.throwNoMethod)&&(cov_2i6u9283d0().b[207][2]++,!hasMethod)){cov_2i6u9283d0().b[206][0]++;cov_2i6u9283d0().s[429]++;throw new Error(`PluginManager failed to invoke '${methodName}'.`);}else {cov_2i6u9283d0().b[206][1]++;}// Add meta data for plugin invoke count.
cov_2i6u9283d0().s[430]++;ev.data.$$plugin_invoke_count=pluginInvokeCount;cov_2i6u9283d0().s[431]++;ev.data.$$plugin_invoke_names=pluginInvokeNames;cov_2i6u9283d0().s[432]++;await Promise.all(results);cov_2i6u9283d0().s[433]++;return ev.data;};/**
 * Private implementation to invoke synchronous events. This allows internal calls in PluginManager for
 * `onPluginLoad` and `onPluginUnload` callbacks to bypass optional error checking.
 *
 * This dispatch method synchronously passes to and returns from any invoked targets a PluginEvent.
 *
 * @param {string}                     methodName - Method name to invoke.
 *
 * @param {object}                     copyProps - plugin event object.
 *
 * @param {object}                     passthruProps - if true, event has plugin option.
 *
 * @param {string|string[]}            nameOrList - An optional plugin name or array / iterable of plugin names to
 *                                                  invoke.
 *
 * @param {Map<string, PluginEvent>}   pluginMap - Stores the plugins by name with an associated PluginEntry.
 *
 * @param {object}                     options - Defines options for throwing exceptions. Turned off by default.
 *
 * @param {boolean}                    [performErrorCheck=true] - If false optional error checking is disabled.
 *
 * @returns {PluginEvent} A PluginEvent representing the invocation results.
 */cov_2i6u9283d0().s[434]++;const s_INVOKE_SYNC_EVENTS=(methodName,copyProps=(cov_2i6u9283d0().b[208][0]++,{}),passthruProps=(cov_2i6u9283d0().b[209][0]++,{}),nameOrList,pluginMap,options,performErrorCheck=(cov_2i6u9283d0().b[210][0]++,true))=>{cov_2i6u9283d0().f[30]++;cov_2i6u9283d0().s[435]++;if(typeof methodName!=='string'){cov_2i6u9283d0().b[211][0]++;cov_2i6u9283d0().s[436]++;throw new TypeError(`'methodName' is not a string.`);}else {cov_2i6u9283d0().b[211][1]++;}cov_2i6u9283d0().s[437]++;if(typeof passthruProps!=='object'){cov_2i6u9283d0().b[212][0]++;cov_2i6u9283d0().s[438]++;throw new TypeError(`'passthruProps' is not an object.`);}else {cov_2i6u9283d0().b[212][1]++;}cov_2i6u9283d0().s[439]++;if(typeof copyProps!=='object'){cov_2i6u9283d0().b[213][0]++;cov_2i6u9283d0().s[440]++;throw new TypeError(`'copyProps' is not an object.`);}else {cov_2i6u9283d0().b[213][1]++;}cov_2i6u9283d0().s[441]++;if((cov_2i6u9283d0().b[215][0]++,typeof nameOrList!=='string')&&(cov_2i6u9283d0().b[215][1]++,!Array.isArray(nameOrList))&&(cov_2i6u9283d0().b[215][2]++,typeof nameOrList[Symbol.iterator]!=='function')){cov_2i6u9283d0().b[214][0]++;cov_2i6u9283d0().s[442]++;throw new TypeError(`'nameOrList' is not a string, array, or iterator.`);}else {cov_2i6u9283d0().b[214][1]++;}// Track how many plugins were invoked.
let pluginInvokeCount=(cov_2i6u9283d0().s[443]++,0);const pluginInvokeNames=(cov_2i6u9283d0().s[444]++,[]);// Track if a plugin method is invoked
let hasMethod=(cov_2i6u9283d0().s[445]++,false);let hasPlugin=(cov_2i6u9283d0().s[446]++,false);// Create plugin event.
const ev=(cov_2i6u9283d0().s[447]++,new PluginEvent(copyProps,passthruProps));cov_2i6u9283d0().s[448]++;if(typeof nameOrList==='string'){cov_2i6u9283d0().b[216][0]++;const entry=(cov_2i6u9283d0().s[449]++,pluginMap.get(nameOrList));cov_2i6u9283d0().s[450]++;if((cov_2i6u9283d0().b[218][0]++,entry instanceof PluginEntry)&&(cov_2i6u9283d0().b[218][1]++,entry.enabled)&&(cov_2i6u9283d0().b[218][2]++,entry.instance)){cov_2i6u9283d0().b[217][0]++;cov_2i6u9283d0().s[451]++;hasPlugin=true;cov_2i6u9283d0().s[452]++;if(typeof entry.instance[methodName]==='function'){cov_2i6u9283d0().b[219][0]++;cov_2i6u9283d0().s[453]++;ev.eventbus=entry.eventbusProxy;cov_2i6u9283d0().s[454]++;ev.pluginName=entry.name;cov_2i6u9283d0().s[455]++;ev.pluginOptions=entry.data.plugin.options;cov_2i6u9283d0().s[456]++;entry.instance[methodName](ev);cov_2i6u9283d0().s[457]++;hasMethod=true;cov_2i6u9283d0().s[458]++;pluginInvokeCount++;cov_2i6u9283d0().s[459]++;pluginInvokeNames.push(entry.name);}else {cov_2i6u9283d0().b[219][1]++;}}else {cov_2i6u9283d0().b[217][1]++;}}else {cov_2i6u9283d0().b[216][1]++;cov_2i6u9283d0().s[460]++;for(const name of nameOrList){const entry=(cov_2i6u9283d0().s[461]++,pluginMap.get(name));cov_2i6u9283d0().s[462]++;if((cov_2i6u9283d0().b[221][0]++,entry instanceof PluginEntry)&&(cov_2i6u9283d0().b[221][1]++,entry.enabled)&&(cov_2i6u9283d0().b[221][2]++,entry.instance)){cov_2i6u9283d0().b[220][0]++;cov_2i6u9283d0().s[463]++;hasPlugin=true;cov_2i6u9283d0().s[464]++;if(typeof entry.instance[methodName]==='function'){cov_2i6u9283d0().b[222][0]++;cov_2i6u9283d0().s[465]++;ev.eventbus=entry.eventbusProxy;cov_2i6u9283d0().s[466]++;ev.pluginName=entry.name;cov_2i6u9283d0().s[467]++;ev.pluginOptions=entry.data.plugin.options;cov_2i6u9283d0().s[468]++;entry.instance[methodName](ev);cov_2i6u9283d0().s[469]++;hasMethod=true;cov_2i6u9283d0().s[470]++;pluginInvokeCount++;cov_2i6u9283d0().s[471]++;pluginInvokeNames.push(entry.name);}else {cov_2i6u9283d0().b[222][1]++;}}else {cov_2i6u9283d0().b[220][1]++;}}}cov_2i6u9283d0().s[472]++;if((cov_2i6u9283d0().b[224][0]++,performErrorCheck)&&(cov_2i6u9283d0().b[224][1]++,options.throwNoPlugin)&&(cov_2i6u9283d0().b[224][2]++,!hasPlugin)){cov_2i6u9283d0().b[223][0]++;cov_2i6u9283d0().s[473]++;throw new Error(`PluginManager failed to find any target plugins.`);}else {cov_2i6u9283d0().b[223][1]++;}cov_2i6u9283d0().s[474]++;if((cov_2i6u9283d0().b[226][0]++,performErrorCheck)&&(cov_2i6u9283d0().b[226][1]++,options.throwNoMethod)&&(cov_2i6u9283d0().b[226][2]++,!hasMethod)){cov_2i6u9283d0().b[225][0]++;cov_2i6u9283d0().s[475]++;throw new Error(`PluginManager failed to invoke '${methodName}'.`);}else {cov_2i6u9283d0().b[225][1]++;}// Add meta data for plugin invoke count.
cov_2i6u9283d0().s[476]++;ev.data.$$plugin_invoke_count=pluginInvokeCount;cov_2i6u9283d0().s[477]++;ev.data.$$plugin_invoke_names=pluginInvokeNames;cov_2i6u9283d0().s[478]++;return ev.data;};/**
 * @typedef {object} PluginConfig
 *
 * @property {string}      name - Defines the name of the plugin; if no `target` entry is present the name
 *                                doubles as the target (please see target).
 *
 * @property {string|URL}  [target] - Defines the target Node module to load or defines a local file (full
 *                                    path or relative to current working directory to load. Target may also be a file
 *                                    URL / string or in the browser a web URL.
 *
 * @property {string}      [instance] - Defines an existing object instance to use as the plugin.
 *
 * @property {object}      [options] - Defines an object of options for the plugin.
 */ /**
 * @typedef {object} PluginData
 *
 * @property {object}   manager - Data about the plugin manager
 *
 * @property {string}   manager.eventPrepend - The plugin manager event prepend string.
 *
 * @property {object}   module - Optional object hash to associate with plugin.
 *
 * @property {object}   plugin - Data about the plugin.
 *
 * @property {string}   plugin.name - The name of the plugin.
 *
 * @property {string}   plugin.scopedName - The name of the plugin with the plugin managers event prepend string.
 *
 * @property {string}   plugin.target - Defines the target NPM module to loaded or defines a local file (full
 *                               path or relative to current working directory to load.
 *
 * @property {string}   plugin.targetEscaped - Provides the target, but properly escaped for RegExp usage.
 *
 * @property {string}   plugin.type - The type of plugin: `instance` +
 *                                    In Node: `import-module`, `import-path`, `require-module`, or `require-path`.
 *                                    In Browser: `import-path`, `import-url`.
 *
 * @property {object}   plugin.options - Defines an object of options for the plugin.
 */ /**
 * @typedef {object} PluginManagerOptions
 *
 * @property {boolean}   [pluginsEnabled] - If false all plugins are disabled.
 *
 * @property {boolean}   [noEventAdd] - If true this prevents plugins from being added by `plugins:add` and
 *                                      `plugins:add:all` events forcing direct method invocation for addition.
 *
 * @property {boolean}   [noEventDestroy] - If true this prevents the plugin manager from being destroyed by
 *                                          `plugins:destroy:manager` forcing direct method invocation for destruction.
 *
 * @property {boolean}   [noEventOptions] - If true this prevents setting options for the plugin manager by
 *                                          `plugins:destroy:manager` forcing direct method invocation for destruction.
 *
 * @property {boolean}   [noEventRemoval] - If true this prevents plugins from being removed by `plugins:remove` and
 *                                          `plugins:remove:all` events forcing direct method invocation for removal.
 *
 * @property {boolean}   [throwNoMethod] - If true then when a method fails to be invoked by any plugin an exception
 *                                         will be thrown.
 *
 * @property {boolean}   [throwNoPlugin] - If true then when no plugin is matched to be invoked an exception will be
 *                                         thrown.
 */ // TODO THIS NEEDS REFINEMENT
/**
 * Interface for PluginSupport implementation classes.
 *
 * @interface PluginSupportImpl
 */ /**
 * A method to invoke when the plugin manager is destroyed.
 *
 * @function
 * @async
 * @name PluginSupportImpl#destroy
 */ /**
 * A method to invoke when the plugin manager eventbus is set.
 *
 * @function
 * @async
 * @name PluginSupportImpl#setEventbus
 */

function cov_34c5zxjs2(){var path="/Volumes/Data/program/javascript/projects/TyphonJS/repos/typhonrt/typhonjs-plugin/manager/src/browser/PluginManager.js";var hash="d969ae89ffe23091f9e5cdf5b2b111504b035aac";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Volumes/Data/program/javascript/projects/TyphonJS/repos/typhonrt/typhonjs-plugin/manager/src/browser/PluginManager.js",statementMap:{"0":{start:{line:7,column:21},end:{line:7,column:47}},"1":{start:{line:10,column:6},end:{line:13,column:7}},"2":{start:{line:12,column:9},end:{line:12,column:99}},"3":{start:{line:15,column:19},end:{line:16,column:95}},"4":{start:{line:21,column:6},end:{line:34,column:7}},"5":{start:{line:23,column:9},end:{line:23,column:27}},"6":{start:{line:26,column:11},end:{line:34,column:7}},"7":{start:{line:28,column:9},end:{line:28,column:35}},"8":{start:{line:33,column:9},end:{line:33,column:27}},"9":{start:{line:36,column:6},end:{line:36,column:32}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:5,column:3},end:{line:5,column:4}},loc:{start:{line:6,column:3},end:{line:37,column:4}},line:6}},branchMap:{"0":{loc:{start:{line:10,column:6},end:{line:13,column:7}},type:"if",locations:[{start:{line:10,column:6},end:{line:13,column:7}},{start:{line:10,column:6},end:{line:13,column:7}}],line:10},"1":{loc:{start:{line:10,column:10},end:{line:10,column:74}},type:"binary-expr",locations:[{start:{line:10,column:10},end:{line:10,column:33}},{start:{line:10,column:37},end:{line:10,column:74}}],line:10},"2":{loc:{start:{line:15,column:29},end:{line:16,column:93}},type:"cond-expr",locations:[{start:{line:16,column:79},end:{line:16,column:84}},{start:{line:16,column:87},end:{line:16,column:93}}],line:15},"3":{loc:{start:{line:15,column:29},end:{line:16,column:76}},type:"binary-expr",locations:[{start:{line:15,column:29},end:{line:15,column:56}},{start:{line:16,column:8},end:{line:16,column:40}},{start:{line:16,column:44},end:{line:16,column:75}}],line:15},"4":{loc:{start:{line:21,column:6},end:{line:34,column:7}},type:"if",locations:[{start:{line:21,column:6},end:{line:34,column:7}},{start:{line:21,column:6},end:{line:34,column:7}}],line:21},"5":{loc:{start:{line:26,column:11},end:{line:34,column:7}},type:"if",locations:[{start:{line:26,column:11},end:{line:34,column:7}},{start:{line:26,column:11},end:{line:34,column:7}}],line:26}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},f:{"0":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"d969ae89ffe23091f9e5cdf5b2b111504b035aac"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_34c5zxjs2=function(){return actualCoverage;};}return actualCoverage;}cov_34c5zxjs2();class PluginManager extends AbstractPluginManager{async _loadModule(moduleOrPath){cov_34c5zxjs2().f[0]++;const module=(cov_34c5zxjs2().s[0]++,await import(moduleOrPath));// Please note that a plugin or other logger must be setup on the associated eventbus.
cov_34c5zxjs2().s[1]++;if((cov_34c5zxjs2().b[1][0]++,this._eventbus!==null)&&(cov_34c5zxjs2().b[1][1]++,typeof this._eventbus!=='undefined')){cov_34c5zxjs2().b[0][0]++;cov_34c5zxjs2().s[2]++;this._eventbus.trigger('log:debug',`@typhonjs-plugin/manager - import: ${moduleOrPath}`);}else {cov_34c5zxjs2().b[0][1]++;}const type=(cov_34c5zxjs2().s[3]++,`import-${(cov_34c5zxjs2().b[3][0]++,moduleOrPath instanceof URL)||(cov_34c5zxjs2().b[3][1]++,typeof moduleOrPath==='string')&&(cov_34c5zxjs2().b[3][2]++,moduleOrPath.startsWith('http'))?(cov_34c5zxjs2().b[2][0]++,'url'):(cov_34c5zxjs2().b[2][1]++,'path')}`);let instance;// If the module has a named export for `onPluginLoad` then take the module.
cov_34c5zxjs2().s[4]++;if(typeof module.onPluginLoad==='function'){cov_34c5zxjs2().b[4][0]++;cov_34c5zxjs2().s[5]++;instance=module;}// Then potentially resolve any default export / static class.
else {cov_34c5zxjs2().b[4][1]++;cov_34c5zxjs2().s[6]++;if(module.default){cov_34c5zxjs2().b[5][0]++;cov_34c5zxjs2().s[7]++;instance=module.default;}// Finally resolve as just the module.
else {cov_34c5zxjs2().b[5][1]++;cov_34c5zxjs2().s[8]++;instance=module;}}cov_34c5zxjs2().s[9]++;return {instance,type};}}

function cov_1jz70q3n0q(){var path="/Volumes/Data/program/javascript/projects/TyphonJS/repos/typhonrt/typhonjs-plugin/manager/src/PluginSupport.js";var hash="b536fff1392cae7ab8f27bcfb0700417d73c809d";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Volumes/Data/program/javascript/projects/TyphonJS/repos/typhonrt/typhonjs-plugin/manager/src/PluginSupport.js",statementMap:{"0":{start:{line:46,column:6},end:{line:46,column:42}},"1":{start:{line:51,column:6},end:{line:52,column:92}},"2":{start:{line:58,column:6},end:{line:61,column:7}},"3":{start:{line:60,column:9},end:{line:60,column:85}},"4":{start:{line:63,column:6},end:{line:63,column:44}},"5":{start:{line:77,column:6},end:{line:90,column:7}},"6":{start:{line:79,column:9},end:{line:79,column:90}},"7":{start:{line:80,column:9},end:{line:80,column:85}},"8":{start:{line:81,column:9},end:{line:81,column:83}},"9":{start:{line:82,column:9},end:{line:82,column:96}},"10":{start:{line:83,column:9},end:{line:83,column:98}},"11":{start:{line:84,column:9},end:{line:84,column:85}},"12":{start:{line:85,column:9},end:{line:85,column:89}},"13":{start:{line:86,column:9},end:{line:86,column:101}},"14":{start:{line:87,column:9},end:{line:87,column:98}},"15":{start:{line:88,column:9},end:{line:88,column:74}},"16":{start:{line:89,column:9},end:{line:89,column:87}},"17":{start:{line:92,column:6},end:{line:92,column:33}},"18":{start:{line:104,column:6},end:{line:104,column:108}},"19":{start:{line:104,column:30},end:{line:104,column:106}},"20":{start:{line:106,column:6},end:{line:109,column:7}},"21":{start:{line:108,column:9},end:{line:108,column:77}},"22":{start:{line:111,column:22},end:{line:111,column:24}},"23":{start:{line:114,column:25},end:{line:114,column:43}},"24":{start:{line:116,column:6},end:{line:122,column:7}},"25":{start:{line:118,column:9},end:{line:121,column:10}},"26":{start:{line:120,column:12},end:{line:120,column:57}},"27":{start:{line:124,column:6},end:{line:124,column:21}},"28":{start:{line:140,column:6},end:{line:140,column:108}},"29":{start:{line:140,column:30},end:{line:140,column:106}},"30":{start:{line:142,column:6},end:{line:145,column:7}},"31":{start:{line:144,column:9},end:{line:144,column:77}},"32":{start:{line:147,column:22},end:{line:147,column:24}},"33":{start:{line:148,column:25},end:{line:148,column:55}},"34":{start:{line:149,column:23},end:{line:149,column:56}},"35":{start:{line:151,column:6},end:{line:161,column:7}},"36":{start:{line:153,column:9},end:{line:160,column:10}},"37":{start:{line:155,column:12},end:{line:159,column:13}},"38":{start:{line:158,column:15},end:{line:158,column:112}},"39":{start:{line:158,column:89},end:{line:158,column:110}},"40":{start:{line:163,column:6},end:{line:163,column:34}},"41":{start:{line:175,column:6},end:{line:175,column:108}},"42":{start:{line:175,column:30},end:{line:175,column:106}},"43":{start:{line:177,column:6},end:{line:177,column:99}},"44":{start:{line:177,column:44},end:{line:177,column:97}},"45":{start:{line:179,column:20},end:{line:179,column:50}},"46":{start:{line:181,column:6},end:{line:184,column:7}},"47":{start:{line:183,column:9},end:{line:183,column:55}},"48":{start:{line:186,column:6},end:{line:186,column:20}},"49":{start:{line:224,column:6},end:{line:224,column:108}},"50":{start:{line:224,column:30},end:{line:224,column:106}},"51":{start:{line:226,column:6},end:{line:226,column:99}},"52":{start:{line:226,column:44},end:{line:226,column:97}},"53":{start:{line:228,column:20},end:{line:228,column:50}},"54":{start:{line:230,column:6},end:{line:230,column:108}},"55":{start:{line:243,column:6},end:{line:243,column:108}},"56":{start:{line:243,column:30},end:{line:243,column:106}},"57":{start:{line:245,column:6},end:{line:245,column:84}},"58":{start:{line:245,column:47},end:{line:245,column:82}},"59":{start:{line:246,column:6},end:{line:246,column:72}},"60":{start:{line:246,column:44},end:{line:246,column:70}},"61":{start:{line:248,column:22},end:{line:248,column:24}},"62":{start:{line:250,column:6},end:{line:253,column:7}},"63":{start:{line:252,column:9},end:{line:252,column:84}},"64":{start:{line:255,column:6},end:{line:255,column:21}},"65":{start:{line:267,column:6},end:{line:267,column:108}},"66":{start:{line:267,column:30},end:{line:267,column:106}},"67":{start:{line:269,column:6},end:{line:269,column:99}},"68":{start:{line:269,column:43},end:{line:269,column:97}},"69":{start:{line:271,column:22},end:{line:271,column:24}},"70":{start:{line:273,column:31},end:{line:273,column:58}},"71":{start:{line:275,column:6},end:{line:278,column:7}},"72":{start:{line:277,column:9},end:{line:277,column:86}},"73":{start:{line:277,column:53},end:{line:277,column:84}},"74":{start:{line:280,column:6},end:{line:280,column:21}},"75":{start:{line:292,column:6},end:{line:292,column:108}},"76":{start:{line:292,column:30},end:{line:292,column:106}},"77":{start:{line:294,column:6},end:{line:297,column:7}},"78":{start:{line:296,column:9},end:{line:296,column:77}},"79":{start:{line:299,column:22},end:{line:299,column:24}},"80":{start:{line:300,column:25},end:{line:300,column:55}},"81":{start:{line:302,column:6},end:{line:315,column:7}},"82":{start:{line:304,column:9},end:{line:314,column:10}},"83":{start:{line:306,column:12},end:{line:313,column:13}},"84":{start:{line:309,column:15},end:{line:312,column:16}},"85":{start:{line:311,column:18},end:{line:311,column:69}},"86":{start:{line:317,column:6},end:{line:317,column:21}},"87":{start:{line:329,column:6},end:{line:329,column:108}},"88":{start:{line:329,column:30},end:{line:329,column:106}},"89":{start:{line:331,column:6},end:{line:334,column:7}},"90":{start:{line:333,column:9},end:{line:333,column:77}},"91":{start:{line:337,column:6},end:{line:337,column:75}},"92":{start:{line:337,column:32},end:{line:337,column:73}},"93":{start:{line:339,column:22},end:{line:339,column:24}},"94":{start:{line:341,column:6},end:{line:344,column:7}},"95":{start:{line:343,column:9},end:{line:343,column:69}},"96":{start:{line:343,column:42},end:{line:343,column:67}},"97":{start:{line:346,column:6},end:{line:346,column:21}},"98":{start:{line:358,column:6},end:{line:358,column:108}},"99":{start:{line:358,column:30},end:{line:358,column:106}},"100":{start:{line:360,column:6},end:{line:360,column:99}},"101":{start:{line:360,column:44},end:{line:360,column:97}},"102":{start:{line:364,column:20},end:{line:364,column:50}},"103":{start:{line:366,column:6},end:{line:366,column:107}},"104":{start:{line:366,column:42},end:{line:366,column:105}},"105":{start:{line:368,column:6},end:{line:368,column:20}},"106":{start:{line:380,column:6},end:{line:380,column:108}},"107":{start:{line:380,column:30},end:{line:380,column:106}},"108":{start:{line:382,column:6},end:{line:382,column:99}},"109":{start:{line:382,column:44},end:{line:382,column:97}},"110":{start:{line:384,column:6},end:{line:387,column:7}},"111":{start:{line:386,column:9},end:{line:386,column:80}},"112":{start:{line:386,column:66},end:{line:386,column:78}},"113":{start:{line:389,column:6},end:{line:389,column:19}},"114":{start:{line:403,column:6},end:{line:403,column:108}},"115":{start:{line:403,column:30},end:{line:403,column:106}},"116":{start:{line:405,column:6},end:{line:405,column:99}},"117":{start:{line:405,column:44},end:{line:405,column:97}},"118":{start:{line:406,column:6},end:{line:406,column:99}},"119":{start:{line:406,column:44},end:{line:406,column:97}},"120":{start:{line:408,column:21},end:{line:408,column:51}},"121":{start:{line:410,column:6},end:{line:410,column:87}},"122":{start:{line:430,column:6},end:{line:443,column:7}},"123":{start:{line:432,column:9},end:{line:432,column:91}},"124":{start:{line:433,column:9},end:{line:433,column:86}},"125":{start:{line:434,column:9},end:{line:434,column:84}},"126":{start:{line:435,column:9},end:{line:435,column:97}},"127":{start:{line:436,column:9},end:{line:436,column:99}},"128":{start:{line:437,column:9},end:{line:437,column:86}},"129":{start:{line:438,column:9},end:{line:438,column:90}},"130":{start:{line:439,column:9},end:{line:439,column:102}},"131":{start:{line:440,column:9},end:{line:440,column:99}},"132":{start:{line:441,column:9},end:{line:441,column:75}},"133":{start:{line:442,column:9},end:{line:442,column:88}},"134":{start:{line:445,column:6},end:{line:458,column:7}},"135":{start:{line:447,column:9},end:{line:447,column:90}},"136":{start:{line:448,column:9},end:{line:448,column:85}},"137":{start:{line:449,column:9},end:{line:449,column:83}},"138":{start:{line:450,column:9},end:{line:450,column:96}},"139":{start:{line:451,column:9},end:{line:451,column:98}},"140":{start:{line:452,column:9},end:{line:452,column:85}},"141":{start:{line:453,column:9},end:{line:453,column:89}},"142":{start:{line:454,column:9},end:{line:454,column:101}},"143":{start:{line:455,column:9},end:{line:455,column:98}},"144":{start:{line:456,column:9},end:{line:456,column:74}},"145":{start:{line:457,column:9},end:{line:457,column:87}},"146":{start:{line:472,column:33},end:{line:483,column:1}},"147":{start:{line:474,column:17},end:{line:474,column:19}},"148":{start:{line:476,column:3},end:{line:480,column:87}},"149":{start:{line:478,column:6},end:{line:478,column:115}},"150":{start:{line:478,column:58},end:{line:478,column:111}},"151":{start:{line:478,column:92},end:{line:478,column:109}},"152":{start:{line:479,column:6},end:{line:479,column:39}},"153":{start:{line:482,column:3},end:{line:482,column:16}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:44,column:3},end:{line:44,column:4}},loc:{start:{line:45,column:3},end:{line:47,column:4}},line:45},"1":{name:"(anonymous_1)",decl:{start:{line:49,column:3},end:{line:49,column:4}},loc:{start:{line:50,column:3},end:{line:53,column:4}},line:50},"2":{name:"(anonymous_2)",decl:{start:{line:55,column:3},end:{line:55,column:4}},loc:{start:{line:56,column:3},end:{line:64,column:4}},line:56},"3":{name:"(anonymous_3)",decl:{start:{line:75,column:3},end:{line:75,column:4}},loc:{start:{line:76,column:3},end:{line:93,column:4}},line:76},"4":{name:"(anonymous_4)",decl:{start:{line:102,column:3},end:{line:102,column:4}},loc:{start:{line:103,column:3},end:{line:125,column:4}},line:103},"5":{name:"(anonymous_5)",decl:{start:{line:138,column:3},end:{line:138,column:4}},loc:{start:{line:139,column:3},end:{line:164,column:4}},line:139},"6":{name:"(anonymous_6)",decl:{start:{line:173,column:3},end:{line:173,column:4}},loc:{start:{line:174,column:3},end:{line:187,column:4}},line:174},"7":{name:"(anonymous_7)",decl:{start:{line:222,column:3},end:{line:222,column:4}},loc:{start:{line:223,column:3},end:{line:231,column:4}},line:223},"8":{name:"(anonymous_8)",decl:{start:{line:241,column:3},end:{line:241,column:4}},loc:{start:{line:242,column:3},end:{line:256,column:4}},line:242},"9":{name:"(anonymous_9)",decl:{start:{line:265,column:3},end:{line:265,column:4}},loc:{start:{line:266,column:3},end:{line:281,column:4}},line:266},"10":{name:"(anonymous_10)",decl:{start:{line:290,column:3},end:{line:290,column:4}},loc:{start:{line:291,column:3},end:{line:318,column:4}},line:291},"11":{name:"(anonymous_11)",decl:{start:{line:327,column:3},end:{line:327,column:4}},loc:{start:{line:328,column:3},end:{line:347,column:4}},line:328},"12":{name:"(anonymous_12)",decl:{start:{line:356,column:3},end:{line:356,column:4}},loc:{start:{line:357,column:3},end:{line:369,column:4}},line:357},"13":{name:"(anonymous_13)",decl:{start:{line:378,column:3},end:{line:378,column:4}},loc:{start:{line:379,column:3},end:{line:390,column:4}},line:379},"14":{name:"(anonymous_14)",decl:{start:{line:401,column:3},end:{line:401,column:4}},loc:{start:{line:402,column:3},end:{line:411,column:4}},line:402},"15":{name:"(anonymous_15)",decl:{start:{line:428,column:3},end:{line:428,column:4}},loc:{start:{line:429,column:3},end:{line:459,column:4}},line:429},"16":{name:"(anonymous_16)",decl:{start:{line:472,column:33},end:{line:472,column:34}},loc:{start:{line:473,column:0},end:{line:483,column:1}},line:473},"17":{name:"(anonymous_17)",decl:{start:{line:478,column:46},end:{line:478,column:47}},loc:{start:{line:478,column:56},end:{line:478,column:113}},line:478}},branchMap:{"0":{loc:{start:{line:51,column:13},end:{line:52,column:91}},type:"binary-expr",locations:[{start:{line:51,column:13},end:{line:51,column:41}},{start:{line:51,column:45},end:{line:51,column:75}},{start:{line:52,column:7},end:{line:52,column:46}},{start:{line:52,column:50},end:{line:52,column:91}}],line:51},"1":{loc:{start:{line:58,column:6},end:{line:61,column:7}},type:"if",locations:[{start:{line:58,column:6},end:{line:61,column:7}},{start:{line:58,column:6},end:{line:61,column:7}}],line:58},"2":{loc:{start:{line:75,column:17},end:{line:75,column:48}},type:"default-arg",locations:[{start:{line:75,column:46},end:{line:75,column:48}}],line:75},"3":{loc:{start:{line:77,column:6},end:{line:90,column:7}},type:"if",locations:[{start:{line:77,column:6},end:{line:90,column:7}},{start:{line:77,column:6},end:{line:90,column:7}}],line:77},"4":{loc:{start:{line:77,column:10},end:{line:77,column:50}},type:"binary-expr",locations:[{start:{line:77,column:10},end:{line:77,column:27}},{start:{line:77,column:31},end:{line:77,column:50}}],line:77},"5":{loc:{start:{line:102,column:20},end:{line:102,column:36}},type:"default-arg",locations:[{start:{line:102,column:30},end:{line:102,column:36}}],line:102},"6":{loc:{start:{line:104,column:6},end:{line:104,column:108}},type:"if",locations:[{start:{line:104,column:6},end:{line:104,column:108}},{start:{line:104,column:6},end:{line:104,column:108}}],line:104},"7":{loc:{start:{line:106,column:6},end:{line:109,column:7}},type:"if",locations:[{start:{line:106,column:6},end:{line:109,column:7}},{start:{line:106,column:6},end:{line:109,column:7}}],line:106},"8":{loc:{start:{line:106,column:10},end:{line:106,column:72}},type:"binary-expr",locations:[{start:{line:106,column:10},end:{line:106,column:38}},{start:{line:106,column:42},end:{line:106,column:72}}],line:106},"9":{loc:{start:{line:118,column:9},end:{line:121,column:10}},type:"if",locations:[{start:{line:118,column:9},end:{line:121,column:10}},{start:{line:118,column:9},end:{line:121,column:10}}],line:118},"10":{loc:{start:{line:118,column:13},end:{line:118,column:52}},type:"binary-expr",locations:[{start:{line:118,column:13},end:{line:118,column:23}},{start:{line:118,column:27},end:{line:118,column:52}}],line:118},"11":{loc:{start:{line:138,column:18},end:{line:138,column:34}},type:"default-arg",locations:[{start:{line:138,column:28},end:{line:138,column:34}}],line:138},"12":{loc:{start:{line:138,column:36},end:{line:138,column:55}},type:"default-arg",locations:[{start:{line:138,column:49},end:{line:138,column:55}}],line:138},"13":{loc:{start:{line:140,column:6},end:{line:140,column:108}},type:"if",locations:[{start:{line:140,column:6},end:{line:140,column:108}},{start:{line:140,column:6},end:{line:140,column:108}}],line:140},"14":{loc:{start:{line:142,column:6},end:{line:145,column:7}},type:"if",locations:[{start:{line:142,column:6},end:{line:145,column:7}},{start:{line:142,column:6},end:{line:145,column:7}}],line:142},"15":{loc:{start:{line:142,column:10},end:{line:142,column:72}},type:"binary-expr",locations:[{start:{line:142,column:10},end:{line:142,column:38}},{start:{line:142,column:42},end:{line:142,column:72}}],line:142},"16":{loc:{start:{line:153,column:9},end:{line:160,column:10}},type:"if",locations:[{start:{line:153,column:9},end:{line:160,column:10}},{start:{line:153,column:9},end:{line:160,column:10}}],line:153},"17":{loc:{start:{line:153,column:13},end:{line:153,column:115}},type:"binary-expr",locations:[{start:{line:153,column:13},end:{line:153,column:27}},{start:{line:153,column:32},end:{line:153,column:42}},{start:{line:153,column:46},end:{line:153,column:71}},{start:{line:153,column:77},end:{line:153,column:85}},{start:{line:153,column:89},end:{line:153,column:114}}],line:153},"18":{loc:{start:{line:158,column:15},end:{line:158,column:112}},type:"if",locations:[{start:{line:158,column:15},end:{line:158,column:112}},{start:{line:158,column:15},end:{line:158,column:112}}],line:158},"19":{loc:{start:{line:158,column:19},end:{line:158,column:85}},type:"binary-expr",locations:[{start:{line:158,column:19},end:{line:158,column:59}},{start:{line:158,column:63},end:{line:158,column:85}}],line:158},"20":{loc:{start:{line:175,column:6},end:{line:175,column:108}},type:"if",locations:[{start:{line:175,column:6},end:{line:175,column:108}},{start:{line:175,column:6},end:{line:175,column:108}}],line:175},"21":{loc:{start:{line:177,column:6},end:{line:177,column:99}},type:"if",locations:[{start:{line:177,column:6},end:{line:177,column:99}},{start:{line:177,column:6},end:{line:177,column:99}}],line:177},"22":{loc:{start:{line:181,column:6},end:{line:184,column:7}},type:"if",locations:[{start:{line:181,column:6},end:{line:184,column:7}},{start:{line:181,column:6},end:{line:184,column:7}}],line:181},"23":{loc:{start:{line:224,column:6},end:{line:224,column:108}},type:"if",locations:[{start:{line:224,column:6},end:{line:224,column:108}},{start:{line:224,column:6},end:{line:224,column:108}}],line:224},"24":{loc:{start:{line:226,column:6},end:{line:226,column:99}},type:"if",locations:[{start:{line:226,column:6},end:{line:226,column:99}},{start:{line:226,column:6},end:{line:226,column:99}}],line:226},"25":{loc:{start:{line:230,column:13},end:{line:230,column:107}},type:"cond-expr",locations:[{start:{line:230,column:67},end:{line:230,column:102}},{start:{line:230,column:105},end:{line:230,column:107}}],line:230},"26":{loc:{start:{line:230,column:13},end:{line:230,column:64}},type:"binary-expr",locations:[{start:{line:230,column:13},end:{line:230,column:41}},{start:{line:230,column:45},end:{line:230,column:64}}],line:230},"27":{loc:{start:{line:243,column:6},end:{line:243,column:108}},type:"if",locations:[{start:{line:243,column:6},end:{line:243,column:108}},{start:{line:243,column:6},end:{line:243,column:108}}],line:243},"28":{loc:{start:{line:245,column:6},end:{line:245,column:84}},type:"if",locations:[{start:{line:245,column:6},end:{line:245,column:84}},{start:{line:245,column:6},end:{line:245,column:84}}],line:245},"29":{loc:{start:{line:246,column:6},end:{line:246,column:72}},type:"if",locations:[{start:{line:246,column:6},end:{line:246,column:72}},{start:{line:246,column:6},end:{line:246,column:72}}],line:246},"30":{loc:{start:{line:267,column:6},end:{line:267,column:108}},type:"if",locations:[{start:{line:267,column:6},end:{line:267,column:108}},{start:{line:267,column:6},end:{line:267,column:108}}],line:267},"31":{loc:{start:{line:269,column:6},end:{line:269,column:99}},type:"if",locations:[{start:{line:269,column:6},end:{line:269,column:99}},{start:{line:269,column:6},end:{line:269,column:99}}],line:269},"32":{loc:{start:{line:277,column:9},end:{line:277,column:86}},type:"if",locations:[{start:{line:277,column:9},end:{line:277,column:86}},{start:{line:277,column:9},end:{line:277,column:86}}],line:277},"33":{loc:{start:{line:290,column:24},end:{line:290,column:40}},type:"default-arg",locations:[{start:{line:290,column:34},end:{line:290,column:40}}],line:290},"34":{loc:{start:{line:292,column:6},end:{line:292,column:108}},type:"if",locations:[{start:{line:292,column:6},end:{line:292,column:108}},{start:{line:292,column:6},end:{line:292,column:108}}],line:292},"35":{loc:{start:{line:294,column:6},end:{line:297,column:7}},type:"if",locations:[{start:{line:294,column:6},end:{line:297,column:7}},{start:{line:294,column:6},end:{line:297,column:7}}],line:294},"36":{loc:{start:{line:294,column:10},end:{line:294,column:72}},type:"binary-expr",locations:[{start:{line:294,column:10},end:{line:294,column:38}},{start:{line:294,column:42},end:{line:294,column:72}}],line:294},"37":{loc:{start:{line:304,column:9},end:{line:314,column:10}},type:"if",locations:[{start:{line:304,column:9},end:{line:314,column:10}},{start:{line:304,column:9},end:{line:314,column:10}}],line:304},"38":{loc:{start:{line:304,column:13},end:{line:304,column:72}},type:"binary-expr",locations:[{start:{line:304,column:13},end:{line:304,column:27}},{start:{line:304,column:32},end:{line:304,column:42}},{start:{line:304,column:46},end:{line:304,column:71}}],line:304},"39":{loc:{start:{line:309,column:15},end:{line:312,column:16}},type:"if",locations:[{start:{line:309,column:15},end:{line:312,column:16}},{start:{line:309,column:15},end:{line:312,column:16}}],line:309},"40":{loc:{start:{line:309,column:19},end:{line:309,column:85}},type:"binary-expr",locations:[{start:{line:309,column:19},end:{line:309,column:59}},{start:{line:309,column:63},end:{line:309,column:85}}],line:309},"41":{loc:{start:{line:327,column:18},end:{line:327,column:34}},type:"default-arg",locations:[{start:{line:327,column:28},end:{line:327,column:34}}],line:327},"42":{loc:{start:{line:329,column:6},end:{line:329,column:108}},type:"if",locations:[{start:{line:329,column:6},end:{line:329,column:108}},{start:{line:329,column:6},end:{line:329,column:108}}],line:329},"43":{loc:{start:{line:331,column:6},end:{line:334,column:7}},type:"if",locations:[{start:{line:331,column:6},end:{line:334,column:7}},{start:{line:331,column:6},end:{line:334,column:7}}],line:331},"44":{loc:{start:{line:331,column:10},end:{line:331,column:72}},type:"binary-expr",locations:[{start:{line:331,column:10},end:{line:331,column:38}},{start:{line:331,column:42},end:{line:331,column:72}}],line:331},"45":{loc:{start:{line:337,column:6},end:{line:337,column:75}},type:"if",locations:[{start:{line:337,column:6},end:{line:337,column:75}},{start:{line:337,column:6},end:{line:337,column:75}}],line:337},"46":{loc:{start:{line:343,column:9},end:{line:343,column:69}},type:"if",locations:[{start:{line:343,column:9},end:{line:343,column:69}},{start:{line:343,column:9},end:{line:343,column:69}}],line:343},"47":{loc:{start:{line:358,column:6},end:{line:358,column:108}},type:"if",locations:[{start:{line:358,column:6},end:{line:358,column:108}},{start:{line:358,column:6},end:{line:358,column:108}}],line:358},"48":{loc:{start:{line:360,column:6},end:{line:360,column:99}},type:"if",locations:[{start:{line:360,column:6},end:{line:360,column:99}},{start:{line:360,column:6},end:{line:360,column:99}}],line:360},"49":{loc:{start:{line:366,column:6},end:{line:366,column:107}},type:"if",locations:[{start:{line:366,column:6},end:{line:366,column:107}},{start:{line:366,column:6},end:{line:366,column:107}}],line:366},"50":{loc:{start:{line:380,column:6},end:{line:380,column:108}},type:"if",locations:[{start:{line:380,column:6},end:{line:380,column:108}},{start:{line:380,column:6},end:{line:380,column:108}}],line:380},"51":{loc:{start:{line:382,column:6},end:{line:382,column:99}},type:"if",locations:[{start:{line:382,column:6},end:{line:382,column:99}},{start:{line:382,column:6},end:{line:382,column:99}}],line:382},"52":{loc:{start:{line:386,column:9},end:{line:386,column:80}},type:"if",locations:[{start:{line:386,column:9},end:{line:386,column:80}},{start:{line:386,column:9},end:{line:386,column:80}}],line:386},"53":{loc:{start:{line:403,column:6},end:{line:403,column:108}},type:"if",locations:[{start:{line:403,column:6},end:{line:403,column:108}},{start:{line:403,column:6},end:{line:403,column:108}}],line:403},"54":{loc:{start:{line:405,column:6},end:{line:405,column:99}},type:"if",locations:[{start:{line:405,column:6},end:{line:405,column:99}},{start:{line:405,column:6},end:{line:405,column:99}}],line:405},"55":{loc:{start:{line:406,column:6},end:{line:406,column:99}},type:"if",locations:[{start:{line:406,column:6},end:{line:406,column:99}},{start:{line:406,column:6},end:{line:406,column:99}}],line:406},"56":{loc:{start:{line:410,column:13},end:{line:410,column:86}},type:"binary-expr",locations:[{start:{line:410,column:13},end:{line:410,column:42}},{start:{line:410,column:46},end:{line:410,column:86}}],line:410},"57":{loc:{start:{line:428,column:21},end:{line:428,column:78}},type:"default-arg",locations:[{start:{line:428,column:76},end:{line:428,column:78}}],line:428},"58":{loc:{start:{line:430,column:6},end:{line:443,column:7}},type:"if",locations:[{start:{line:430,column:6},end:{line:443,column:7}},{start:{line:430,column:6},end:{line:443,column:7}}],line:430},"59":{loc:{start:{line:430,column:10},end:{line:430,column:56}},type:"binary-expr",locations:[{start:{line:430,column:10},end:{line:430,column:30}},{start:{line:430,column:34},end:{line:430,column:56}}],line:430},"60":{loc:{start:{line:445,column:6},end:{line:458,column:7}},type:"if",locations:[{start:{line:445,column:6},end:{line:458,column:7}},{start:{line:445,column:6},end:{line:458,column:7}}],line:445},"61":{loc:{start:{line:445,column:10},end:{line:445,column:56}},type:"binary-expr",locations:[{start:{line:445,column:10},end:{line:445,column:30}},{start:{line:445,column:34},end:{line:445,column:56}}],line:445},"62":{loc:{start:{line:480,column:12},end:{line:480,column:85}},type:"binary-expr",locations:[{start:{line:480,column:12},end:{line:480,column:38}},{start:{line:480,column:42},end:{line:480,column:54}},{start:{line:480,column:58},end:{line:480,column:85}}],line:480},"63":{loc:{start:{line:478,column:58},end:{line:478,column:111}},type:"if",locations:[{start:{line:478,column:58},end:{line:478,column:111}},{start:{line:478,column:58},end:{line:478,column:111}}],line:478}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},b:{"0":[0,0,0,0],"1":[0,0],"2":[0],"3":[0,0],"4":[0,0],"5":[0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0],"12":[0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0,0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0,0],"39":[0,0],"40":[0,0],"41":[0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0,0],"63":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"b536fff1392cae7ab8f27bcfb0700417d73c809d"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1jz70q3n0q=function(){return actualCoverage;};}return actualCoverage;}cov_1jz70q3n0q();/**
 * Provides a lightweight plugin manager for Node / NPM & the browser with eventbus integration for plugins in a safe
 * and protected manner across NPM modules, local files, and preloaded object instances. This pattern facilitates
 * message passing between modules versus direct dependencies / method invocation.
 *
 * It isn't necessary to use an eventbus associated with the plugin manager though invocation then relies on invoking
 * methods directly with the plugin manager instance.
 *
 * A default eventbus will be created, but you may also pass in an eventbus from `@typhonjs-plugin/eventbus` and the
 * plugin manager will register by default under these event categories:
 *
 * `plugins:get:all:plugin:data` - {@link AbstractPluginManager#getAllPluginData}
 *
 * `plugins:get:method:names` - {@link AbstractPluginManager#getMethodNames}
 *
 * `plugins:get:plugin:data` - {@link AbstractPluginManager#getPluginData}
 *
 * `plugins:get:plugin:event:names` - {@link AbstractPluginManager#getPluginEventNames}
 *
 * `plugins:get:plugin:method:names` - {@link AbstractPluginManager#getPluginMethodNames}
 *
 * `plugins:get:plugin:names` - {@link AbstractPluginManager#getPluginNames}
 *
 * `plugins:get:plugin:options` - {@link AbstractPluginManager#getPluginOptions}
 *
 * `plugins:get:plugins:by:event:name` - {@link AbstractPluginManager#getPluginsByEventName}
 *
 * `plugins:get:plugins:event:names` - {@link AbstractPluginManager#getPluginsEventNames}
 *
 * `plugins:has:method` - {@link AbstractPluginManager#hasMethod}
 *
 * `plugins:has:plugin:method` - {@link AbstractPluginManager#hasPluginMethod}
 *
 * @example
 *
 * @implements {PluginSupportImpl}
 */class PluginSupport{constructor(pluginManager){cov_1jz70q3n0q().f[0]++;cov_1jz70q3n0q().s[0]++;this._pluginManager=pluginManager;}get isDestroyed(){cov_1jz70q3n0q().f[1]++;cov_1jz70q3n0q().s[1]++;return (cov_1jz70q3n0q().b[0][0]++,this._pluginManager===null)||(cov_1jz70q3n0q().b[0][1]++,this._pluginManager===void 0)||(cov_1jz70q3n0q().b[0][2]++,this._pluginManager._pluginMap===null)||(cov_1jz70q3n0q().b[0][3]++,this._pluginManager._pluginMap===void 0);}get pluginMap(){cov_1jz70q3n0q().f[2]++;cov_1jz70q3n0q().s[2]++;/* c8 ignore next 4 */if(this.isDestroyed){cov_1jz70q3n0q().b[1][0]++;cov_1jz70q3n0q().s[3]++;throw new ReferenceError('This PluginManager instance has been destroyed.');}else {cov_1jz70q3n0q().b[1][1]++;}cov_1jz70q3n0q().s[4]++;return this._pluginManager._pluginMap;}/**
    * Destroys all managed plugins after unloading them.
    *
    * @param {object}     options - An options object.
    *
    * @param {Eventbus}   options.eventbus - The eventbus to disassociate.
    *
    * @param {string}     options.eventPrepend - The current event prepend.
    */async destroy({eventbus,eventPrepend}=(cov_1jz70q3n0q().b[2][0]++,{})){cov_1jz70q3n0q().f[3]++;cov_1jz70q3n0q().s[5]++;if((cov_1jz70q3n0q().b[4][0]++,eventbus!==null)&&(cov_1jz70q3n0q().b[4][1]++,eventbus!==void 0)){cov_1jz70q3n0q().b[3][0]++;cov_1jz70q3n0q().s[6]++;eventbus.off(`${eventPrepend}:get:all:plugin:data`,this.getAllPluginData,this);cov_1jz70q3n0q().s[7]++;eventbus.off(`${eventPrepend}:get:method:names`,this.getMethodNames,this);cov_1jz70q3n0q().s[8]++;eventbus.off(`${eventPrepend}:get:plugin:data`,this.getPluginData,this);cov_1jz70q3n0q().s[9]++;eventbus.off(`${eventPrepend}:get:plugin:event:names`,this.getPluginEventNames,this);cov_1jz70q3n0q().s[10]++;eventbus.off(`${eventPrepend}:get:plugin:method:names`,this.getPluginMethodNames,this);cov_1jz70q3n0q().s[11]++;eventbus.off(`${eventPrepend}:get:plugin:names`,this.getPluginNames,this);cov_1jz70q3n0q().s[12]++;eventbus.off(`${eventPrepend}:get:plugin:options`,this.getPluginOptions,this);cov_1jz70q3n0q().s[13]++;eventbus.off(`${eventPrepend}:get:plugins:by:event:name`,this.getPluginsByEventName,this);cov_1jz70q3n0q().s[14]++;eventbus.off(`${eventPrepend}:get:plugins:event:names`,this.getPluginsEventNames,this);cov_1jz70q3n0q().s[15]++;eventbus.off(`${eventPrepend}:has:method`,this.hasMethod,this);cov_1jz70q3n0q().s[16]++;eventbus.off(`${eventPrepend}:has:plugin:method`,this.hasPluginMethod,this);}else {cov_1jz70q3n0q().b[3][1]++;}cov_1jz70q3n0q().s[17]++;this._pluginManager=null;}/**
    * Returns all plugin data or if a boolean is passed in will return plugin data by current enabled state.
    *
    * @param {boolean|undefined} enabled - If enabled is a boolean it will return plugins given their enabled state.
    *
    * @returns {PluginData[]} A list of all PluginData or just enabled / disabled plugins.
    */getAllPluginData(enabled=(cov_1jz70q3n0q().b[5][0]++,void 0)){cov_1jz70q3n0q().f[4]++;cov_1jz70q3n0q().s[18]++;if(this.isDestroyed){cov_1jz70q3n0q().b[6][0]++;cov_1jz70q3n0q().s[19]++;throw new ReferenceError('This PluginManager instance has been destroyed.');}else {cov_1jz70q3n0q().b[6][1]++;}cov_1jz70q3n0q().s[20]++;if((cov_1jz70q3n0q().b[8][0]++,typeof enabled!=='boolean')&&(cov_1jz70q3n0q().b[8][1]++,typeof enabled!=='undefined')){cov_1jz70q3n0q().b[7][0]++;cov_1jz70q3n0q().s[21]++;throw new TypeError(`'enabled' is not a 'boolean' or 'undefined'.`);}else {cov_1jz70q3n0q().b[7][1]++;}const results=(cov_1jz70q3n0q().s[22]++,[]);// Return all plugin data if enabled is not defined.
const allPlugins=(cov_1jz70q3n0q().s[23]++,enabled===void 0);cov_1jz70q3n0q().s[24]++;for(const entry of this.pluginMap.values()){cov_1jz70q3n0q().s[25]++;if((cov_1jz70q3n0q().b[10][0]++,allPlugins)||(cov_1jz70q3n0q().b[10][1]++,entry.enabled===enabled)){cov_1jz70q3n0q().b[9][0]++;cov_1jz70q3n0q().s[26]++;results.push(this.getPluginData(entry.name));}else {cov_1jz70q3n0q().b[9][1]++;}}cov_1jz70q3n0q().s[27]++;return results;}/**
    * Returns all method names or if a boolean is passed in will return method names for plugins by current enabled
    * state.
    *
    * @param {boolean|undefined} [enabled] - If enabled is a boolean it will return plugin methods names given their
    *                                        enabled state.
    *
    * @param {string|undefined}  [pluginName] - If a string then just this plugins methods names are returned.
    *
    * @returns {string[]} A list of method names
    */getMethodNames(enabled=(cov_1jz70q3n0q().b[11][0]++,void 0),pluginName=(cov_1jz70q3n0q().b[12][0]++,void 0)){cov_1jz70q3n0q().f[5]++;cov_1jz70q3n0q().s[28]++;if(this.isDestroyed){cov_1jz70q3n0q().b[13][0]++;cov_1jz70q3n0q().s[29]++;throw new ReferenceError('This PluginManager instance has been destroyed.');}else {cov_1jz70q3n0q().b[13][1]++;}cov_1jz70q3n0q().s[30]++;if((cov_1jz70q3n0q().b[15][0]++,typeof enabled!=='boolean')&&(cov_1jz70q3n0q().b[15][1]++,typeof enabled!=='undefined')){cov_1jz70q3n0q().b[14][0]++;cov_1jz70q3n0q().s[31]++;throw new TypeError(`'enabled' is not a 'boolean' or 'undefined'.`);}else {cov_1jz70q3n0q().b[14][1]++;}const results=(cov_1jz70q3n0q().s[32]++,{});const allEnabled=(cov_1jz70q3n0q().s[33]++,typeof enabled==='undefined');const allNames=(cov_1jz70q3n0q().s[34]++,typeof pluginName==='undefined');cov_1jz70q3n0q().s[35]++;for(const entry of this.pluginMap.values()){cov_1jz70q3n0q().s[36]++;if((cov_1jz70q3n0q().b[17][0]++,entry.instance)&&((cov_1jz70q3n0q().b[17][1]++,allEnabled)||(cov_1jz70q3n0q().b[17][2]++,entry.enabled===enabled))&&((cov_1jz70q3n0q().b[17][3]++,allNames)||(cov_1jz70q3n0q().b[17][4]++,entry.name===pluginName))){cov_1jz70q3n0q().b[16][0]++;cov_1jz70q3n0q().s[37]++;for(const name of s_GET_ALL_PROPERTY_NAMES(entry.instance)){cov_1jz70q3n0q().s[38]++;// Skip any names that are not a function or are the constructor.
if((cov_1jz70q3n0q().b[19][0]++,entry.instance[name]instanceof Function)&&(cov_1jz70q3n0q().b[19][1]++,name!=='constructor')){cov_1jz70q3n0q().b[18][0]++;cov_1jz70q3n0q().s[39]++;results[name]=true;}else {cov_1jz70q3n0q().b[18][1]++;}}}else {cov_1jz70q3n0q().b[16][1]++;}}cov_1jz70q3n0q().s[40]++;return Object.keys(results);}/**
    * Gets the plugin data for a plugin by name.
    *
    * @param {string}   pluginName - A plugin name.
    *
    * @returns {PluginData|undefined} The plugin data for a specific plugin.
    */getPluginData(pluginName){cov_1jz70q3n0q().f[6]++;cov_1jz70q3n0q().s[41]++;if(this.isDestroyed){cov_1jz70q3n0q().b[20][0]++;cov_1jz70q3n0q().s[42]++;throw new ReferenceError('This PluginManager instance has been destroyed.');}else {cov_1jz70q3n0q().b[20][1]++;}cov_1jz70q3n0q().s[43]++;if(typeof pluginName!=='string'){cov_1jz70q3n0q().b[21][0]++;cov_1jz70q3n0q().s[44]++;throw new TypeError(`'pluginName' is not a string.`);}else {cov_1jz70q3n0q().b[21][1]++;}const entry=(cov_1jz70q3n0q().s[45]++,this.pluginMap.get(pluginName));cov_1jz70q3n0q().s[46]++;if(entry instanceof PluginEntry){cov_1jz70q3n0q().b[22][0]++;cov_1jz70q3n0q().s[47]++;return JSON.parse(JSON.stringify(entry.data));}else {cov_1jz70q3n0q().b[22][1]++;}cov_1jz70q3n0q().s[48]++;return void 0;}// TODO FINISH IMPLEMENTING
// /**
//  * Returns the event binding names registered on any associated plugin EventbusProxy.
//  *
//  * @param {string}   pluginName - Plugin name to set state.
//  *
//  * @returns {string[]} - Event binding names registered from the plugin.
//  *
//  * @param {undefined|object}  [options] - Options object. If undefined all plugin enabled state is returned.
//  *
//  * @param {string|string[]}   [options.pluginNames] - Plugin name or list of names to get state.
//  *
//  * @returns {boolean|Array<{pluginName: string, enabled: boolean}>} - Event binding names registered from a
//  *                                                                    plugin, list of plugins, or all plugins.
//  */
// newPluginEventNames({ pluginNames = [] } = {})
// {
//    if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }
//
//    if (typeof pluginName !== 'string') { throw new TypeError(`'pluginName' is not a string.`); }
//
//    const entry = this.pluginMap.get(pluginName);
//
//    return entry instanceof PluginEntry && entry.eventbusProxy ? entry.eventbusProxy.proxyEventNames : [];
// }
/**
    * Returns the event binding names registered on any associated plugin EventbusProxy.
    *
    * @param {string}   pluginName - Plugin name to set state.
    *
    * @returns {string[]} - Event binding names registered from the plugin.
    */getPluginEventNames(pluginName){cov_1jz70q3n0q().f[7]++;cov_1jz70q3n0q().s[49]++;if(this.isDestroyed){cov_1jz70q3n0q().b[23][0]++;cov_1jz70q3n0q().s[50]++;throw new ReferenceError('This PluginManager instance has been destroyed.');}else {cov_1jz70q3n0q().b[23][1]++;}cov_1jz70q3n0q().s[51]++;if(typeof pluginName!=='string'){cov_1jz70q3n0q().b[24][0]++;cov_1jz70q3n0q().s[52]++;throw new TypeError(`'pluginName' is not a string.`);}else {cov_1jz70q3n0q().b[24][1]++;}const entry=(cov_1jz70q3n0q().s[53]++,this.pluginMap.get(pluginName));cov_1jz70q3n0q().s[54]++;return (cov_1jz70q3n0q().b[26][0]++,entry instanceof PluginEntry)&&(cov_1jz70q3n0q().b[26][1]++,entry.eventbusProxy)?(cov_1jz70q3n0q().b[25][0]++,entry.eventbusProxy.proxyEventNames):(cov_1jz70q3n0q().b[25][1]++,[]);}/**
    * Returns the event binding names registered from each plugin.
    *
    * @param {string|string[]} [nameOrList] - An array / iterable of plugin names.
    *
    * @returns {Array<{pluginName: string, events: string[]}>} A list of objects with plugin name and event binding
    *                                                          names registered from the plugin.
    */getPluginsEventNames(nameOrList){cov_1jz70q3n0q().f[8]++;cov_1jz70q3n0q().s[55]++;if(this.isDestroyed){cov_1jz70q3n0q().b[27][0]++;cov_1jz70q3n0q().s[56]++;throw new ReferenceError('This PluginManager instance has been destroyed.');}else {cov_1jz70q3n0q().b[27][1]++;}cov_1jz70q3n0q().s[57]++;if(typeof nameOrList==='undefined'){cov_1jz70q3n0q().b[28][0]++;cov_1jz70q3n0q().s[58]++;nameOrList=this.pluginMap.keys();}else {cov_1jz70q3n0q().b[28][1]++;}cov_1jz70q3n0q().s[59]++;if(typeof nameOrList==='string'){cov_1jz70q3n0q().b[29][0]++;cov_1jz70q3n0q().s[60]++;nameOrList=[nameOrList];}else {cov_1jz70q3n0q().b[29][1]++;}const results=(cov_1jz70q3n0q().s[61]++,[]);cov_1jz70q3n0q().s[62]++;for(const pluginName of nameOrList){cov_1jz70q3n0q().s[63]++;results.push({pluginName,events:this.getPluginEventNames(pluginName)});}cov_1jz70q3n0q().s[64]++;return results;}/**
    * Returns the plugin names that registered the given event binding name.
    *
    * @param {string} eventName - An event name that plugins may have registered.
    *
    * @returns {string[]} A list of plugin names that has registered the given event name.
    */getPluginsByEventName(eventName){cov_1jz70q3n0q().f[9]++;cov_1jz70q3n0q().s[65]++;if(this.isDestroyed){cov_1jz70q3n0q().b[30][0]++;cov_1jz70q3n0q().s[66]++;throw new ReferenceError('This PluginManager instance has been destroyed.');}else {cov_1jz70q3n0q().b[30][1]++;}cov_1jz70q3n0q().s[67]++;if(typeof eventName!=='string'){cov_1jz70q3n0q().b[31][0]++;cov_1jz70q3n0q().s[68]++;throw new TypeError(`'eventName' is not a 'string'.`);}else {cov_1jz70q3n0q().b[31][1]++;}const results=(cov_1jz70q3n0q().s[69]++,[]);const pluginEventNames=(cov_1jz70q3n0q().s[70]++,this.getPluginsEventNames());cov_1jz70q3n0q().s[71]++;for(const entry of pluginEventNames){cov_1jz70q3n0q().s[72]++;if(entry.events.indexOf(eventName)>=0){cov_1jz70q3n0q().b[32][0]++;cov_1jz70q3n0q().s[73]++;results.push(entry.pluginName);}else {cov_1jz70q3n0q().b[32][1]++;}}cov_1jz70q3n0q().s[74]++;return results;}/**
    * Returns all plugin names or if a boolean is passed in will return plugin names by current enabled state.
    *
    * @param {boolean|undefined} enabled - If enabled is a boolean it will return plugins given their enabled state.
    *
    * @returns {Array<{plugin: string, method: string}>} A list of plugin names and method names.
    */getPluginMethodNames(enabled=(cov_1jz70q3n0q().b[33][0]++,void 0)){cov_1jz70q3n0q().f[10]++;cov_1jz70q3n0q().s[75]++;if(this.isDestroyed){cov_1jz70q3n0q().b[34][0]++;cov_1jz70q3n0q().s[76]++;throw new ReferenceError('This PluginManager instance has been destroyed.');}else {cov_1jz70q3n0q().b[34][1]++;}cov_1jz70q3n0q().s[77]++;if((cov_1jz70q3n0q().b[36][0]++,typeof enabled!=='boolean')&&(cov_1jz70q3n0q().b[36][1]++,typeof enabled!=='undefined')){cov_1jz70q3n0q().b[35][0]++;cov_1jz70q3n0q().s[78]++;throw new TypeError(`'enabled' is not a 'boolean' or 'undefined'.`);}else {cov_1jz70q3n0q().b[35][1]++;}const results=(cov_1jz70q3n0q().s[79]++,[]);const allPlugins=(cov_1jz70q3n0q().s[80]++,typeof enabled==='undefined');cov_1jz70q3n0q().s[81]++;for(const entry of this.pluginMap.values()){cov_1jz70q3n0q().s[82]++;if((cov_1jz70q3n0q().b[38][0]++,entry.instance)&&((cov_1jz70q3n0q().b[38][1]++,allPlugins)||(cov_1jz70q3n0q().b[38][2]++,entry.enabled===enabled))){cov_1jz70q3n0q().b[37][0]++;cov_1jz70q3n0q().s[83]++;for(const name of s_GET_ALL_PROPERTY_NAMES(entry.instance)){cov_1jz70q3n0q().s[84]++;// Skip any names that are not a function or are the constructor.
if((cov_1jz70q3n0q().b[40][0]++,entry.instance[name]instanceof Function)&&(cov_1jz70q3n0q().b[40][1]++,name!=='constructor')){cov_1jz70q3n0q().b[39][0]++;cov_1jz70q3n0q().s[85]++;results.push({plugin:entry.name,method:name});}else {cov_1jz70q3n0q().b[39][1]++;}}}else {cov_1jz70q3n0q().b[37][1]++;}}cov_1jz70q3n0q().s[86]++;return results;}/**
    * Returns all plugin names or if a boolean is passed in will return plugin names by current enabled state.
    *
    * @param {boolean|undefined} enabled - If enabled is a boolean it will return plugins given their enabled state.
    *
    * @returns {string[]} A list of plugin names optionally by enabled state.
    */getPluginNames(enabled=(cov_1jz70q3n0q().b[41][0]++,void 0)){cov_1jz70q3n0q().f[11]++;cov_1jz70q3n0q().s[87]++;if(this.isDestroyed){cov_1jz70q3n0q().b[42][0]++;cov_1jz70q3n0q().s[88]++;throw new ReferenceError('This PluginManager instance has been destroyed.');}else {cov_1jz70q3n0q().b[42][1]++;}cov_1jz70q3n0q().s[89]++;if((cov_1jz70q3n0q().b[44][0]++,typeof enabled!=='boolean')&&(cov_1jz70q3n0q().b[44][1]++,typeof enabled!=='undefined')){cov_1jz70q3n0q().b[43][0]++;cov_1jz70q3n0q().s[90]++;throw new TypeError(`'enabled' is not a 'boolean' or 'undefined'.`);}else {cov_1jz70q3n0q().b[43][1]++;}// Return all plugin names if enabled is not defined.
cov_1jz70q3n0q().s[91]++;if(enabled===void 0){cov_1jz70q3n0q().b[45][0]++;cov_1jz70q3n0q().s[92]++;return Array.from(this.pluginMap.keys());}else {cov_1jz70q3n0q().b[45][1]++;}const results=(cov_1jz70q3n0q().s[93]++,[]);cov_1jz70q3n0q().s[94]++;for(const entry of this.pluginMap.values()){cov_1jz70q3n0q().s[95]++;if(entry.enabled===enabled){cov_1jz70q3n0q().b[46][0]++;cov_1jz70q3n0q().s[96]++;results.push(entry.name);}else {cov_1jz70q3n0q().b[46][1]++;}}cov_1jz70q3n0q().s[97]++;return results;}/**
    * Returns a copy of the given plugin options.
    *
    * @param {string}   pluginName - Plugin name to retrieve.
    *
    * @returns {*} A copy of the given plugin options.
    */getPluginOptions(pluginName){cov_1jz70q3n0q().f[12]++;cov_1jz70q3n0q().s[98]++;if(this.isDestroyed){cov_1jz70q3n0q().b[47][0]++;cov_1jz70q3n0q().s[99]++;throw new ReferenceError('This PluginManager instance has been destroyed.');}else {cov_1jz70q3n0q().b[47][1]++;}cov_1jz70q3n0q().s[100]++;if(typeof pluginName!=='string'){cov_1jz70q3n0q().b[48][0]++;cov_1jz70q3n0q().s[101]++;throw new TypeError(`'pluginName' is not a string.`);}else {cov_1jz70q3n0q().b[48][1]++;}let result;const entry=(cov_1jz70q3n0q().s[102]++,this.pluginMap.get(pluginName));cov_1jz70q3n0q().s[103]++;if(entry instanceof PluginEntry){cov_1jz70q3n0q().b[49][0]++;cov_1jz70q3n0q().s[104]++;result=JSON.parse(JSON.stringify(entry.data.plugin.options));}else {cov_1jz70q3n0q().b[49][1]++;}cov_1jz70q3n0q().s[105]++;return result;}/**
    * Returns true if there is at least one plugin loaded with the given method name.
    *
    * @param {string}   methodName - Method name to test.
    *
    * @returns {boolean} - True method is found.
    */hasMethod(methodName){cov_1jz70q3n0q().f[13]++;cov_1jz70q3n0q().s[106]++;if(this.isDestroyed){cov_1jz70q3n0q().b[50][0]++;cov_1jz70q3n0q().s[107]++;throw new ReferenceError('This PluginManager instance has been destroyed.');}else {cov_1jz70q3n0q().b[50][1]++;}cov_1jz70q3n0q().s[108]++;if(typeof methodName!=='string'){cov_1jz70q3n0q().b[51][0]++;cov_1jz70q3n0q().s[109]++;throw new TypeError(`'methodName' is not a string.`);}else {cov_1jz70q3n0q().b[51][1]++;}cov_1jz70q3n0q().s[110]++;for(const plugin of this.pluginMap.values()){cov_1jz70q3n0q().s[111]++;if(typeof plugin.instance[methodName]==='function'){cov_1jz70q3n0q().b[52][0]++;cov_1jz70q3n0q().s[112]++;return true;}else {cov_1jz70q3n0q().b[52][1]++;}}cov_1jz70q3n0q().s[113]++;return false;}/**
    * Returns true if there is a plugin loaded with the given plugin name that also has a method with the given
    * method name.
    *
    * @param {string}   pluginName - Plugin name to test.
    * @param {string}   methodName - Method name to test.
    *
    * @returns {boolean} - True if a plugin and method exists.
    */hasPluginMethod(pluginName,methodName){cov_1jz70q3n0q().f[14]++;cov_1jz70q3n0q().s[114]++;if(this.isDestroyed){cov_1jz70q3n0q().b[53][0]++;cov_1jz70q3n0q().s[115]++;throw new ReferenceError('This PluginManager instance has been destroyed.');}else {cov_1jz70q3n0q().b[53][1]++;}cov_1jz70q3n0q().s[116]++;if(typeof pluginName!=='string'){cov_1jz70q3n0q().b[54][0]++;cov_1jz70q3n0q().s[117]++;throw new TypeError(`'pluginName' is not a string.`);}else {cov_1jz70q3n0q().b[54][1]++;}cov_1jz70q3n0q().s[118]++;if(typeof methodName!=='string'){cov_1jz70q3n0q().b[55][0]++;cov_1jz70q3n0q().s[119]++;throw new TypeError(`'methodName' is not a string.`);}else {cov_1jz70q3n0q().b[55][1]++;}const plugin=(cov_1jz70q3n0q().s[120]++,this.pluginMap.get(pluginName));cov_1jz70q3n0q().s[121]++;return (cov_1jz70q3n0q().b[56][0]++,plugin instanceof PluginEntry)&&(cov_1jz70q3n0q().b[56][1]++,typeof plugin[methodName]==='function');}/**
    * Sets the eventbus associated with this plugin manager. If any previous eventbus was associated all plugin manager
    * events will be removed then added to the new eventbus. If there are any existing plugins being managed their
    * events will be removed from the old eventbus and then `onPluginLoad` will be called with the new eventbus.
    *
    * @param {object}     options - An options object.
    *
    * @param {Eventbus}   options.oldEventbus - The old eventbus to disassociate.
    *
    * @param {Eventbus}   options.newEventbus - The new eventbus to associate.
    *
    * @param {string}     options.oldPrepend - The old event prepend.
    *
    * @param {string}     options.newPrepend - The new event prepend.
    */async setEventbus({oldEventbus,newEventbus,oldPrepend,newPrepend}=(cov_1jz70q3n0q().b[57][0]++,{})){cov_1jz70q3n0q().f[15]++;cov_1jz70q3n0q().s[122]++;if((cov_1jz70q3n0q().b[59][0]++,oldEventbus!==null)&&(cov_1jz70q3n0q().b[59][1]++,oldEventbus!==void 0)){cov_1jz70q3n0q().b[58][0]++;cov_1jz70q3n0q().s[123]++;oldEventbus.off(`${oldPrepend}:get:all:plugin:data`,this.getAllPluginData,this);cov_1jz70q3n0q().s[124]++;oldEventbus.off(`${oldPrepend}:get:method:names`,this.getMethodNames,this);cov_1jz70q3n0q().s[125]++;oldEventbus.off(`${oldPrepend}:get:plugin:data`,this.getPluginData,this);cov_1jz70q3n0q().s[126]++;oldEventbus.off(`${oldPrepend}:get:plugin:event:names`,this.getPluginEventNames,this);cov_1jz70q3n0q().s[127]++;oldEventbus.off(`${oldPrepend}:get:plugin:method:names`,this.getPluginMethodNames,this);cov_1jz70q3n0q().s[128]++;oldEventbus.off(`${oldPrepend}:get:plugin:names`,this.getPluginNames,this);cov_1jz70q3n0q().s[129]++;oldEventbus.off(`${oldPrepend}:get:plugin:options`,this.getPluginOptions,this);cov_1jz70q3n0q().s[130]++;oldEventbus.off(`${oldPrepend}:get:plugins:by:event:name`,this.getPluginsByEventName,this);cov_1jz70q3n0q().s[131]++;oldEventbus.off(`${oldPrepend}:get:plugins:event:names`,this.getPluginsEventNames,this);cov_1jz70q3n0q().s[132]++;oldEventbus.off(`${oldPrepend}:has:method`,this.hasMethod,this);cov_1jz70q3n0q().s[133]++;oldEventbus.off(`${oldPrepend}:has:plugin:method`,this.hasPluginMethod,this);}else {cov_1jz70q3n0q().b[58][1]++;}cov_1jz70q3n0q().s[134]++;if((cov_1jz70q3n0q().b[61][0]++,newEventbus!==null)&&(cov_1jz70q3n0q().b[61][1]++,newEventbus!==void 0)){cov_1jz70q3n0q().b[60][0]++;cov_1jz70q3n0q().s[135]++;newEventbus.on(`${newPrepend}:get:all:plugin:data`,this.getAllPluginData,this);cov_1jz70q3n0q().s[136]++;newEventbus.on(`${newPrepend}:get:method:names`,this.getMethodNames,this);cov_1jz70q3n0q().s[137]++;newEventbus.on(`${newPrepend}:get:plugin:data`,this.getPluginData,this);cov_1jz70q3n0q().s[138]++;newEventbus.on(`${newPrepend}:get:plugin:event:names`,this.getPluginEventNames,this);cov_1jz70q3n0q().s[139]++;newEventbus.on(`${newPrepend}:get:plugin:method:names`,this.getPluginMethodNames,this);cov_1jz70q3n0q().s[140]++;newEventbus.on(`${newPrepend}:get:plugin:names`,this.getPluginNames,this);cov_1jz70q3n0q().s[141]++;newEventbus.on(`${newPrepend}:get:plugin:options`,this.getPluginOptions,this);cov_1jz70q3n0q().s[142]++;newEventbus.on(`${newPrepend}:get:plugins:by:event:name`,this.getPluginsByEventName,this);cov_1jz70q3n0q().s[143]++;newEventbus.on(`${newPrepend}:get:plugins:event:names`,this.getPluginsEventNames,this);cov_1jz70q3n0q().s[144]++;newEventbus.on(`${newPrepend}:has:method`,this.hasMethod,this);cov_1jz70q3n0q().s[145]++;newEventbus.on(`${newPrepend}:has:plugin:method`,this.hasPluginMethod,this);}else {cov_1jz70q3n0q().b[60][1]++;}}}// Module Private ----------------------------------------------------------------------------------------------------
/**
 * Walks an objects inheritance tree collecting property names stopping before `Object` is reached.
 *
 * @param {object}   obj - object to walks.
 *
 * @returns {string[]} A list of property names.
 * @ignore
 */cov_1jz70q3n0q().s[146]++;const s_GET_ALL_PROPERTY_NAMES=obj=>{cov_1jz70q3n0q().f[16]++;const props=(cov_1jz70q3n0q().s[147]++,[]);cov_1jz70q3n0q().s[148]++;do{cov_1jz70q3n0q().s[149]++;Object.getOwnPropertyNames(obj).forEach(prop=>{cov_1jz70q3n0q().f[17]++;cov_1jz70q3n0q().s[150]++;if(props.indexOf(prop)===-1){cov_1jz70q3n0q().b[63][0]++;cov_1jz70q3n0q().s[151]++;props.push(prop);}else {cov_1jz70q3n0q().b[63][1]++;}});cov_1jz70q3n0q().s[152]++;obj=Object.getPrototypeOf(obj);}while((cov_1jz70q3n0q().b[62][0]++,typeof obj!=='undefined')&&(cov_1jz70q3n0q().b[62][1]++,obj!==null)&&(cov_1jz70q3n0q().b[62][2]++,!(obj===Object.prototype)));cov_1jz70q3n0q().s[153]++;return props;};/**
 * @typedef {object} PluginData
 *
 * @property {object}   manager - Data about the plugin manager
 *
 * @property {string}   manager.eventPrepend - The plugin manager event prepend string.
 *
 * @property {object}   module - Optional object hash to associate with plugin.
 *
 * @property {object}   plugin - Data about the plugin.
 *
 * @property {string}   plugin.name - The name of the plugin.
 *
 * @property {string}   plugin.scopedName - The name of the plugin with the plugin managers event prepend string.
 *
 * @property {string}   plugin.target - Defines the target NPM module to loaded or defines a local file (full
 *                               path or relative to current working directory to load.
 *
 * @property {string}   plugin.targetEscaped - Provides the target, but properly escaped for RegExp usage.
 *
 * @property {string}   plugin.type - The type of plugin: `instance` +
 *                                    In Node: `import-module`, `import-path`, `require-module`, or `require-path`.
 *                                    In Browser: `import-path`, `import-url`.
 *
 * @property {object}   plugin.options - Defines an object of options for the plugin.
 */ /**
 * Interface for PluginSupport instances.
 *
 * @interface PluginSupportImpl
 */ /**
 * A method to invoke when the plugin manager is destroyed.
 *
 * @function
 * @async
 * @name PluginSupportImpl#destroy
 */ /**
 * A method to invoke when the plugin manager eventbus is set.
 *
 * @function
 * @async
 * @name PluginSupportImpl#setEventbus
 */

function cov_1n1i05bp8w(){var path="/Volumes/Data/program/javascript/projects/TyphonJS/repos/typhonrt/typhonjs-plugin/manager/src/browser/index.js";var hash="6bff039ffe3223477269c18cc76b7b2d8ea2d199";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Volumes/Data/program/javascript/projects/TyphonJS/repos/typhonrt/typhonjs-plugin/manager/src/browser/index.js",statementMap:{},fnMap:{},branchMap:{},s:{},f:{},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"6bff039ffe3223477269c18cc76b7b2d8ea2d199"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1n1i05bp8w=function(){return actualCoverage;};}return actualCoverage;}cov_1n1i05bp8w();

export default PluginManager;
export { Eventbus, EventbusProxy, PluginSupport, isValidConfig };
//# sourceMappingURL=PluginManager.js.map
