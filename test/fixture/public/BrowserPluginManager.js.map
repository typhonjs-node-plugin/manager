{"version":3,"file":"BrowserPluginManager.js","sources":["./node_modules/@typhonjs-plugin/eventbus/src/EventbusProxy.js","./node_modules/@typhonjs-plugin/eventbus/src/Eventbus.js","./node_modules/@typhonjs-utils/object/src/objectUtil.js","./src/PluginEntry.js","./src/PluginEvent.js","./src/isValidConfig.js","./src/AbstractPluginManager.js","./src/browser/BrowserPluginManager.js","./src/PluginSupport.js"],"sourcesContent":["import Eventbus from './Eventbus.js';\n\n/**\n * EventbusProxy provides a protected proxy of another Eventbus instance.\n *\n * The main use case of EventbusProxy is to allow indirect access to an eventbus. This is handy when it comes to\n * managing the event lifecycle for a plugin system. When a plugin is added it could receive a callback, perhaps named\n * `onPluginLoaded`, which contains an EventbusProxy instance rather than the direct eventbus. This EventbusProxy\n * instance is associated in the management system controlling plugin lifecycle. When a plugin is removed / unloaded the\n * management system can automatically unregister all events for the plugin without requiring the plugin author doing it\n * correctly if they had full control. IE This allows to plugin system to guarantee no dangling listeners.\n *\n * EventbusProxy provides the on / off, once, and trigger methods with the same signatures as found in\n * Eventbus. However, the proxy tracks all added event bindings which is used to proxy between the target\n * eventbus which is passed in from the constructor. All registration methods (on / off / once) proxy. In addition\n * there is a `destroy` method which will unregister all of proxied events and remove references to the managed\n * eventbus. Any further usage of a destroyed EventbusProxy instance results in a ReferenceError thrown.\n *\n * Finally the EventbusProxy only allows events registered through it to be turned off providing a buffer between\n * any consumers such that they can not turn off other registrations made on the eventbus or other proxy instances.\n */\nexport default class EventbusProxy\n{\n   /**\n    * Creates the event proxy with an existing instance of TyphonEvents.\n    *\n    * @param {Eventbus}   eventbus - The target eventbus instance.\n    */\n   constructor(eventbus)\n   {\n      if (!(eventbus instanceof Eventbus))\n      {\n         throw new TypeError(`'eventbus' is not an instance of Eventbus.`);\n      }\n\n      /**\n       * Stores the target eventbus.\n       *\n       * @type {Eventbus}\n       * @private\n       */\n      this._eventbus = eventbus;\n\n      /**\n       * Stores all proxied event bindings.\n       *\n       * @type {Array<{name: string, callback: Function, context: *}>}\n       * @private\n       */\n      this._events = [];\n   }\n\n   /**\n    * Unregisters all proxied events from the target eventbus and removes any local references. All subsequent calls\n    * after `destroy` has been called result in a ReferenceError thrown.\n    */\n   destroy()\n   {\n      if (this._eventbus !== null)\n      {\n         for (const event of this._events) { this._eventbus.off(event.name, event.callback, event.context); }\n      }\n\n      this._events = [];\n\n      this._eventbus = null;\n   }\n\n   /**\n    * Iterates over all of events from the proxied eventbus yielding an array with event name, callback function, and\n    * event context.\n    *\n    * @param {string} [eventName] Optional event name to iterate over.\n    *\n    * @yields\n    */\n   *entries(eventName = void 0)\n   {\n      if (this._eventbus === null) { throw new ReferenceError('This EventbusProxy instance has been destroyed.'); }\n\n      for (const entry of this._eventbus.entries(eventName))\n      {\n         yield entry;\n      }\n   }\n\n   /**\n    * Returns the current proxied eventbus event count.\n    *\n    * @returns {number} Returns the current proxied event count.\n    */\n   get eventCount()\n   {\n      if (this._eventbus === null) { throw new ReferenceError('This EventbusProxy instance has been destroyed.'); }\n\n      return this._eventbus.eventCount;\n   }\n\n   /**\n    * Returns the event names of proxied eventbys event listeners.\n    *\n    * @returns {string[]} Returns the event names of proxied event listeners.\n    */\n   get eventNames()\n   {\n      if (this._eventbus === null) { throw new ReferenceError('This EventbusProxy instance has been destroyed.'); }\n\n      return this._eventbus.eventNames;\n   }\n\n   /**\n    * Returns whether this EventbusProxy has already been destroyed.\n    *\n    * @returns {boolean} Is destroyed state.\n    */\n   get isDestroyed()\n   {\n      return this._eventbus === null;\n   }\n\n   /**\n    * Returns the target eventbus name.\n    *\n    * @returns {string|*} The target eventbus name.\n    */\n   get name()\n   {\n      if (this._eventbus === null) { throw new ReferenceError('This EventbusProxy instance has been destroyed.'); }\n\n      return this._eventbus.name;\n   }\n\n   /**\n    * Remove a previously-bound proxied event binding.\n    *\n    * Please see {@link Eventbus#off}.\n    *\n    * @param {string}   [name]     - Event name(s)\n    *\n    * @param {Function} [callback] - Event callback function\n    *\n    * @param {object}   [context]  - Event context\n    *\n    * @returns {EventbusProxy} This EventbusProxy.\n    */\n   off(name = void 0, callback = void 0, context = void 0)\n   {\n      if (this._eventbus === null) { throw new ReferenceError('This EventbusProxy instance has been destroyed.'); }\n\n      const hasName = typeof name !== 'undefined' && name !== null;\n      const hasCallback = typeof callback !== 'undefined' && callback !== null;\n      const hasContext = typeof context !== 'undefined' && context !== null;\n\n      // Remove all events if `off()` is invoked.\n      if (!hasName && !hasCallback && !hasContext)\n      {\n         for (const event of this._events) { this._eventbus.off(event.name, event.callback, event.context); }\n         this._events = [];\n      }\n      else\n      {\n         const values = {};\n         if (hasName) { values.name = name; }\n         if (hasCallback) { values.callback = callback; }\n         if (hasContext) { values.context = context; }\n\n         for (let cntr = this._events.length; --cntr >= 0;)\n         {\n            const event = this._events[cntr];\n\n            let foundMatch = true;\n\n            for (const key in values)\n            {\n               if (event[key] !== values[key]) { foundMatch = false; break; }\n            }\n\n            if (foundMatch)\n            {\n               this._eventbus.off(values.name, values.callback, values.context);\n               this._events.splice(cntr, 1);\n            }\n         }\n      }\n\n      return this;\n   }\n\n   /**\n    * Bind a callback function to an object. The callback will be invoked whenever the event is fired. If you have a\n    * large number of different events on a page, the convention is to use colons to namespace them: \"poll:start\", or\n    * \"change:selection\".\n    *\n    * This is proxied through `listenTo` of an internal Events instance instead of directly modifying the target\n    * eventbus.\n    *\n    * Please see {@link Eventbus#on}.\n    *\n    * @param {string}   name     - Event name(s)\n    * @param {Function} callback - Event callback function\n    * @param {object}   context  - Event context\n    * @returns {EventbusProxy} This EventbusProxy.\n    */\n   on(name, callback, context = void 0)\n   {\n      if (this._eventbus === null) { throw new ReferenceError('This EventbusProxy instance has been destroyed.'); }\n\n      this._eventbus.on(name, callback, context);\n\n      this._events.push({ name, callback, context });\n\n      return this;\n   }\n\n   /**\n    * Iterates over all stored proxy events yielding an array with event name, callback function, and event context.\n    *\n    * @param {string} [eventName] Optional event name to iterate over.\n    *\n    * @yields\n    */\n   *proxyEntries(eventName = void 0)\n   {\n      if (this._eventbus === null) { throw new ReferenceError('This EventbusProxy instance has been destroyed.'); }\n\n      /* c8 ignore next */\n      if (!this._events) { return; }\n\n      if (eventName)\n      {\n         for (const event of this._events)\n         {\n            if (eventName === event.name) { yield [event.name, event.callback, event.context]; }\n         }\n      }\n      else\n      {\n         for (const event of this._events)\n         {\n            yield [event.name, event.callback, event.context];\n         }\n      }\n   }\n\n   /**\n    * Returns the current proxied event count.\n    *\n    * @returns {number} Returns the current proxied event count.\n    */\n   get proxyEventCount()\n   {\n      if (this._eventbus === null) { throw new ReferenceError('This EventbusProxy instance has been destroyed.'); }\n\n      return this._events.length;\n   }\n\n   /**\n    * Returns the event names of proxied event listeners.\n    *\n    * @returns {string[]} Returns the event names of proxied event listeners.\n    */\n   get proxyEventNames()\n   {\n      if (this._eventbus === null) { throw new ReferenceError('This EventbusProxy instance has been destroyed.'); }\n\n      if (!this._events) { return []; }\n\n      const eventNames = {};\n\n      for (const event of this._events) { eventNames[event.name] = true; }\n\n      return Object.keys(eventNames);\n   }\n\n   /**\n    * Trigger callbacks for the given event, or space-delimited list of events. Subsequent arguments to trigger will be\n    * passed along to the event callbacks.\n    *\n    * Please see {@link Eventbus#trigger}.\n    *\n    * @returns {EventbusProxy} This EventbusProxy.\n    */\n   trigger()\n   {\n      if (this._eventbus === null) { throw new ReferenceError('This EventbusProxy instance has been destroyed.'); }\n\n      this._eventbus.trigger(...arguments);\n\n      return this;\n   }\n\n   /**\n    * Provides `trigger` functionality, but collects any returned Promises from invoked targets and returns a\n    * single Promise generated by `Promise.resolve` for a single value or `Promise.all` for multiple results. This is\n    * a very useful mechanism to invoke asynchronous operations over an eventbus.\n    *\n    * Please see {@link Eventbus#triggerAsync}.\n    *\n    * @returns {Promise} A Promise to returning any results.\n    */\n   triggerAsync()\n   {\n      if (this._eventbus === null) { throw new ReferenceError('This EventbusProxy instance has been destroyed.'); }\n\n      return this._eventbus.triggerAsync(...arguments);\n   }\n\n   /**\n    * Defers invoking `trigger`. This is useful for triggering events in the next clock tick.\n    *\n    * Please see {@link Eventbus#triggerDefer}.\n    *\n    * @returns {EventbusProxy} This EventbusProxy.\n    */\n   triggerDefer()\n   {\n      if (this._eventbus === null) { throw new ReferenceError('This EventbusProxy instance has been destroyed.'); }\n\n      this._eventbus.triggerDefer(...arguments);\n\n      return this;\n   }\n\n   /**\n    * Provides `trigger` functionality, but collects any returned result or results from invoked targets as a single\n    * value or in an array and passes it back to the callee in a synchronous manner.\n    *\n    * Please see {@link Eventbus#triggerSync}.\n    *\n    * @returns {*|Array.<*>} An Array of returned results.\n    */\n   triggerSync()\n   {\n      if (this._eventbus === null) { throw new ReferenceError('This EventbusProxy instance has been destroyed.'); }\n\n      return this._eventbus.triggerSync(...arguments);\n   }\n}\n","import EventbusProxy from './EventbusProxy.js';\n\n/**\n * `@typhonjs-plugin/eventbus` / Provides the ability to bind and trigger custom named events.\n *\n * This module is an evolution of Backbone Events. (http://backbonejs.org/#Events). Eventbus extends the\n * functionality provided in Backbone Events with additional triggering methods to receive asynchronous and\n * synchronous results.\n *\n * ---------------\n */\nexport default class Eventbus\n{\n   /**\n    * Provides a constructor which optionally takes the eventbus name.\n    *\n    * @param {string}   eventbusName - Optional eventbus name.\n    */\n   constructor(eventbusName = void 0)\n   {\n      /**\n       * Stores the name of this eventbus.\n       *\n       * @type {string}\n       * @private\n       */\n      this._eventbusName = eventbusName;\n   }\n\n   /**\n    * Creates an EventProxy wrapping this events instance. An EventProxy proxies events allowing all listeners added\n    * to be easily removed from the wrapped Events instance.\n    *\n    * @returns {EventbusProxy} A new EventbusProxy for this eventbus.\n    */\n   createProxy()\n   {\n      return new EventbusProxy(this);\n   }\n\n   /**\n    * Iterates over all stored events yielding an array with event name, callback function, and event context.\n    *\n    * @param {string} [eventName] Optional event name to iterate over.\n    *\n    * @yields\n    */\n   *entries(eventName = void 0)\n   {\n      /* c8 ignore next */\n      if (!this._events) { return; }\n\n      if (eventName)\n      {\n         for (const event of this._events[eventName])\n         {\n            yield [eventName, event.callback, event.ctx];\n         }\n      }\n      else\n      {\n         for (const name in this._events)\n         {\n            for (const event of this._events[name])\n            {\n               yield [name, event.callback, event.ctx];\n            }\n         }\n      }\n   }\n\n   /**\n    * Returns the current event count.\n    *\n    * @returns {number} The current proxied event count.\n    */\n   get eventCount()\n   {\n      let count = 0;\n\n      for (const name in this._events) { count += this._events[name].length; }\n\n      return count;\n   }\n\n   /**\n    * Returns the event names of registered event listeners.\n    *\n    * @returns {string[]} The event names of registered event listeners.\n    */\n   get eventNames()\n   {\n      /* c8 ignore next */\n      if (!this._events) { return []; }\n\n      return Object.keys(this._events);\n   }\n\n   /**\n    * Returns the current eventbus name.\n    *\n    * @returns {string|*} The current eventbus name.\n    */\n   get name()\n   {\n      return this._eventbusName;\n   }\n\n   /**\n    * Tell an object to listen to a particular event on an other object. The advantage of using this form, instead of\n    * other.on(event, callback, object), is that listenTo allows the object to keep track of the events, and they can\n    * be removed all at once later on. The callback will always be called with object as context.\n    *\n    * @example\n    * view.listenTo(model, 'change', view.render);\n    *\n    * @see http://backbonejs.org/#Events-listenTo\n    *\n    * @param {object}   obj         - Event context\n    * @param {string}   name        - Event name(s)\n    * @param {Function} callback    - Event callback function\n    * @param {object}   [context]   - Optional: event context\n    * @returns {Eventbus} This Eventbus instance.\n    */\n   listenTo(obj, name, callback, context = this)\n   {\n      if (!obj) { return this; }\n      const id = obj._listenId || (obj._listenId = s_UNIQUE_ID('l'));\n      const listeningTo = this._listeningTo || (this._listeningTo = {});\n      let listening = listeningTo[id];\n\n      // This object is not listening to any other events on `obj` yet.\n      // Setup the necessary references to track the listening callbacks.\n      if (!listening)\n      {\n         const thisId = this._listenId || (this._listenId = s_UNIQUE_ID('l'));\n         listening = listeningTo[id] = { obj, objId: id, id: thisId, listeningTo, count: 0 };\n      }\n\n      // Bind callbacks on obj, and keep track of them on listening.\n      s_INTERNAL_ON(obj, name, callback, context, listening);\n      return this;\n   }\n\n   /**\n    * Just like `listenTo`, but causes the bound callback to fire only once before being removed.\n    *\n    * @see http://backbonejs.org/#Events-listenToOnce\n    *\n    * @param {object}   obj      - Event context\n    * @param {string}   name     - Event name(s)\n    * @param {Function} callback - Event callback function\n    * @param {object}   [context=this] - Optional: event context\n    * @returns {Eventbus} This Eventbus instance.\n    */\n   listenToOnce(obj, name, callback, context = this)\n   {\n      // Map the event into a `{event: once}` object.\n      const events = s_EVENTS_API(s_ONCE_MAP, {}, name, callback, this.stopListening.bind(this, obj));\n\n      return this.listenTo(obj, events, void 0, context);\n   }\n\n   /**\n    * Remove a previously-bound callback function from an object. If no context is specified, all of the versions of\n    * the callback with different contexts will be removed. If no callback is specified, all callbacks for the event\n    * will be removed. If no event is specified, callbacks for all events will be removed.\n    *\n    * Note that calling model.off(), for example, will indeed remove all events on the model — including events that\n    * Backbone uses for internal bookkeeping.\n    *\n    * @example\n    * // Removes just the `onChange` callback.\n    * object.off(\"change\", onChange);\n    *\n    * // Removes all \"change\" callbacks.\n    * object.off(\"change\");\n    *\n    * // Removes the `onChange` callback for all events.\n    * object.off(null, onChange);\n    *\n    * // Removes all callbacks for `context` for all events.\n    * object.off(null, null, context);\n    *\n    * // Removes all callbacks on `object`.\n    * object.off();\n    *\n    * @see http://backbonejs.org/#Events-off\n    *\n    * @param {string}   name     - Event name(s)\n    * @param {Function} callback - Event callback function\n    * @param {object}   context  - Event context\n    * @returns {Eventbus} This Eventbus instance.\n    */\n   off(name, callback = void 0, context = void 0)\n   {\n      /* c8 ignore next */\n      if (!this._events) { return this; }\n\n      /**\n       * @type {*}\n       * @protected\n       */\n      this._events = s_EVENTS_API(s_OFF_API, this._events, name, callback, { context, listeners: this._listeners });\n\n      return this;\n   }\n\n   /**\n    * Bind a callback function to an object. The callback will be invoked whenever the event is fired. If you have a\n    * large number of different events on a page, the convention is to use colons to namespace them: \"poll:start\", or\n    * \"change:selection\".\n    *\n    * To supply a context value for this when the callback is invoked, pass the optional last argument:\n    * model.on('change', this.render, this) or model.on({change: this.render}, this).\n    *\n    * @example\n    * The event string may also be a space-delimited list of several events...\n    * book.on(\"change:title change:author\", ...);\n    *\n    * @example\n    * Callbacks bound to the special \"all\" event will be triggered when any event occurs, and are passed the name of\n    * the event as the first argument. For example, to proxy all events from one object to another:\n    * proxy.on(\"all\", function(eventName) {\n    *    object.trigger(eventName);\n    * });\n    *\n    * @example\n    * All Backbone event methods also support an event map syntax, as an alternative to positional arguments:\n    * book.on({\n    *    \"change:author\": authorPane.update,\n    *    \"change:title change:subtitle\": titleView.update,\n    *    \"destroy\": bookView.remove\n    * });\n    *\n    * @see http://backbonejs.org/#Events-on\n    *\n    * @param {string}   name     - Event name(s)\n    * @param {Function} callback - Event callback function\n    * @param {object}   context  - Event context\n    * @returns {Eventbus} This Eventbus instance.\n    */\n   on(name, callback, context = void 0)\n   {\n      return s_INTERNAL_ON(this, name, callback, context, void 0);\n   }\n\n   /**\n    * Just like `on`, but causes the bound callback to fire only once before being removed. Handy for saying \"the next\n    * time that X happens, do this\". When multiple events are passed in using the space separated syntax, the event\n    * will fire once for every event you passed in, not once for a combination of all events\n    *\n    * @see http://backbonejs.org/#Events-once\n    *\n    * @param {string}   name     - Event name(s)\n    * @param {Function} callback - Event callback function\n    * @param {object}   context  - Event context\n    * @returns {Eventbus} This Eventbus instance.\n    */\n   once(name, callback, context = void 0)\n   {\n      // Map the event into a `{event: once}` object.\n      const events = s_EVENTS_API(s_ONCE_MAP, {}, name, callback, this.off.bind(this));\n\n      if (typeof name === 'string' && (context === null || typeof context === 'undefined')) { callback = void 0; }\n\n      return this.on(events, callback, context);\n   }\n\n   /**\n    * Tell an object to stop listening to events. Either call stopListening with no arguments to have the object remove\n    * all of its registered callbacks ... or be more precise by telling it to remove just the events it's listening to\n    * on a specific object, or a specific event, or just a specific callback.\n    *\n    * @example\n    * view.stopListening();\n    *\n    * view.stopListening(model);\n    *\n    * @see http://backbonejs.org/#Events-stopListening\n    *\n    * @param {object}   obj            - Event context\n    * @param {string}   name           - Event name(s)\n    * @param {Function} callback       - Event callback function\n    * @param {object}   [context=this] - Optional: event context\n    * @returns {Eventbus} This Eventbus instance.\n    */\n   stopListening(obj, name = void 0, callback = void 0, context = this)\n   {\n      const listeningTo = this._listeningTo;\n      if (!listeningTo) { return this; }\n\n      const ids = obj ? [obj._listenId] : Object.keys(listeningTo);\n\n      for (let i = 0; i < ids.length; i++)\n      {\n         const listening = listeningTo[ids[i]];\n\n         // If listening doesn't exist, this object is not currently listening to obj. Break out early.\n         if (!listening) { break; }\n\n         listening.obj.off(name, callback, context);\n      }\n\n      return this;\n   }\n\n   /**\n    * Trigger callbacks for the given event, or space-delimited list of events. Subsequent arguments to trigger will be\n    * passed along to the event callbacks.\n    *\n    * @see http://backbonejs.org/#Events-trigger\n    *\n    * @param {string}   name  - Event name(s)\n    * @returns {Eventbus} This Eventbus instance.\n    */\n   trigger(name)\n   {\n      /* c8 ignore next */\n      if (!this._events) { return this; }\n\n      const length = Math.max(0, arguments.length - 1);\n      const args = new Array(length);\n\n      for (let i = 0; i < length; i++) { args[i] = arguments[i + 1]; }\n\n      s_EVENTS_TARGET_API(s_TRIGGER_API, s_TRIGGER_EVENTS, this._events, name, void 0, args);\n\n      return this;\n   }\n\n   /**\n    * Provides `trigger` functionality, but collects any returned Promises from invoked targets and returns a\n    * single Promise generated by `Promise.resolve` for a single value or `Promise.all` for multiple results. This is\n    * a very useful mechanism to invoke asynchronous operations over an eventbus.\n    *\n    * @param {string}   name  - Event name(s)\n    * @returns {Promise} A Promise with any results.\n    */\n   async triggerAsync(name)\n   {\n      /* c8 ignore next */\n      if (!this._events) { return Promise.resolve([]); }\n\n      const length = Math.max(0, arguments.length - 1);\n      const args = new Array(length);\n      for (let i = 0; i < length; i++) { args[i] = arguments[i + 1]; }\n\n      const promise = s_EVENTS_TARGET_API(s_TRIGGER_API, s_TRIGGER_ASYNC_EVENTS, this._events, name, void 0, args);\n\n      return promise !== void 0 ? promise : Promise.resolve();\n   }\n\n   /**\n    * Defers invoking `trigger`. This is useful for triggering events in the next clock tick.\n    *\n    * @returns {Eventbus} This Eventbus instance.\n    */\n   triggerDefer()\n   {\n      setTimeout(() => { this.trigger(...arguments); }, 0);\n\n      return this;\n   }\n\n   /**\n    * Provides `trigger` functionality, but collects any returned result or results from invoked targets as a single\n    * value or in an array and passes it back to the callee in a synchronous manner.\n    *\n    * @param {string}   name  - Event name(s)\n    * @returns {*|Array<*>} The results of the event invocation.\n    */\n   triggerSync(name)\n   {\n      /* c8 ignore next */\n      if (!this._events) { return void 0; }\n\n      const start = 1;\n      const length = Math.max(0, arguments.length - 1);\n      const args = new Array(length);\n      for (let i = 0; i < length; i++) { args[i] = arguments[i + start]; }\n\n      return s_EVENTS_TARGET_API(s_TRIGGER_API, s_TRIGGER_SYNC_EVENTS, this._events, name, void 0, args);\n   }\n}\n\n// Private / internal methods ---------------------------------------------------------------------------------------\n\n/**\n * Regular expression used to split event strings.\n *\n * @type {RegExp}\n */\nconst s_EVENT_SPLITTER = /\\s+/;\n\n/**\n * Iterates over the standard `event, callback` (as well as the fancy multiple space-separated events `\"change blur\",\n * callback` and jQuery-style event maps `{event: callback}`).\n *\n * @param {Function} iteratee    - Event operation to invoke.\n * @param {object.<{callback: Function, context: object, ctx: object, listening:{}}>} events - Events object\n * @param {string|object} name   - A single event name, compound event names, or a hash of event names.\n * @param {Function} callback    - Event callback function\n * @param {object}   opts        - Optional parameters\n * @returns {*} The Events object.\n */\nconst s_EVENTS_API = (iteratee, events, name, callback, opts) =>\n{\n   let i = 0, names;\n   if (name && typeof name === 'object')\n   {\n      // Handle event maps.\n      if (callback !== void 0 && 'context' in opts && opts.context === void 0) { opts.context = callback; }\n      for (names = Object.keys(name); i < names.length; i++)\n      {\n         events = s_EVENTS_API(iteratee, events, names[i], name[names[i]], opts);\n      }\n   }\n   else if (name && s_EVENT_SPLITTER.test(name))\n   {\n      // Handle space-separated event names by delegating them individually.\n      for (names = name.split(s_EVENT_SPLITTER); i < names.length; i++)\n      {\n         events = iteratee(events, names[i], callback, opts);\n      }\n   }\n   else\n   {\n      // Finally, standard events.\n      events = iteratee(events, name, callback, opts);\n   }\n   return events;\n};\n\n/**\n * Iterates over the standard `event, callback` (as well as the fancy multiple space-separated events `\"change blur\",\n * callback` and jQuery-style event maps `{event: callback}`).\n *\n * @param {Function} iteratee       - Trigger API\n * @param {Function} iterateeTarget - Internal function which is dispatched to.\n * @param {Array<*>} events         - Array of stored event callback data.\n * @param {string}   name           - Event name(s)\n * @param {Function} callback       - callback\n * @param {object}   opts           - Optional parameters\n * @returns {*} The Events object.\n */\nconst s_EVENTS_TARGET_API = (iteratee, iterateeTarget, events, name, callback, opts) =>\n{\n   let i = 0, names;\n\n   if (name && typeof name === 'object')\n   {\n      // Handle event maps.\n      if (callback !== void 0 && 'context' in opts && opts.context === void 0) { opts.context = callback; }\n      for (names = Object.keys(name); i < names.length; i++)\n      {\n         events = s_EVENTS_API(iteratee, iterateeTarget, events, names[i], name[names[i]], opts);\n      }\n   }\n   else if (name && s_EVENT_SPLITTER.test(name))\n   {\n      // Handle space-separated event names by delegating them individually.\n      for (names = name.split(s_EVENT_SPLITTER); i < names.length; i++)\n      {\n         events = iteratee(iterateeTarget, events, names[i], callback, opts);\n      }\n   }\n   else\n   {\n      // Finally, standard events.\n      events = iteratee(iterateeTarget, events, name, callback, opts);\n   }\n\n   return events;\n};\n\n/**\n * Guard the `listening` argument from the public API.\n *\n * @param {Eventbus}   obj    - The Eventbus instance\n * @param {string}   name     - Event name\n * @param {Function} callback - Event callback\n * @param {object}   context  - Event context\n * @param {object.<{obj: object, objId: string, id: string, listeningTo: object, count: number}>} listening -\n *                              Listening object\n * @returns {Eventbus} The Eventbus instance.\n */\nconst s_INTERNAL_ON = (obj, name, callback, context, listening) =>\n{\n   obj._events = s_EVENTS_API(s_ON_API, obj._events || {}, name, callback, { context, ctx: obj, listening });\n\n   if (listening)\n   {\n      const listeners = obj._listeners || (obj._listeners = {});\n      listeners[listening.id] = listening;\n   }\n\n   return obj;\n};\n\n/**\n * The reducing API that removes a callback from the `events` object.\n *\n * @param {object.<{callback: Function, context: object, ctx: object, listening:{}}>} events - Events object\n * @param {string}   name     - Event name\n * @param {Function} callback - Event callback\n * @param {object}   options  - Optional parameters\n * @returns {Eventbus} The Eventbus object.\n */\nconst s_OFF_API = (events, name, callback, options) =>\n{\n   if (!events) { return; }\n\n   let i = 0, listening;\n   const context = options.context, listeners = options.listeners;\n\n   // Delete all events listeners and \"drop\" events.\n   if (!name && !callback && !context && listeners)\n   {\n      const ids = Object.keys(listeners);\n      for (; i < ids.length; i++)\n      {\n         listening = listeners[ids[i]];\n         delete listeners[listening.id];\n         delete listening.listeningTo[listening.objId];\n      }\n      return;\n   }\n\n   const names = name ? [name] : Object.keys(events);\n   for (; i < names.length; i++)\n   {\n      name = names[i];\n      const handlers = events[name];\n\n      // Bail out if there are no events stored.\n      /* c8 ignore next */\n      if (!handlers) { break; }\n\n      // Replace events if there are any remaining.  Otherwise, clean up.\n      const remaining = [];\n      for (let j = 0; j < handlers.length; j++)\n      {\n         const handler = handlers[j];\n         if (\n          callback && callback !== handler.callback &&\n          callback !== handler.callback._callback ||\n          context && context !== handler.context\n         )\n         {\n            remaining.push(handler);\n         }\n         else\n         {\n            listening = handler.listening;\n            if (listening && --listening.count === 0)\n            {\n               delete listeners[listening.id];\n               delete listening.listeningTo[listening.objId];\n            }\n         }\n      }\n\n      // Update tail event if the list has any events.  Otherwise, clean up.\n      if (remaining.length)\n      {\n         events[name] = remaining;\n      }\n      else\n      {\n         delete events[name];\n      }\n   }\n\n   return events;\n};\n\n/**\n * The reducing API that adds a callback to the `events` object.\n *\n * @param {object.<{callback: Function, context: object, ctx: object, listening:{}}>} events - Events object\n * @param {string}   name     - Event name\n * @param {Function} callback - Event callback\n * @param {object}   options  - Optional parameters\n * @returns {*} The Events object.\n */\nconst s_ON_API = (events, name, callback, options) =>\n{\n   if (callback)\n   {\n      const handlers = events[name] || (events[name] = []);\n      const context = options.context, ctx = options.ctx, listening = options.listening;\n\n      if (listening) { listening.count++; }\n\n      handlers.push({ callback, context, ctx: context || ctx, listening });\n   }\n   return events;\n};\n\n/**\n * Reduces the event callbacks into a map of `{event: onceWrapper}`. `offer` unbinds the `onceWrapper` after\n * it has been called.\n *\n * @param {object.<{callback: Function, context: object, ctx: object, listening:{}}>} map - Events object\n * @param {string}   name     - Event name\n * @param {Function} callback - Event callback\n * @param {Function} offer    - Function to invoke after event has been triggered once; `off()`\n * @returns {*} The Events object.\n */\nconst s_ONCE_MAP = function(map, name, callback, offer)\n{\n   if (callback)\n   {\n      const once = map[name] = () =>\n      {\n         offer(name, once);\n         return callback.apply(this, arguments);\n      };\n\n      once._callback = callback;\n   }\n   return map;\n};\n\n/**\n * Handles triggering the appropriate event callbacks.\n *\n * @param {Function} iterateeTarget - Internal function which is dispatched to.\n * @param {Array<*>} objEvents      - Array of stored event callback data.\n * @param {string}   name           - Event name(s)\n * @param {Function} cb             - callback\n * @param {Array<*>} args           - Arguments supplied to a trigger method.\n * @returns {*} The results from the triggered event.\n */\nconst s_TRIGGER_API = (iterateeTarget, objEvents, name, cb, args) =>\n{\n   let result;\n\n   if (objEvents)\n   {\n      const events = objEvents[name];\n      let allEvents = objEvents.all;\n      if (events && allEvents) { allEvents = allEvents.slice(); }\n      if (events) { result = iterateeTarget(events, args); }\n      if (allEvents) { result = iterateeTarget(allEvents, [name].concat(args)); }\n   }\n\n   return result;\n};\n\n/**\n * A difficult-to-believe, but optimized internal dispatch function for triggering events. Tries to keep the usual\n * cases speedy (most internal Backbone events have 3 arguments).\n *\n * @param {object.<{callback: Function, context: object, ctx: object, listening:{}}>}  events - events array\n * @param {Array<*>} args - event argument array\n */\nconst s_TRIGGER_EVENTS = (events, args) =>\n{\n   let ev, i = -1;\n   const a1 = args[0], a2 = args[1], a3 = args[2], l = events.length;\n\n   switch (args.length)\n   {\n      case 0:\n         while (++i < l) { (ev = events[i]).callback.call(ev.ctx); }\n         return;\n      case 1:\n         while (++i < l) { (ev = events[i]).callback.call(ev.ctx, a1); }\n         return;\n      case 2:\n         while (++i < l) { (ev = events[i]).callback.call(ev.ctx, a1, a2); }\n         return;\n      case 3:\n         while (++i < l) { (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); }\n         return;\n      default:\n         while (++i < l) { (ev = events[i]).callback.apply(ev.ctx, args); }\n         return;\n   }\n};\n\n/**\n * A difficult-to-believe, but optimized internal dispatch function for triggering events. Tries to keep the usual\n * cases speedy (most internal Backbone events have 3 arguments). This dispatch method uses ES6 Promises and adds\n * any returned results to an array which is added to a Promise.all construction which passes back a Promise which\n * waits until all Promises complete. Any target invoked may return a Promise or any result. This is very useful to\n * use for any asynchronous operations.\n *\n * @param {Array<*>} events   -  Array of stored event callback data.\n * @param {Array<*>} args     -  Arguments supplied to `triggerAsync`.\n * @returns {Promise} A Promise of the results from the triggered event.\n */\nconst s_TRIGGER_ASYNC_EVENTS = async (events, args) =>\n{\n   let ev, i = -1;\n   const a1 = args[0], a2 = args[1], a3 = args[2], l = events.length;\n\n   const results = [];\n\n   try\n   {\n      switch (args.length)\n      {\n         case 0:\n            while (++i < l)\n            {\n               const result = (ev = events[i]).callback.call(ev.ctx);\n\n               // If we received a valid result add it to the promises array.\n               if (result !== void 0) { results.push(result); }\n            }\n            break;\n\n         case 1:\n            while (++i < l)\n            {\n               const result = (ev = events[i]).callback.call(ev.ctx, a1);\n\n               // If we received a valid result add it to the promises array.\n               if (result !== void 0) { results.push(result); }\n            }\n            break;\n\n         case 2:\n            while (++i < l)\n            {\n               const result = (ev = events[i]).callback.call(ev.ctx, a1, a2);\n\n               // If we received a valid result add it to the promises array.\n               if (result !== void 0) { results.push(result); }\n            }\n            break;\n\n         case 3:\n            while (++i < l)\n            {\n               const result = (ev = events[i]).callback.call(ev.ctx, a1, a2, a3);\n\n               // If we received a valid result add it to the promises array.\n               if (result !== void 0) { results.push(result); }\n            }\n            break;\n\n         default:\n            while (++i < l)\n            {\n               const result = (ev = events[i]).callback.apply(ev.ctx, args);\n\n               // If we received a valid result add it to the promises array.\n               if (result !== void 0) { results.push(result); }\n            }\n            break;\n      }\n   }\n   catch (error) // will catch synchronous event binding errors and reject again async errors.\n   {\n      return Promise.reject(error);\n   }\n\n   // If there are multiple results then use Promise.all otherwise Promise.resolve.\n   return results.length > 1 ? Promise.all(results).then((values) =>\n   {\n      const filtered = values.filter((entry) => entry !== void 0);\n      switch (filtered.length)\n      {\n         case 0: return void 0;\n         case 1: return filtered[0];\n         default: return filtered;\n      }\n   }) : results.length === 1 ? Promise.resolve(results[0]) : Promise.resolve();\n};\n\n/**\n * A difficult-to-believe, but optimized internal dispatch function for triggering events. Tries to keep the usual\n * cases speedy (most internal Backbone events have 3 arguments). This dispatch method synchronously passes back a\n * single value or an array with all results returned by any invoked targets.\n *\n * @param {Array<*>} events   -  Array of stored event callback data.\n * @param {Array<*>} args     -  Arguments supplied to `triggerSync`.\n * @returns {*|Array<*>} The results from the triggered event.\n */\nconst s_TRIGGER_SYNC_EVENTS = (events, args) =>\n{\n   let ev, i = -1;\n   const a1 = args[0], a2 = args[1], a3 = args[2], l = events.length;\n\n   const results = [];\n\n   switch (args.length)\n   {\n      case 0:\n         while (++i < l)\n         {\n            const result = (ev = events[i]).callback.call(ev.ctx);\n\n            // If we received a valid result return immediately.\n            if (result !== void 0) { results.push(result); }\n         }\n         break;\n      case 1:\n         while (++i < l)\n         {\n            const result = (ev = events[i]).callback.call(ev.ctx, a1);\n\n            // If we received a valid result return immediately.\n            if (result !== void 0) { results.push(result); }\n         }\n         break;\n      case 2:\n         while (++i < l)\n         {\n            const result = (ev = events[i]).callback.call(ev.ctx, a1, a2);\n\n            // If we received a valid result return immediately.\n            if (result !== void 0) { results.push(result); }\n         }\n         break;\n      case 3:\n         while (++i < l)\n         {\n            const result = (ev = events[i]).callback.call(ev.ctx, a1, a2, a3);\n\n            // If we received a valid result return immediately.\n            if (result !== void 0) { results.push(result); }\n         }\n         break;\n      default:\n         while (++i < l)\n         {\n            const result = (ev = events[i]).callback.apply(ev.ctx, args);\n\n            // If we received a valid result return immediately.\n            if (result !== void 0) { results.push(result); }\n         }\n         break;\n   }\n\n   // Return the results array if there are more than one or just a single result.\n   return results.length > 1 ? results : results.length === 1 ? results[0] : void 0;\n};\n\n/**\n * Generate a unique integer ID (unique within the entire client session).\n *\n * @type {number} - unique ID counter.\n */\nlet idCounter = 0;\n\n/**\n * Creates a new unique ID with a given prefix\n *\n * @param {string}   prefix - An optional prefix to add to unique ID.\n * @returns {string} A new unique ID with a given prefix.\n */\nconst s_UNIQUE_ID = (prefix = '') =>\n{\n   const id = `${++idCounter}`;\n   return prefix ? `${prefix}${id}` : id;\n};\n","/**\n * Provides common object manipulation utilities including depth traversal, obtaining accessors, safely setting values /\n * equality tests, and validation.\n *\n * Support for typhonjs-plugin-manager is enabled.\n */\n\n/**\n * @typedef {object} ValidationEntry - Provides data for a validation check.\n *\n * @property {string}               [type] - Optionally tests with a typeof check.\n *\n * @property {Array<*>|Function|Set<*>}  [expected] - Optional array, function, or set of expected values to test\n * against.\n *\n * @property {string}               [message] - Optional message to include.\n *\n * @property {boolean}              [required=true] - When false if the accessor is missing validation is skipped.\n *\n * @property {boolean}              [error=true] - When true and error is thrown otherwise a boolean is returned.\n */\n\n/**\n * Freezes all entries traversed that are objects including entries in arrays.\n *\n * @param {object|Array}   data - An object or array.\n *\n * @param {string[]}       skipFreezeKeys - An array of strings indicating keys of objects to not freeze.\n *\n * @returns {object|Array} The frozen object.\n */\nexport function deepFreeze(data, skipFreezeKeys = [])\n{\n   /* istanbul ignore if */\n   if (typeof data !== 'object') { throw new TypeError(`'data' is not an 'object'.`); }\n\n   /* istanbul ignore if */\n   if (!Array.isArray(skipFreezeKeys)) { throw new TypeError(`'skipFreezeKeys' is not an 'array'.`); }\n\n   return _deepFreeze(data, skipFreezeKeys);\n}\n\n/**\n * Performs a naive depth traversal of an object / array. The data structure _must not_ have circular references.\n * The result of the callback function is used to modify in place the given data.\n *\n * @param {object|Array}   data - An object or array.\n *\n * @param {Function}       func - A callback function to process leaf values in children arrays or object members.\n *\n * @param {boolean}        modify - If true then the result of the callback function is used to modify in place\n *                                  the given data.\n *\n * @returns {*} The data object.\n */\nexport function depthTraverse(data, func, modify = false)\n{\n   /* istanbul ignore if */\n   if (typeof data !== 'object') { throw new TypeError(`'data' is not an 'object'.`); }\n\n   /* istanbul ignore if */\n   if (typeof func !== 'function') { throw new TypeError(`'func' is not a 'function'.`); }\n\n   return _depthTraverse(data, func, modify);\n}\n\n/**\n * Returns a list of accessor keys by traversing the given object.\n *\n * @param {object}   data - An object to traverse for accessor keys.\n *\n * @returns {string[]} Accessor list.\n */\nexport function getAccessorList(data)\n{\n   if (typeof data !== 'object') { throw new TypeError(`getAccessorList error: 'data' is not an 'object'.`); }\n\n   return _getAccessorList(data);\n}\n\n/**\n * Tests for whether an object is iterable.\n *\n * @param {object} object - An object.\n *\n * @returns {boolean} Whether object is iterable.\n */\nexport function isIterable(object)\n{\n   if (object === null || object === void 0 || typeof object !== 'object') { return false; }\n\n   return typeof object[Symbol.iterator] === 'function';\n}\n\n/**\n * Tests for whether an object is async iterable.\n *\n * @param {object} object - An object.\n *\n * @returns {boolean} Whether object is async iterable.\n */\nexport function isIterableAsync(object)\n{\n   if (object === null || object === void 0 || typeof object !== 'object') { return false; }\n\n   return typeof object[Symbol.asyncIterator] === 'function';\n}\n\n/**\n * Provides a way to safely access an objects data / entries given an accessor string which describes the\n * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n * to walk.\n *\n * @param {object}   data - An object to access entry data.\n *\n * @param {string}   accessor - A string describing the entries to access.\n *\n * @param {*}        defaultValue - (Optional) A default value to return if an entry for accessor is not found.\n *\n * @returns {object} The data object.\n */\nexport function safeAccess(data, accessor, defaultValue = void 0)\n{\n   if (typeof data !== 'object') { return defaultValue; }\n   if (typeof accessor !== 'string') { return defaultValue; }\n\n   const access = accessor.split('.');\n\n   // Walk through the given object by the accessor indexes.\n   for (let cntr = 0; cntr < access.length; cntr++)\n   {\n      // If the next level of object access is undefined or null then return the empty string.\n      if (typeof data[access[cntr]] === 'undefined' || data[access[cntr]] === null) { return defaultValue; }\n\n      data = data[access[cntr]];\n   }\n\n   return data;\n}\n\n/**\n * Provides a way to safely batch set an objects data / entries given an array of accessor strings which describe the\n * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n * to walk. If value is an object the accessor will be used to access a target value from `value` which is\n * subsequently set to `data` by the given operation. If `value` is not an object it will be used as the target\n * value to set across all accessors.\n *\n * @param {object}         data - An object to access entry data.\n *\n * @param {Array<string>}  accessors - A string describing the entries to access.\n *\n * @param {object|*}       value - A new value to set if an entry for accessor is found.\n *\n * @param {string}         [operation='set'] - Operation to perform including: 'add', 'div', 'mult', 'set',\n *                                             'set-undefined', 'sub'.\n *\n * @param {object|*}       [defaultAccessValue=0] - A new value to set if an entry for accessor is found.\n *\n *\n * @param {boolean}  [createMissing=true] - If true missing accessor entries will be created as objects\n *                                          automatically.\n */\nexport function safeBatchSet(data, accessors, value, operation = 'set', defaultAccessValue = 0, createMissing = true)\n{\n   if (typeof data !== 'object') { throw new TypeError(`safeBatchSet Error: 'data' is not an 'object'.`); }\n   if (!Array.isArray(accessors)) { throw new TypeError(`safeBatchSet Error: 'accessors' is not an 'array'.`); }\n\n   if (typeof value === 'object')\n   {\n      accessors.forEach((accessor) =>\n      {\n         const targetValue = safeAccess(value, accessor, defaultAccessValue);\n         safeSet(data, accessor, targetValue, operation, createMissing);\n      });\n   }\n   else\n   {\n      accessors.forEach((accessor) =>\n      {\n         safeSet(data, accessor, value, operation, createMissing);\n      });\n   }\n}\n\n/**\n * Compares a source object and values of entries against a target object. If the entries in the source object match\n * the target object then `true` is returned otherwise `false`. If either object is undefined or null then false\n * is returned.\n *\n * @param {object}   source - Source object.\n *\n * @param {object}   target - Target object.\n *\n * @returns {boolean} True if equal.\n */\nexport function safeEqual(source, target)\n{\n   if (typeof source === 'undefined' || source === null || typeof target === 'undefined' || target === null)\n   {\n      return false;\n   }\n\n   const sourceAccessors = getAccessorList(source);\n\n   for (let cntr = 0; cntr < sourceAccessors.length; cntr++)\n   {\n      const accessor = sourceAccessors[cntr];\n\n      const sourceObjectValue = safeAccess(source, accessor);\n      const targetObjectValue = safeAccess(target, accessor);\n\n      if (sourceObjectValue !== targetObjectValue) { return false; }\n   }\n\n   return true;\n}\n\n/**\n * Provides a way to safely set an objects data / entries given an accessor string which describes the\n * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n * to walk.\n *\n * @param {object}   data - An object to access entry data.\n *\n * @param {string}   accessor - A string describing the entries to access.\n *\n * @param {*}        value - A new value to set if an entry for accessor is found.\n *\n * @param {string}   [operation='set'] - Operation to perform including: 'add', 'div', 'mult', 'set',\n *                                       'set-undefined', 'sub'.\n *\n * @param {boolean}  [createMissing=true] - If true missing accessor entries will be created as objects\n *                                          automatically.\n *\n * @returns {boolean} True if successful.\n */\nexport function safeSet(data, accessor, value, operation = 'set', createMissing = true)\n{\n   if (typeof data !== 'object') { throw new TypeError(`safeSet Error: 'data' is not an 'object'.`); }\n   if (typeof accessor !== 'string') { throw new TypeError(`safeSet Error: 'accessor' is not a 'string'.`); }\n\n   const access = accessor.split('.');\n\n   // Walk through the given object by the accessor indexes.\n   for (let cntr = 0; cntr < access.length; cntr++)\n   {\n      // If data is an array perform validation that the accessor is a positive integer otherwise quit.\n      if (Array.isArray(data))\n      {\n         const number = (+access[cntr]);\n\n         if (!Number.isInteger(number) || number < 0) { return false; }\n      }\n\n      if (cntr === access.length - 1)\n      {\n         switch (operation)\n         {\n            case 'add':\n               data[access[cntr]] += value;\n               break;\n\n            case 'div':\n               data[access[cntr]] /= value;\n               break;\n\n            case 'mult':\n               data[access[cntr]] *= value;\n               break;\n\n            case 'set':\n               data[access[cntr]] = value;\n               break;\n\n            case 'set-undefined':\n               if (typeof data[access[cntr]] === 'undefined') { data[access[cntr]] = value; }\n               break;\n\n            case 'sub':\n               data[access[cntr]] -= value;\n               break;\n         }\n      }\n      else\n      {\n         // If createMissing is true and the next level of object access is undefined then create a new object entry.\n         if (createMissing && typeof data[access[cntr]] === 'undefined') { data[access[cntr]] = {}; }\n\n         // Abort if the next level is null or not an object and containing a value.\n         if (data[access[cntr]] === null || typeof data[access[cntr]] !== 'object') { return false; }\n\n         data = data[access[cntr]];\n      }\n   }\n\n   return true;\n}\n\n/**\n * Performs bulk setting of values to the given data object.\n *\n * @param {object}            data - The data object to set data.\n *\n * @param {object<string, *>} accessorValues - Object of accessor keys to values to set.\n *\n * @param {string}            [operation='set'] - Operation to perform including: 'add', 'div', 'mult', 'set', 'sub';\n *                                                default (`set`).\n *\n * @param {boolean}           [createMissing=true] - If true missing accessor entries will be created as objects\n *                                                   automatically.\n */\nexport function safeSetAll(data, accessorValues, operation = 'set', createMissing = true)\n{\n   if (typeof data !== 'object') { throw new TypeError(`'data' is not an 'object'.`); }\n   if (typeof accessorValues !== 'object') { throw new TypeError(`'accessorValues' is not an 'object'.`); }\n\n   for (const accessor of Object.keys(accessorValues))\n   {\n      if (!accessorValues.hasOwnProperty(accessor)) { continue; } // eslint-disable-line no-prototype-builtins\n\n      safeSet(data, accessor, accessorValues[accessor], operation, createMissing);\n   }\n}\n\n/**\n * Performs bulk validation of data given an object, `validationData`, which describes all entries to test.\n *\n * @param {object}                           data - The data object to test.\n *\n * @param {object<string, ValidationEntry>}  validationData - Key is the accessor / value is a validation entry.\n *\n * @param {string}                           [dataName='data'] - Optional name of data.\n *\n * @returns {boolean} True if validation passes otherwise an exception is thrown.\n */\nexport function validate(data, validationData = {}, dataName = 'data')\n{\n   if (typeof data !== 'object') { throw new TypeError(`'${dataName}' is not an 'object'.`); }\n   if (typeof validationData !== 'object') { throw new TypeError(`'validationData' is not an 'object'.`); }\n\n   let result;\n\n   for (const key of Object.keys(validationData))\n   {\n      if (!validationData.hasOwnProperty(key)) { continue; } // eslint-disable-line no-prototype-builtins\n\n      const entry = validationData[key];\n\n      switch (entry.test)\n      {\n         case 'array':\n            result = validateArray(data, key, entry, dataName);\n            break;\n\n         case 'entry':\n            result = validateEntry(data, key, entry, dataName);\n            break;\n\n         case 'entry|array':\n            result = validateEntryOrArray(data, key, entry, dataName);\n            break;\n      }\n   }\n\n   return result;\n}\n\n/**\n * Validates all array entries against potential type and expected tests.\n *\n * @param {object}            data - The data object to test.\n *\n * @param {string}            accessor - A string describing the entries to access.\n *\n * @param {object}            opts - Options object.\n *\n * @param {string}            [opts.type] - Tests with a typeof check.\n *\n * @param {Function|Set<*>}   [opts.expected] - Optional function or set of expected values to test against.\n *\n * @param {string}            [opts.message] - Optional message to include.\n *\n * @param {boolean}           [opts.required] - When false if the accessor is missing validation is skipped.\n *\n * @param {boolean}           [opts.error=true] - When true and error is thrown otherwise a boolean is returned.\n *\n * @param {string}            [dataName='data'] - Optional name of data.\n *\n * @returns {boolean} True if validation passes otherwise an exception is thrown.\n */\nexport function validateArray(data, accessor, { type = void 0, expected = void 0, message = void 0, required = true,\n error = true } = {}, dataName = 'data')\n{\n   const dataArray = safeAccess(data, accessor);\n\n   // A non-required entry is missing so return without validation.\n   if (!required && typeof dataArray === 'undefined') { return true; }\n\n   if (!Array.isArray(dataArray))\n   {\n      if (error)\n      {\n         throw _validateError(TypeError, `'${dataName}.${accessor}' is not an 'array'.`);\n      }\n      else\n      {\n         return false;\n      }\n   }\n\n   if (typeof type === 'string')\n   {\n      for (let cntr = 0; cntr < dataArray.length; cntr++)\n      {\n         if (!(typeof dataArray[cntr] === type))\n         {\n            if (error)\n            {\n               const dataEntryString = typeof dataArray[cntr] === 'object' ? JSON.stringify(dataArray[cntr]) :\n                dataArray[cntr];\n\n               throw _validateError(TypeError,\n                `'${dataName}.${accessor}[${cntr}]': '${dataEntryString}' is not a '${type}'.`);\n            }\n            else\n            {\n               return false;\n            }\n         }\n      }\n   }\n\n   // If expected is a function then test all array entries against the test function. If expected is a Set then\n   // test all array entries for inclusion in the set. Otherwise if expected is a string then test that all array\n   // entries as a `typeof` test against expected.\n   if (Array.isArray(expected))\n   {\n      for (let cntr = 0; cntr < dataArray.length; cntr++)\n      {\n         if (expected.indexOf(dataArray[cntr]) < 0)\n         {\n            if (error)\n            {\n               const dataEntryString = typeof dataArray[cntr] === 'object' ? JSON.stringify(dataArray[cntr]) :\n                dataArray[cntr];\n\n               throw _validateError(Error, `'${dataName}.${accessor}[${cntr}]': '${\n                dataEntryString}' is not an expected value: ${JSON.stringify(expected)}.`);\n            }\n            else\n            {\n               return false;\n            }\n         }\n      }\n   }\n   else if (expected instanceof Set)\n   {\n      for (let cntr = 0; cntr < dataArray.length; cntr++)\n      {\n         if (!expected.has(dataArray[cntr]))\n         {\n            if (error)\n            {\n               const dataEntryString = typeof dataArray[cntr] === 'object' ? JSON.stringify(dataArray[cntr]) :\n                dataArray[cntr];\n\n               throw _validateError(Error, `'${dataName}.${accessor}[${cntr}]': '${\n                dataEntryString}' is not an expected value: ${JSON.stringify(expected)}.`);\n            }\n            else\n            {\n               return false;\n            }\n         }\n      }\n   }\n   else if (typeof expected === 'function')\n   {\n      for (let cntr = 0; cntr < dataArray.length; cntr++)\n      {\n         try\n         {\n            const result = expected(dataArray[cntr]);\n\n            if (typeof result === 'undefined' || !result) { throw new Error(message); }\n         }\n         catch (err)\n         {\n            if (error)\n            {\n               const dataEntryString = typeof dataArray[cntr] === 'object' ? JSON.stringify(dataArray[cntr]) :\n                dataArray[cntr];\n\n               throw _validateError(Error, `'${dataName}.${accessor}[${cntr}]': '${\n                dataEntryString}' failed validation: ${err.message}.`);\n            }\n            else\n            {\n               return false;\n            }\n         }\n      }\n   }\n\n   return true;\n}\n\n/**\n * Validates data entry with a typeof check and potentially tests against the values in any given expected set.\n *\n * @param {object}            data - The object data to validate.\n *\n * @param {string}            accessor - A string describing the entries to access.\n *\n * @param {object}            opts - Options object\n *\n * @param {string}            [opts.type] - Tests with a typeof check.\n *\n * @param {Function|Set<*>}   [opts.expected] - Optional function or set of expected values to test against.\n *\n * @param {string}            [opts.message] - Optional message to include.\n *\n * @param {boolean}           [opts.required=true] - When false if the accessor is missing validation is skipped.\n *\n * @param {boolean}           [opts.error=true] - When true and error is thrown otherwise a boolean is returned.\n *\n * @param {string}            [dataName='data'] - Optional name of data.\n *\n * @returns {boolean} True if validation passes otherwise an exception is thrown.\n */\nexport function validateEntry(data, accessor, { type = void 0, expected = void 0, message = void 0, required = true,\n error = true } = {}, dataName = 'data')\n{\n   const dataEntry = safeAccess(data, accessor);\n\n   // A non-required entry is missing so return without validation.\n   if (!required && typeof dataEntry === 'undefined') { return true; }\n\n   if (type && typeof dataEntry !== type)\n   {\n      if (error)\n      {\n         throw _validateError(TypeError, `'${dataName}.${accessor}' is not a '${type}'.`);\n      }\n      else\n      {\n         return false;\n      }\n   }\n\n   if ((expected instanceof Set && !expected.has(dataEntry)) ||\n    (Array.isArray(expected) && expected.indexOf(dataEntry) < 0))\n   {\n      if (error)\n      {\n         const dataEntryString = typeof dataEntry === 'object' ? JSON.stringify(dataEntry) : dataEntry;\n\n         throw _validateError(Error, `'${dataName}.${accessor}': '${dataEntryString}' is not an expected value: ${\n          JSON.stringify(expected)}.`);\n      }\n      else\n      {\n         return false;\n      }\n   }\n   else if (typeof expected === 'function')\n   {\n      try\n      {\n         const result = expected(dataEntry);\n\n         if (typeof result === 'undefined' || !result) { throw new Error(message); }\n      }\n      catch (err)\n      {\n         if (error)\n         {\n            const dataEntryString = typeof dataEntry === 'object' ? JSON.stringify(dataEntry) : dataEntry;\n\n            throw _validateError(Error, `'${dataName}.${accessor}': '${dataEntryString}' failed to validate: ${\n             err.message}.`);\n         }\n         else\n         {\n            return false;\n         }\n      }\n   }\n\n   return true;\n}\n\n/**\n * Dispatches validation of data entry to string or array validation depending on data entry type.\n *\n * @param {object}            data - The data object to test.\n *\n * @param {string}            accessor - A string describing the entries to access.\n *\n * @param {ValidationEntry}   [entry] - A validation entry.\n *\n * @param {string}            [dataName='data'] - Optional name of data.\n *\n * @returns {boolean} True if validation passes otherwise an exception is thrown.\n */\nexport function validateEntryOrArray(data, accessor, entry, dataName = 'data')\n{\n   const dataEntry = safeAccess(data, accessor);\n\n   let result;\n\n   if (Array.isArray(dataEntry))\n   {\n      result = validateArray(data, accessor, entry, dataName);\n   }\n   else\n   {\n      result = validateEntry(data, accessor, entry, dataName);\n   }\n\n   return result;\n}\n\n// Module private ---------------------------------------------------------------------------------------------------\n\n/**\n * Private implementation of depth traversal.\n *\n * @param {object|Array}   data - An object or array.\n *\n * @param {string[]}       skipFreezeKeys - An array of strings indicating keys of objects to not freeze.\n *\n * @returns {*} The frozen object.\n * @ignore\n * @private\n */\nfunction _deepFreeze(data, skipFreezeKeys)\n{\n   if (Array.isArray(data))\n   {\n      for (let cntr = 0; cntr < data.length; cntr++) { _deepFreeze(data[cntr], skipFreezeKeys); }\n   }\n   else if (typeof data === 'object')\n   {\n      for (const key in data)\n      {\n         // eslint-disable-next-line no-prototype-builtins\n         if (data.hasOwnProperty(key) && skipFreezeKeys.indexOf(key) === -1) { _deepFreeze(data[key], skipFreezeKeys); }\n      }\n   }\n\n   return Object.freeze(data);\n}\n\n/**\n * Private implementation of depth traversal.\n *\n * @param {object|Array}   data - An object or array.\n *\n * @param {Function}       func - A callback function to process leaf values in children arrays or object members.\n *\n * @param {boolean}        modify - If true then the result of the callback function is used to modify in place\n *                                  the given data.\n * @returns {*} The data object.\n * @ignore\n * @private\n */\nfunction _depthTraverse(data, func, modify)\n{\n   if (modify)\n   {\n      if (Array.isArray(data))\n      {\n         for (let cntr = 0; cntr < data.length; cntr++)\n         {\n            data[cntr] = _depthTraverse(data[cntr], func, modify);\n         }\n      }\n      else if (typeof data === 'object')\n      {\n         for (const key in data)\n         {\n            // eslint-disable-next-line no-prototype-builtins\n            if (data.hasOwnProperty(key)) { data[key] = _depthTraverse(data[key], func, modify); }\n         }\n      }\n      else\n      {\n         data = func(data);\n      }\n   }\n   else\n   {\n      if (Array.isArray(data))\n      {\n         for (let cntr = 0; cntr < data.length; cntr++) { _depthTraverse(data[cntr], func, modify); }\n      }\n      else if (typeof data === 'object')\n      {\n         for (const key in data)\n         {\n            // eslint-disable-next-line no-prototype-builtins\n            if (data.hasOwnProperty(key)) { _depthTraverse(data[key], func, modify); }\n         }\n      }\n      else\n      {\n         func(data);\n      }\n   }\n\n   return data;\n}\n\n/**\n * Private implementation of `getAccessorList`.\n *\n * @param {object}   data - An object to traverse.\n *\n * @returns {string[]} Accessor list.\n * @ignore\n * @private\n */\nfunction _getAccessorList(data)\n{\n   const accessors = [];\n\n   for (const key in data)\n   {\n      if (data.hasOwnProperty(key)) // eslint-disable-line no-prototype-builtins\n      {\n         if (typeof data[key] === 'object')\n         {\n            const childKeys = _getAccessorList(data[key]);\n\n            childKeys.forEach((childKey) =>\n            {\n               accessors.push(Array.isArray(childKey) ? `${key}.${childKey.join('.')}` : `${key}.${childKey}`);\n            });\n         }\n         else\n         {\n            accessors.push(key);\n         }\n      }\n   }\n\n   return accessors;\n}\n\n/**\n * Creates a new error of type `clazz` adding the field `_objectValidateError` set to true.\n *\n * @param {Error}    clazz - Error class to instantiate.\n *\n * @param {string}   message - An error message.\n *\n * @returns {*} Error of the clazz.\n * @ignore\n * @private\n */\nfunction _validateError(clazz, message = void 0)\n{\n   const error = new clazz(message);\n   error._objectValidateError = true;\n   return error;\n}\n","import { EventbusProxy } from '@typhonjs-plugin/eventbus';\n\n/**\n * Defines a class holding the data associated with a plugin including its instance.\n */\nexport default class PluginEntry\n{\n   /**\n    * Instantiates a PluginEntry.\n    *\n    * @param {string}      name - The plugin name.\n    *\n    * @param {PluginData}  data -  describing the plugin, manager, and optional module data.\n    *\n    * @param {object}      instance - The loaded plugin instance.\n    *\n    * @param {EventbusProxy}  eventbusProxy - An EventProxy associated with the plugin wrapping the plugin manager\n    * eventbus.\n    */\n   constructor(name, data, instance, eventbusProxy = void 0)\n   {\n      /**\n       * Data describing the plugin, manager, and optional module data.\n       *\n       * @type {PluginData}\n       * @private\n       */\n      this._data = data;\n\n      /**\n       * The plugin enabled state.\n       *\n       * @type {boolean}\n       * @private\n       */\n      this._enabled = true;\n\n      /**\n       * The plugin name.\n       *\n       * @type {string}\n       * @private\n       */\n      this._name = name;\n\n      /**\n       * The loaded plugin instance.\n       *\n       * @type {object}\n       * @private\n       */\n      this._instance = instance;\n\n      /**\n       * An EventbusProxy associated with the plugin wrapping the plugin manager eventbus.\n       *\n       * @type {EventbusProxy}\n       * @private\n       */\n      this._eventbusProxy = eventbusProxy;\n   }\n\n   /**\n    * Provides a convenience method to escape file paths.\n    *\n    * @param {string}   value - A string to escape.\n    *\n    * @returns {string} An escaped string.\n    */\n   static escape(value)\n   {\n      if (typeof value !== 'string') { throw new TypeError(`'value' is not a string.`); }\n\n      // Remove any leading relative directory paths.\n      let escaped = value.replace(/^(\\.\\.|\\.)/, '');\n\n      // Escape any forward / reverse slashes for RegExp creation.\n      escaped = escaped.replace(/[\\\\]/g, '\\\\');\n      escaped = escaped.replace(/[/]/g, '\\\\/');\n\n      return escaped;\n   }\n\n   /**\n    * Get plugin data.\n    *\n    * @returns {PluginData} The associated PluginData.\n    */\n   get data() { return this._data; }\n\n   /**\n    * Get enabled.\n    *\n    * @returns {boolean} Current enabled state.\n    */\n   get enabled() { return this._enabled; }\n\n   /**\n    * Set enabled.\n    *\n    * @param {boolean} enabled - New enabled state.\n    */\n   set enabled(enabled)\n   {\n      /**\n       * The plugin enabled state.\n       *\n       * @type {boolean}\n       * @private\n       */\n      this._enabled = enabled;\n   }\n\n   /**\n    * Get associated EventbusProxy.\n    *\n    * @returns {EventbusProxy} Associated EventbusProxy.\n    */\n   get eventbusProxy() { return this._eventbusProxy; }\n\n   /**\n    * Get plugin instance.\n    *\n    * @returns {object} The plugin instance.\n    */\n   get instance() { return this._instance; }\n\n   /**\n    * Get plugin name.\n    *\n    * @returns {string} Plugin name.\n    */\n   get name() { return this._name; }\n}\n\n/**\n * @typedef {object} PluginData\n *\n * @property {object}   manager - Data about the plugin manager\n *\n * @property {string}   manager.eventPrepend - The plugin manager event prepend string.\n *\n * @property {object}   module - Optional object hash to associate with plugin.\n *\n * @property {object}   plugin - Data about the plugin.\n *\n * @property {string}   plugin.name - The name of the plugin.\n *\n * @property {string}   plugin.scopedName - The name of the plugin with the plugin managers event prepend string.\n *\n * @property {string}   plugin.target - Defines the target NPM module to loaded or defines a local file (full\n *                               path or relative to current working directory to load.\n *\n * @property {string}   plugin.targetEscaped - Provides the target, but properly escaped for RegExp usage.\n *\n * @property {string}   plugin.type - The type of plugin: `instance` +\n *                                    In Node: `import-module`, `import-path`, `require-module`, or `require-path`.\n *                                    In Browser: `import-path`, `import-url`.\n *\n * @property {object}   plugin.options - Defines an object of options for the plugin.\n */\n","import { EventbusProxy } from '@typhonjs-plugin/eventbus';\n\n/**\n * PluginEvent - Provides the data / event passed to all invoked methods in\n * {@link AbstractPluginManager#invokeSyncEvent}. The `event.data` field is returned to the caller. Before returning\n * though additional the following additional metadata is attached:\n *\n * (number)    `$$plugin_invoke_count` - The count of plugins invoked.\n *\n * (string[])  `$$plugin_invoke_names` - The names of plugins invoked.\n */\nexport default class PluginEvent\n{\n   /**\n    * Initializes PluginEvent.\n    *\n    * @param {object} copyProps - Event data to copy.\n    * @param {object} passthruProps - Event data to pass through.\n    */\n   constructor(copyProps = {}, passthruProps = {})\n   {\n      /**\n       * Provides the unified event data assigning any pass through data to the copied data supplied.\n       */\n      this.data = Object.assign(JSON.parse(JSON.stringify(copyProps)), passthruProps);\n\n      /**\n       * Unique data available in each plugin invoked.\n       *\n       * @type {EventbusProxy} - The active EventbusProxy for that particular plugin.\n       */\n      this.eventbus = void 0;\n\n      /**\n       * Unique data available in each plugin invoked.\n       *\n       * @type {string} - The active plugin name.\n       */\n      this.pluginName = void 0;\n\n      /**\n       * Unique data available in each plugin invoked.\n       *\n       * @type {object} - The active plugin options.\n       */\n      this.pluginOptions = void 0;\n   }\n}\n","/**\n * @typedef {object} PluginConfig\n *\n * @property {string}      name - Defines the name of the plugin; if no `target` entry is present the name\n *                                doubles as the target (please see target).\n *\n * @property {string|URL}  [target] - Defines the target Node module to load or defines a local file (full\n *                                    path or relative to current working directory to load. Target may also be a file\n *                                    URL / string or in the browser a web URL.\n *\n * @property {string}      [instance] - Defines an existing object instance to use as the plugin.\n *\n * @property {object}      [options] - Defines an object of options for the plugin.\n */\n\n/**\n * Performs validation of a PluginConfig.\n *\n * @param {PluginConfig}   pluginConfig - A PluginConfig to validate.\n *\n * @returns {boolean} True if the given PluginConfig is valid.\n */\nexport default function isValidConfig(pluginConfig)\n{\n   if (typeof pluginConfig !== 'object') { return false; }\n\n   if (typeof pluginConfig.name !== 'string') { return false; }\n\n   if (typeof pluginConfig.target !== 'undefined' && typeof pluginConfig.target !== 'string' &&\n      !(pluginConfig.target instanceof URL))\n   {\n      return false;\n   }\n\n   if (typeof pluginConfig.options !== 'undefined' && typeof pluginConfig.options !== 'object') { return false; }\n\n   return true;\n}\n","import Eventbus                     from '@typhonjs-plugin/eventbus';\nimport { EventbusProxy }            from '@typhonjs-plugin/eventbus';\nimport { deepFreeze, isIterable }   from '@typhonjs-utils/object';\n\nimport PluginEntry                  from './PluginEntry.js';\nimport PluginEvent                  from './PluginEvent.js';\n\nimport isValidConfig                from './isValidConfig.js';\n\n/**\n * Provides a lightweight plugin manager for Node / NPM & the browser with eventbus integration for plugins in a safe\n * and protected manner across NPM modules, local files, and preloaded object instances. This pattern facilitates\n * message passing between modules versus direct dependencies / method invocation.\n *\n * It isn't necessary to use an eventbus associated with the plugin manager though invocation then relies on invoking\n * methods directly with the plugin manager instance.\n *\n * A default eventbus will be created, but you may also pass in an eventbus from `@typhonjs-plugin/eventbus` and the\n * plugin manager will register by default under these event categories:\n *\n * `plugins:async:add` - {@link AbstractPluginManager#add}\n *\n * `plugins:async:add:all` - {@link AbstractPluginManager#addAll}\n *\n * `plugins:async:destroy:manager` - {@link AbstractPluginManager#destroy}\n *\n * `plugins:async:invoke` - {@link AbstractPluginManager#invokeAsync}\n *\n * `plugins:async:invoke:event` - {@link AbstractPluginManager#invokeAsyncEvent}\n *\n * `plugins:async:remove` - {@link AbstractPluginManager#remove}\n *\n * `plugins:async:remove:all` - {@link AbstractPluginManager#removeAll}\n *\n * `plugins:create:eventbus:proxy` - {@link AbstractPluginManager#createEventbusProxy}\n *\n * `plugins:get:enabled` - {@link AbstractPluginManager#getPluginsEnabled}\n *\n * `plugins:get:options` - {@link AbstractPluginManager#getOptions}\n *\n * `plugins:has:plugin` - {@link AbstractPluginManager#hasPlugin}\n *\n * `plugins:invoke` - {@link AbstractPluginManager#invoke}\n *\n * `plugins:is:valid:config` - {@link AbstractPluginManager#isValidConfig}\n *\n * `plugins:set:enabled` - {@link AbstractPluginManager#setPluginsEnabled}\n *\n * `plugins:set:options` - {@link AbstractPluginManager#setOptions}\n *\n * `plugins:sync:invoke` - {@link AbstractPluginManager#invokeSync}\n *\n * `plugins:sync:invoke:event` - {@link AbstractPluginManager#invokeSyncEvent}\n *\n * Automatically when a plugin is loaded and unloaded respective callbacks `onPluginLoad` and `onPluginUnload` will\n * be attempted to be invoked on the plugin. This is an opportunity for the plugin to receive any associated eventbus\n * and wire itself into it. It should be noted that a protected proxy around the eventbus is passed to the plugins\n * such that when the plugin is removed automatically all events registered on the eventbus are cleaned up without\n * a plugin author needing to do this manually in the `onPluginUnload` callback. This solves any dangling event binding\n * issues.\n *\n * By supporting ES Modules in Node and the browser and CJS on Node the plugin manager is by nature asynchronous for\n * the\n * core methods of adding / removing plugins and destroying the manager. The lifecycle methods `onPluginLoad` and\n * `onPluginUnload` will be awaited on such that if a plugin returns a Promise or is an async method\n * then it will complete before execution continues.\n *\n * It is recommended to interact with the plugin manager eventbus through an eventbus proxy. The\n * `createEventbusProxy` method will return a proxy to the default or currently set eventbus.\n *\n * If eventbus functionality is enabled it is important especially if using a process / global level eventbus such as\n * `@typhonjs-plugin/eventbus/instances` to call {@link AbstractPluginManager#destroy} to clean up all plugin eventbus\n * resources and the plugin manager event bindings; this is primarily a testing concern.\n *\n * @see https://www.npmjs.com/package/@typhonjs-plugin/eventbus\n *\n * @example\n * import PluginManager from '@typhonjs-plugin/manager';\n *\n * const pluginManager = new PluginManager();\n *\n * pluginManager.add({ name: 'an-npm-plugin-enabled-module' });\n * pluginManager.add({ name: 'my-local-module', target: './myModule.js' });\n *\n * const eventbus = pluginManager.createEventbusProxy();\n *\n * // Let's say an-npm-plugin-enabled-module responds to 'cool:event' which returns 'true'.\n * // Let's say my-local-module responds to 'hot:event' which returns 'false'.\n * // Both of the plugin / modules will have 'onPluginLoaded' invoked with a proxy to the eventbus and any plugin\n * // options defined.\n *\n * // One can then use the eventbus functionality to invoke associated module / plugin methods even retrieving results.\n * assert(eventbus.triggerSync('cool:event') === true);\n * assert(eventbus.triggerSync('hot:event') === false);\n *\n * // One can also indirectly invoke any method of the plugin via:\n * eventbus.triggerSync('plugins:invoke:sync:event', 'aCoolMethod'); // Any plugin with a method named `aCoolMethod` is\n *    invoked. eventbus.triggerSync('plugins:invoke:sync:event', 'aCoolMethod', {}, {},\n *    'an-npm-plugin-enabled-module'); // specific invocation.\n *\n * // The 3rd parameter will make a copy of the hash and the 4th defines a pass through object hash sending a single\n * // event / object hash to the invoked method.\n *\n * // -----------------------\n *\n * // Given that `@typhonjs-plugin/eventbus/instances` defines a global / process level eventbus you can import it in\n *    an\n * entirely different file or even NPM module and invoke methods of loaded plugins like this:\n *\n * import eventbus from '@typhonjs-plugin/eventbus/instances';\n *\n * eventbus.triggerSync('plugins:invoke', 'aCoolMethod'); // Any plugin with a method named `aCoolMethod` is invoked.\n *\n * assert(eventbus.triggerSync('cool:event') === true);\n *\n * eventbus.trigger('plugins:remove', 'an-npm-plugin-enabled-module'); // Removes the plugin and unregisters events.\n *\n * assert(eventbus.triggerSync('cool:event') === true); // Will now fail!\n *\n * // In this case though when using the global eventbus be mindful to always call `pluginManager.destroy()` in the\n *    main\n * // thread of execution scope to remove all plugins and the plugin manager event bindings!\n */\nexport default class AbstractPluginManager\n{\n   /**\n    * Instantiates AbstractPluginManager\n    *\n    * @param {object}   [options] - Provides various configuration options:\n    *\n    * @param {Eventbus} [options.eventbus] - An instance of '@typhonjs-plugin/eventbus' used as the plugin\n    * eventbus. If not provided a default eventbus is created.\n    *\n    * @param {string}   [options.eventPrepend='plugin'] - A customized name to prepend PluginManager events on the\n    *                                                     eventbus.\n    *\n    * @param {boolean}  [options.throwNoMethod=false] - If true then when a method fails to be invoked by any plugin\n    *                                                   an exception will be thrown.\n    *\n    * @param {boolean}  [options.throwNoPlugin=false] - If true then when no plugin is matched to be invoked an\n    *                                                   exception will be thrown.\n    *\n    * @param {PluginSupportImpl}  [options.PluginSupport] - Optional class to pass in which extends the plugin manager. A default\n    *                                              implementation is available: {@link PluginSupport}\n    */\n   constructor(options = {})\n   {\n      if (typeof options !== 'object') { throw new TypeError(`'options' is not an object.`); }\n\n      if (options.PluginSupport !== void 0 && typeof options.PluginSupport !== 'function')\n      {\n         throw new TypeError(`'options.pluginSupport' is not a constructor function.`);\n      }\n\n      /**\n       * Stores the plugins by name with an associated PluginEntry.\n       *\n       * @type {Map<string, PluginEntry>}\n       * @private\n       */\n      this._pluginMap = new Map();\n\n      /**\n       * Stores any associated eventbus.\n       *\n       * @type {Eventbus}\n       * @protected\n       */\n      this._eventbus = null;\n\n      /**\n       * Stores any EventbusProxy instances created, so that they may be automatically destroyed.\n       *\n       * @type {EventbusProxy[]}\n       * @private\n       */\n      this._eventbusProxies = [];\n\n      /**\n       * Provides an instance of PluginSupportImpl interface to extend the plugin manager through the eventbus API.\n       *\n       * @type {PluginSupportImpl}\n       * @private\n       */\n      this._pluginSupport = options.PluginSupport !== void 0 ? new options.PluginSupport(this) : null;\n\n      /**\n       * Defines options for throwing exceptions. Turned off by default.\n       *\n       * @type {PluginManagerOptions}\n       * @private\n       */\n      this._options =\n      {\n         pluginsEnabled: true,\n         noEventAdd: false,\n         noEventDestroy: false,\n         noEventOptions: true,\n         noEventRemoval: false,\n         throwNoMethod: false,\n         throwNoPlugin: false\n      };\n\n      this.setEventbus({\n         eventbus: options.eventbus !== void 0 ? options.eventbus : new Eventbus(),\n         eventPrepend: options.eventPrepend\n      });\n\n      this.setOptions(options);\n   }\n\n   /**\n    * Adds a plugin by the given configuration parameters. A plugin `name` is always required. If no other options\n    * are provided then the `name` doubles as the NPM module / local file to load. The loading first checks for an\n    * existing `instance` to use as the plugin. Then the `target` is chosen as the NPM module / local file to load.\n    * By passing in `options` this will be stored and accessible to the plugin during all callbacks.\n    *\n    * @param {PluginConfig}   pluginConfig - Defines the plugin to load.\n    *\n    * @param {object}         [moduleData] - Optional object hash to associate with plugin.\n    *\n    * @returns {Promise<PluginData|undefined>} The PluginData that represents the plugin added.\n    */\n   async add(pluginConfig, moduleData)\n   {\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\n\n      if (typeof pluginConfig !== 'object') { throw new TypeError(`'pluginConfig' is not an object.`); }\n\n      if (typeof pluginConfig.name !== 'string')\n      {\n         throw new TypeError(`'pluginConfig.name' is not a string for entry: ${JSON.stringify(pluginConfig)}.`);\n      }\n\n      if (typeof pluginConfig.target !== 'undefined' && typeof pluginConfig.target !== 'string' &&\n       !(pluginConfig.target instanceof URL))\n      {\n         throw new TypeError(\n          `'pluginConfig.target' is not a string or URL for entry: ${JSON.stringify(pluginConfig)}.`);\n      }\n\n      if (typeof pluginConfig.options !== 'undefined' && typeof pluginConfig.options !== 'object')\n      {\n         throw new TypeError(`'pluginConfig.options' is not an object for entry: ${JSON.stringify(pluginConfig)}.`);\n      }\n\n      if (typeof moduleData !== 'undefined' && typeof moduleData !== 'object')\n      {\n         throw new TypeError(`'moduleData' is not an object for entry: ${JSON.stringify(pluginConfig)}.`);\n      }\n\n      // If a plugin with the same name already exists post a warning and exit early.\n      if (this._pluginMap.has(pluginConfig.name))\n      {\n         throw new Error(`A plugin already exists with name: ${pluginConfig.name}.`);\n      }\n\n      let instance, target, type;\n\n      // Use an existing instance of a plugin; a static class is assumed when instance is a function.\n      if (typeof pluginConfig.instance === 'object' || typeof pluginConfig.instance === 'function')\n      {\n         instance = pluginConfig.instance;\n\n         target = pluginConfig.name;\n\n         type = 'instance';\n      }\n      else\n      {\n         // If a target is defined use it instead of the name.\n         target = pluginConfig.target || pluginConfig.name;\n\n         // Defer to child class to load module in Node or the browser.\n         const result = await this._loadModule(target);\n\n         instance = result.instance;\n         type = result.type;\n      }\n\n      // Convert any URL target a string.\n      if (target instanceof URL)\n      {\n         target = target.toString();\n      }\n\n      /**\n       * Create an object hash with data describing the plugin, manager, and any extra module data.\n       *\n       * @type {PluginData}\n       */\n      const pluginData = JSON.parse(JSON.stringify(\n      {\n         manager:\n         {\n            eventPrepend: this._eventPrepend\n         },\n\n         module: moduleData || {},\n\n         plugin:\n         {\n            name: pluginConfig.name,\n            scopedName: `${this._eventPrepend}:${pluginConfig.name}`,\n            target,\n            targetEscaped: PluginEntry.escape(target),\n            type,\n            options: pluginConfig.options || {}\n         }\n      }));\n\n      deepFreeze(pluginData, ['eventPrepend', 'scopedName']);\n\n      const eventbusProxy = this._eventbus !== null && typeof this._eventbus !== 'undefined' ?\n       new EventbusProxy(this._eventbus) : void 0;\n\n      const entry = new PluginEntry(pluginConfig.name, pluginData, instance, eventbusProxy);\n\n      this._pluginMap.set(pluginConfig.name, entry);\n\n      // Invoke private module method which allows skipping optional error checking.\n      await s_INVOKE_ASYNC_EVENTS('onPluginLoad', {}, {}, pluginConfig.name, this._pluginMap, this._options, false);\n\n      // Invoke `typhonjs:plugin:manager:plugin:added` allowing external code to react to plugin addition.\n      if (this._eventbus)\n      {\n         await this._eventbus.triggerAsync(`typhonjs:plugin:manager:plugin:added`, pluginData);\n      }\n\n      return pluginData;\n   }\n\n   /**\n    * Initializes multiple plugins in a single call.\n    *\n    * @param {PluginConfig[]} pluginConfigs - An array of plugin config object hash entries.\n    *\n    * @param {object}         [moduleData] - Optional object hash to associate with all plugins.\n    *\n    * @returns {Promise<PluginData[]>} An array of PluginData objects of all loaded plugins.\n    */\n   async addAll(pluginConfigs = [], moduleData)\n   {\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\n\n      if (!Array.isArray(pluginConfigs)) { throw new TypeError(`'pluginConfigs' is not an array.`); }\n\n      const pluginsData = [];\n\n      for (const pluginConfig of pluginConfigs)\n      {\n         const result = await this.add(pluginConfig, moduleData);\n\n         if (result) { pluginsData.push(result); }\n      }\n\n      return pluginsData;\n   }\n\n   /**\n    * Provides the eventbus callback which may prevent addition if optional `noEventAdd` is enabled. This disables\n    * the ability for plugins to be added via events preventing any external code adding plugins in this manner.\n    *\n    * @param {PluginConfig}   pluginConfig - Defines the plugin to load.\n    *\n    * @param {object}         [moduleData] - Optional object hash to associate with all plugins.\n    *\n    * @returns {Promise<PluginData|undefined>} - Operation success.\n    * @private\n    */\n   async _addEventbus(pluginConfig, moduleData)\n   {\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\n\n      return !this._options.noEventAdd ? this.add(pluginConfig, moduleData) : void 0;\n   }\n\n   /**\n    * Provides the eventbus callback which may prevent addition if optional `noEventAdd` is enabled. This disables\n    * the ability for plugins to be added via events preventing any external code adding plugins in this manner.\n    *\n    * @param {PluginConfig[]} pluginConfigs - An array of plugin config object hash entries.\n    *\n    * @param {object}         [moduleData] - Optional object hash to associate with all plugins.\n    *\n    * @returns {Promise<PluginData[]>} An array of PluginData objects of all loaded plugins.\n    * @private\n    */\n   async _addAllEventbus(pluginConfigs, moduleData)\n   {\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\n\n      if (!this._options.noEventAdd) { return this.addAll(pluginConfigs, moduleData); }\n   }\n\n   /**\n    * If an eventbus is assigned to this plugin manager then a new EventbusProxy wrapping this eventbus is returned.\n    * It is added to `this._eventbusProxies` so †hat the instances are destroyed when the plugin manager is destroyed.\n    *\n    * @returns {EventbusProxy} A proxy for the currently set Eventbus.\n    */\n   createEventbusProxy()\n   {\n      if (!(this._eventbus instanceof Eventbus))\n      {\n         throw new ReferenceError('No eventbus assigned to plugin manager.');\n      }\n\n      const eventbusProxy = new EventbusProxy(this._eventbus);\n\n      // Store proxy to make sure it is destroyed when the plugin manager is destroyed.\n      this._eventbusProxies.push(eventbusProxy);\n\n      return eventbusProxy;\n   }\n\n   /**\n    * Destroys all managed plugins after unloading them.\n    */\n   async destroy()\n   {\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\n\n      // Remove all plugins; this will invoke onPluginUnload.\n      await this.removeAll();\n\n      // Destroy any EventbusProxy instances created.\n      for (const eventbusProxy of this._eventbusProxies)\n      {\n         eventbusProxy.destroy();\n      }\n\n      this._eventbusProxies = [];\n\n      if (this._eventbus !== null && typeof this._eventbus !== 'undefined')\n      {\n         this._eventbus.off(`${this._eventPrepend}:async:add`, this._addEventbus, this);\n         this._eventbus.off(`${this._eventPrepend}:async:add:all`, this._addAllEventbus, this);\n         this._eventbus.off(`${this._eventPrepend}:async:destroy:manager`, this._destroyEventbus, this);\n         this._eventbus.off(`${this._eventPrepend}:async:invoke`, this.invokeAsync, this);\n         this._eventbus.off(`${this._eventPrepend}:async:invoke:event`, this.invokeAsyncEvent, this);\n         this._eventbus.off(`${this._eventPrepend}:async:remove`, this._removeEventbus, this);\n         this._eventbus.off(`${this._eventPrepend}:async:remove:all`, this._removeAllEventbus, this);\n         this._eventbus.off(`${this._eventPrepend}:create:eventbus:proxy`, this.createEventbusProxy, this);\n         this._eventbus.off(`${this._eventPrepend}:get:enabled`, this.getPluginsEnabled, this);\n         this._eventbus.off(`${this._eventPrepend}:get:options`, this.getOptions, this);\n         this._eventbus.off(`${this._eventPrepend}:has:plugin`, this.hasPlugin, this);\n         this._eventbus.off(`${this._eventPrepend}:invoke`, this.invoke, this);\n         this._eventbus.off(`${this._eventPrepend}:is:valid:config`, this.isValidConfig, this);\n         this._eventbus.off(`${this._eventPrepend}:set:enabled`, this.setPluginsEnabled, this);\n         this._eventbus.off(`${this._eventPrepend}:set:options`, this._setOptionsEventbus, this);\n         this._eventbus.off(`${this._eventPrepend}:sync:invoke`, this.invokeSync, this);\n         this._eventbus.off(`${this._eventPrepend}:sync:invoke:event`, this.invokeSyncEvent, this);\n      }\n\n      if (this._pluginSupport !== null && this._pluginSupport !== void 0)\n      {\n         await this._pluginSupport.destroy({ eventbus: this._eventbus, eventPrepend: this._eventPrepend });\n\n         this._pluginSupport = null;\n      }\n\n      this._pluginMap = null;\n      this._eventbus = null;\n   }\n\n   /**\n    * Provides the eventbus callback which may prevent plugin manager destruction if optional `noEventDestroy` is\n    * enabled. This disables the ability for the plugin manager to be destroyed via events preventing any external\n    * code removing plugins in this manner.\n    *\n    * @private\n    * @returns {Promise} The promise returned from `destroy` or immediate resolution.\n    */\n   async _destroyEventbus()\n   {\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\n\n      if (!this._options.noEventDestroy) { return this.destroy(); }\n   }\n\n   /**\n    * Returns whether this plugin manager has been destroyed.\n    *\n    * @returns {boolean} Returns whether this plugin manager has been destroyed.\n    */\n   get isDestroyed()\n   {\n      return this._pluginMap === null || this._pluginMap === void 0;\n   }\n\n   /**\n    * Returns any associated eventbus.\n    *\n    * @returns {Eventbus|null} The associated eventbus.\n    */\n   getEventbus()\n   {\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\n\n      return this._eventbus;\n   }\n\n   /**\n    * Returns a copy of the plugin manager options.\n    *\n    * @returns {PluginManagerOptions} A copy of the plugin manager options.\n    */\n   getOptions()\n   {\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\n\n      return JSON.parse(JSON.stringify(this._options));\n   }\n\n   /**\n    * Returns the enabled state of a plugin, a list of plugins, or all plugins.\n    *\n    * @param {undefined|object}  [options] - Options object. If undefined all plugin enabled state is returned.\n    *\n    * @param {string|Iterable<string>}   [options.pluginNames] - Plugin name or iterable list of names to get state.\n    *\n    * @returns {boolean|Array<{pluginName: string, enabled: boolean}>} - Enabled state for single plugin or array of\n    *                                                                    results for multiple plugins.\n    */\n   getPluginsEnabled({ pluginNames = [] } = {})\n   {\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\n\n      if (typeof pluginNames !== 'string' && !isIterable(pluginNames))\n      {\n         throw new TypeError(`'pluginNames' is not a string or iterable.`);\n      }\n\n      // Return a single boolean enabled result for a single plugin if found.\n      if (typeof pluginNames === 'string')\n      {\n         const entry = this._pluginMap.get(pluginNames);\n         return entry instanceof PluginEntry && entry.enabled;\n      }\n\n      const results = [];\n\n      // If there are plugin names specified then limit returned results to just them.\n      if (pluginNames.length)\n      {\n         for (const pluginName of pluginNames)\n         {\n            const entry = this._pluginMap.get(pluginName);\n            const loaded = entry instanceof PluginEntry;\n            results.push({ pluginName, enabled: loaded && entry.enabled, loaded });\n         }\n      }\n      else // Return all plugins enabled state.\n      {\n         for (const [pluginName, entry] of this._pluginMap.entries())\n         {\n            const loaded = entry instanceof PluginEntry;\n            results.push({ pluginName, enabled: loaded && entry.enabled, loaded });\n         }\n      }\n\n      return results;\n   }\n\n   /**\n    * Returns true if there is a plugin loaded with the given plugin name.\n    *\n    * @param {string}   pluginName - Plugin name to test.\n    *\n    * @returns {boolean} - True if a plugin exists.\n    */\n   hasPlugin(pluginName)\n   {\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\n\n      if (typeof pluginName !== 'string') { throw new TypeError(`'pluginName' is not a string.`); }\n\n      return this._pluginMap.has(pluginName);\n   }\n\n   /**\n    * This dispatch method simply invokes any plugin targets for the given methodName..\n    *\n    * @param {string}            methodName - Method name to invoke.\n    *\n    * @param {*|Array<*>}        [args] - Optional arguments. An array will be spread as multiple arguments.\n    *\n    * @param {string|string[]}   [nameOrList] - An optional plugin name or array / iterable of plugin names to invoke.\n    */\n   invoke(methodName, args = void 0, nameOrList = void 0)\n   {\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\n\n      if (typeof methodName !== 'string') { throw new TypeError(`'methodName' is not a string.`); }\n\n      if (typeof nameOrList === 'undefined') { nameOrList = this._pluginMap.keys(); }\n\n      if (typeof nameOrList !== 'string' && !Array.isArray(nameOrList) &&\n       typeof nameOrList[Symbol.iterator] !== 'function')\n      {\n         throw new TypeError(`'nameOrList' is not a string, array, or iterator.`);\n      }\n\n      // Track if a plugin method is invoked.\n      let hasMethod = false;\n      let hasPlugin = false;\n\n      // Early out if plugins are not enabled.\n      if (!this._options.pluginsEnabled) { return; }\n\n      if (typeof nameOrList === 'string')\n      {\n         const plugin = this._pluginMap.get(nameOrList);\n\n         if (plugin instanceof PluginEntry && plugin.enabled && plugin.instance)\n         {\n            hasPlugin = true;\n\n            if (typeof plugin.instance[methodName] === 'function')\n            {\n               Array.isArray(args) ? plugin.instance[methodName](...args) : plugin.instance[methodName](args);\n\n               hasMethod = true;\n            }\n         }\n      }\n      else\n      {\n         for (const name of nameOrList)\n         {\n            const plugin = this._pluginMap.get(name);\n\n            if (plugin instanceof PluginEntry && plugin.enabled && plugin.instance)\n            {\n               hasPlugin = true;\n\n               if (typeof plugin.instance[methodName] === 'function')\n               {\n                  Array.isArray(args) ? plugin.instance[methodName](...args) : plugin.instance[methodName](args);\n\n                  hasMethod = true;\n               }\n            }\n         }\n      }\n\n      if (this._options.throwNoPlugin && !hasPlugin)\n      {\n         throw new Error(`PluginManager failed to find any target plugins.`);\n      }\n\n      if (this._options.throwNoMethod && !hasMethod)\n      {\n         throw new Error(`PluginManager failed to invoke '${methodName}'.`);\n      }\n   }\n\n   /**\n    * This dispatch method uses ES6 Promises and adds any returned results to an array which is added to a Promise.all\n    * construction which passes back a Promise which waits until all Promises complete. Any target invoked may return a\n    * Promise or any result. This is very useful to use for any asynchronous operations.\n    *\n    * @param {string}            methodName - Method name to invoke.\n    *\n    * @param {*|Array<*>}        [args] - Optional arguments. An array will be spread as multiple arguments.\n    *\n    * @param {string|string[]}   [nameOrList] - An optional plugin name or array / iterable of plugin names to invoke.\n    *\n    * @returns {Promise<*|Array<*>>} A Promise with any returned results.\n    */\n   invokeAsync(methodName, args = void 0, nameOrList = void 0)\n   {\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\n\n      if (typeof methodName !== 'string') { throw new TypeError(`'methodName' is not a string.`); }\n\n      if (typeof nameOrList === 'undefined') { nameOrList = this._pluginMap.keys(); }\n\n      if (typeof nameOrList !== 'string' && !Array.isArray(nameOrList) &&\n       typeof nameOrList[Symbol.iterator] !== 'function')\n      {\n         throw new TypeError(`'nameOrList' is not a string, array, or iterator.`);\n      }\n\n      // Track if a plugin method is invoked.\n      let hasMethod = false;\n      let hasPlugin = false;\n\n      // Capture results.\n      let result = void 0;\n      const results = [];\n\n      // Early out if plugins are not enabled.\n      if (!this._options.pluginsEnabled) { return result; }\n\n      try\n      {\n         if (typeof nameOrList === 'string')\n         {\n            const plugin = this._pluginMap.get(nameOrList);\n\n            if (plugin instanceof PluginEntry && plugin.enabled && plugin.instance)\n            {\n               hasPlugin = true;\n\n               if (typeof plugin.instance[methodName] === 'function')\n               {\n                  result = Array.isArray(args) ? plugin.instance[methodName](...args) :\n                   plugin.instance[methodName](args);\n\n                  // If we received a valid result return immediately.\n                  if (result !== null || typeof result !== 'undefined') { results.push(result); }\n\n                  hasMethod = true;\n               }\n            }\n         }\n         else\n         {\n            for (const name of nameOrList)\n            {\n               const plugin = this._pluginMap.get(name);\n\n               if (plugin instanceof PluginEntry && plugin.enabled && plugin.instance)\n               {\n                  hasPlugin = true;\n\n                  if (typeof plugin.instance[methodName] === 'function')\n                  {\n                     result = Array.isArray(args) ? plugin.instance[methodName](...args) :\n                      plugin.instance[methodName](args);\n\n                     // If we received a valid result return immediately.\n                     if (result !== null || typeof result !== 'undefined') { results.push(result); }\n\n                     hasMethod = true;\n                  }\n               }\n            }\n         }\n\n         if (this._options.throwNoPlugin && !hasPlugin)\n         {\n            return Promise.reject(new Error(`PluginManager failed to find any target plugins.`));\n         }\n\n         if (this._options.throwNoMethod && !hasMethod)\n         {\n            return Promise.reject(new Error(`PluginManager failed to invoke '${methodName}'.`));\n         }\n      }\n      catch (error)\n      {\n         return Promise.reject(error);\n      }\n\n      // If there are multiple results then use Promise.all otherwise Promise.resolve.\n      return results.length > 1 ? Promise.all(results) : Promise.resolve(result);\n   }\n\n   /**\n    * This dispatch method synchronously passes to and returns from any invoked targets a PluginEvent.\n    *\n    * @param {string}            methodName - Method name to invoke.\n    *\n    * @param {object}            [copyProps={}] - plugin event object.\n    *\n    * @param {object}            [passthruProps={}] - if true, event has plugin option.\n    *\n    * @param {string|string[]}   [nameOrList] - An optional plugin name or array / iterable of plugin names to invoke.\n    *\n    * @returns {Promise<PluginEvent>} A PluginEvent representing the invocation results.\n    */\n   invokeAsyncEvent(methodName, copyProps = {}, passthruProps = {}, nameOrList = void 0)\n   {\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\n\n      if (typeof nameOrList === 'undefined') { nameOrList = this._pluginMap.keys(); }\n\n      // Early out if plugins are not enabled.\n      if (!this._options.pluginsEnabled) { return Promise.resolve(); }\n\n      // Invokes the private internal async events method with optional error checking enabled.\n      return s_INVOKE_ASYNC_EVENTS(methodName, copyProps, passthruProps, nameOrList, this._pluginMap, this._options);\n   }\n\n   /**\n    * This dispatch method synchronously passes back a single value or an array with all results returned by any\n    * invoked targets.\n    *\n    * @param {string}            methodName - Method name to invoke.\n    *\n    * @param {*|Array<*>}        [args] - Optional arguments. An array will be spread as multiple arguments.\n    *\n    * @param {string|string[]}   [nameOrList] - An optional plugin name or array / iterable of plugin names to invoke.\n    *\n    * @returns {*|Array<*>} An array of results.\n    */\n   invokeSync(methodName, args = void 0, nameOrList = void 0)\n   {\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\n\n      if (typeof methodName !== 'string') { throw new TypeError(`'methodName' is not a string.`); }\n\n      if (typeof nameOrList === 'undefined') { nameOrList = this._pluginMap.keys(); }\n\n      if (typeof nameOrList !== 'string' && !Array.isArray(nameOrList) &&\n       typeof nameOrList[Symbol.iterator] !== 'function')\n      {\n         throw new TypeError(`'nameOrList' is not a string, array, or iterator.`);\n      }\n\n      // Track if a plugin method is invoked.\n      let hasMethod = false;\n      let hasPlugin = false;\n\n      // Capture results.\n      let result = void 0;\n      const results = [];\n\n      // Early out if plugins are not enabled.\n      if (!this._options.pluginsEnabled) { return result; }\n\n      if (typeof nameOrList === 'string')\n      {\n         const plugin = this._pluginMap.get(nameOrList);\n\n         if (plugin instanceof PluginEntry && plugin.enabled && plugin.instance)\n         {\n            hasPlugin = true;\n\n            if (typeof plugin.instance[methodName] === 'function')\n            {\n               result = Array.isArray(args) ? plugin.instance[methodName](...args) : plugin.instance[methodName](args);\n\n               // If we received a valid result return immediately.\n               if (result !== null || typeof result !== 'undefined') { results.push(result); }\n\n               hasMethod = true;\n            }\n         }\n      }\n      else\n      {\n         for (const name of nameOrList)\n         {\n            const plugin = this._pluginMap.get(name);\n\n            if (plugin instanceof PluginEntry && plugin.enabled && plugin.instance)\n            {\n               hasPlugin = true;\n\n               if (typeof plugin.instance[methodName] === 'function')\n               {\n                  result = Array.isArray(args) ? plugin.instance[methodName](...args) :\n                   plugin.instance[methodName](args);\n\n                  // If we received a valid result return immediately.\n                  if (result !== null || typeof result !== 'undefined') { results.push(result); }\n\n                  hasMethod = true;\n               }\n            }\n         }\n      }\n\n      if (this._options.throwNoPlugin && !hasPlugin)\n      {\n         throw new Error(`PluginManager failed to find any target plugins.`);\n      }\n\n      if (this._options.throwNoMethod && !hasMethod)\n      {\n         throw new Error(`PluginManager failed to invoke '${methodName}'.`);\n      }\n\n      // Return the results array if there are more than one or just a single result.\n      return results.length > 1 ? results : result;\n   }\n\n   /**\n    * This dispatch method synchronously passes to and returns from any invoked targets a PluginEvent.\n    *\n    * @param {string}            methodName - Method name to invoke.\n    *\n    * @param {object}            [copyProps={}] - plugin event object.\n    *\n    * @param {object}            [passthruProps={}] - if true, event has plugin option.\n    *\n    * @param {string|string[]}   [nameOrList] - An optional plugin name or array / iterable of plugin names to invoke.\n    *\n    * @returns {PluginEvent|undefined} A plugin event with invocation results.\n    */\n   invokeSyncEvent(methodName, copyProps = {}, passthruProps = {}, nameOrList = void 0)\n   {\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\n\n      if (typeof nameOrList === 'undefined') { nameOrList = this._pluginMap.keys(); }\n\n      // Early out if plugins are not enabled.\n      if (!this._options.pluginsEnabled) { return void 0; }\n\n      // Invokes the private internal sync events method with optional error checking enabled.\n      return s_INVOKE_SYNC_EVENTS(methodName, copyProps, passthruProps, nameOrList, this._pluginMap, this._options);\n   }\n\n   /**\n    * Performs validation of a PluginConfig.\n    *\n    * @param {PluginConfig}   pluginConfig - A PluginConfig to validate.\n    *\n    * @returns {boolean} True if the given PluginConfig is valid.\n    */\n   isValidConfig(pluginConfig)\n   {\n      return isValidConfig(pluginConfig);\n   }\n\n   /**\n    * Child implementations provide platform specific module loading by overriding this method.\n    *\n    * @param {string|URL}   moduleOrPath - A module name, file path, or URL.\n    *\n    * @returns {Promise<*>} Loaded module.\n    * @private\n    */\n   async _loadModule(moduleOrPath)  // eslint-disable-line no-unused-vars\n   {\n   }\n\n   /**\n    * Removes a plugin by name after unloading it and clearing any event bindings automatically.\n    *\n    * @param {string}   pluginName - The plugin name to remove.\n    *\n    * @returns {Promise<boolean>} - Operation success.\n    */\n   async remove(pluginName)\n   {\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\n\n      const entry = this._pluginMap.get(pluginName);\n\n      if (entry instanceof PluginEntry)\n      {\n         // Invoke private module method which allows skipping optional error checking.\n         await s_INVOKE_ASYNC_EVENTS('onPluginUnload', {}, {}, pluginName, this._pluginMap, this._options, false);\n\n         // Automatically remove any potential reference to a stored event proxy instance.\n         try\n         {\n            entry.instance._eventbus = void 0;\n         }\n         catch (err) { /* nop */ }\n\n         if (entry.eventbusProxy instanceof EventbusProxy) { entry.eventbusProxy.destroy(); }\n\n         this._pluginMap.delete(pluginName);\n\n         // Invoke `typhonjs:plugin:manager:plugin:removed` allowing external code to react to plugin removed.\n         if (this._eventbus)\n         {\n            await this._eventbus.triggerAsync(`typhonjs:plugin:manager:plugin:removed`,\n             JSON.parse(JSON.stringify(entry.data)));\n         }\n\n         return true;\n      }\n\n      return false;\n   }\n\n   /**\n    * Removes all plugins after unloading them and clearing any event bindings automatically.\n    *\n    * @returns {Promise.<Array<{plugin: string, result: boolean}>>} A list of plugin names and removal success state.\n    */\n   async removeAll()\n   {\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\n\n      const values = [];\n\n      for (const pluginName of this._pluginMap.keys())\n      {\n         const result = await this.remove(pluginName);\n         values.push({ plugin: pluginName, result });\n      }\n\n      this._pluginMap.clear();\n\n      return values;\n   }\n\n   /**\n    * Provides the eventbus callback which may prevent removal if optional `noEventRemoval` is enabled. This disables\n    * the ability for plugins to be removed via events preventing any external code removing plugins in this manner.\n    *\n    * @param {string}   pluginName - The plugin name to remove.\n    *\n    * @returns {Promise<boolean>} - Operation success.\n    * @private\n    */\n   async _removeEventbus(pluginName)\n   {\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\n\n      return !this._options.noEventRemoval ? this.remove(pluginName) : false;\n   }\n\n   /**\n    * Provides the eventbus callback which may prevent removal if optional `noEventRemoval` is enabled. This disables\n    * the ability for plugins to be removed via events preventing any external code removing plugins in this manner.\n    *\n    * @returns {Promise.<Array<{plugin: string, result: boolean}>>} A list of plugin names and removal success state.\n    * @private\n    */\n   async _removeAllEventbus()\n   {\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\n\n      if (!this._options.noEventRemoval) { return this.removeAll(); }\n   }\n\n   /**\n    * Sets the eventbus associated with this plugin manager. If any previous eventbus was associated all plugin manager\n    * events will be removed then added to the new eventbus. If there are any existing plugins being managed their\n    * events will be removed from the old eventbus and then `onPluginLoad` will be called with the new eventbus.\n    *\n    * @param {object}     options - An options object.\n    *\n    * @param {Eventbus}   options.eventbus - The new eventbus to associate.\n    *\n    * @param {string}     [options.eventPrepend='plugins'] - An optional string to prepend to all of the event\n    *                                                        binding targets.\n    *\n    * @returns {Promise<AbstractPluginManager>} This plugin manager.\n    */\n   async setEventbus({ eventbus, eventPrepend = 'plugins' } = {})\n   {\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\n\n      if (!(eventbus instanceof Eventbus)) { throw new TypeError(`'eventbus' is not an 'Eventbus'.`); }\n      if (typeof eventPrepend !== 'string') { throw new TypeError(`'eventPrepend' is not a 'string'.`); }\n\n      // Early escape if the eventbus is the same as the current eventbus.\n      if (eventbus === this._eventbus) { return this; }\n\n      const oldPrepend = this._eventPrepend;\n\n      /**\n       * Stores the prepend string for eventbus registration.\n       *\n       * @type {string}\n       * @private\n       */\n      this._eventPrepend = eventPrepend;\n\n      // Unload and reload any existing plugins from the old eventbus to the target eventbus.\n      if (this._pluginMap.size > 0)\n      {\n         // Invoke private module method which allows skipping optional error checking.\n         await s_INVOKE_ASYNC_EVENTS('onPluginUnload', {}, {}, this._pluginMap.keys(), this._pluginMap, this._options,\n          false);\n\n         for (const entry of this._pluginMap.values())\n         {\n            // Automatically remove any potential reference to a stored event proxy instance.\n            try\n            {\n               entry.instance._eventbus = void 0;\n            }\n            catch (err) { /* nop */ }\n\n            entry.data.manager.eventPrepend = eventPrepend;\n            entry.data.plugin.scopedName = `${eventPrepend}:${entry.name}`;\n\n            if (entry.eventbusProxy instanceof EventbusProxy) { entry.eventbusProxy.destroy(); }\n\n            entry.eventbusProxy = new EventbusProxy(eventbus);\n         }\n\n         // Invoke private module method which allows skipping optional error checking.\n         await s_INVOKE_ASYNC_EVENTS('onPluginLoad', {}, {}, this._pluginMap.keys(), this._pluginMap, this._options,\n          false);\n\n         for (const entry of this._pluginMap.values())\n         {\n            // Invoke `typhonjs:plugin:manager:eventbus:changed` allowing external code to react to plugin\n            // changing eventbus.\n            if (this._eventbus)\n            {\n               this._eventbus.trigger(`typhonjs:plugin:manager:eventbus:changed`, Object.assign({\n                  oldEventbus: this._eventbus,\n                  oldManagerEventPrepend: oldPrepend,\n                  oldScopedName: `${oldPrepend}:${entry.name}`,\n                  newEventbus: eventbus,\n                  newManagerEventPrepend: eventPrepend,\n                  newScopedName: `${eventPrepend}:${entry.name}`\n               }, JSON.parse(JSON.stringify(entry.data))));\n            }\n         }\n      }\n\n      if (this._eventbus !== null)\n      {\n         this._eventbus.off(`${oldPrepend}:async:add`, this._addEventbus, this);\n         this._eventbus.off(`${oldPrepend}:async:add:all`, this._addAllEventbus, this);\n         this._eventbus.off(`${oldPrepend}:async:destroy:manager`, this._destroyEventbus, this);\n         this._eventbus.off(`${oldPrepend}:async:invoke`, this.invokeAsync, this);\n         this._eventbus.off(`${oldPrepend}:async:invoke:event`, this.invokeAsyncEvent, this);\n         this._eventbus.off(`${oldPrepend}:async:remove`, this._removeEventbus, this);\n         this._eventbus.off(`${oldPrepend}:async:remove:all`, this._removeAllEventbus, this);\n         this._eventbus.off(`${oldPrepend}:create:eventbus:proxy`, this.createEventbusProxy, this);\n         this._eventbus.off(`${oldPrepend}:get:enabled`, this.getPluginsEnabled, this);\n         this._eventbus.off(`${oldPrepend}:get:options`, this.getOptions, this);\n         this._eventbus.off(`${oldPrepend}:has:plugin`, this.hasPlugin, this);\n         this._eventbus.off(`${oldPrepend}:invoke`, this.invoke, this);\n         this._eventbus.off(`${oldPrepend}:is:valid:config`, this.isValidConfig, this);\n         this._eventbus.off(`${oldPrepend}:set:enabled`, this.setPluginsEnabled, this);\n         this._eventbus.off(`${oldPrepend}:set:options`, this._setOptionsEventbus, this);\n         this._eventbus.off(`${oldPrepend}:sync:invoke`, this.invokeSync, this);\n         this._eventbus.off(`${oldPrepend}:sync:invoke:event`, this.invokeSyncEvent, this);\n\n         // Invoke `typhonjs:plugin:manager:eventbus:removed` allowing external code to react to eventbus removal.\n         this._eventbus.trigger(`typhonjs:plugin:manager:eventbus:removed`,\n         {\n            oldEventbus: this._eventbus,\n            oldEventPrepend: oldPrepend,\n            newEventbus: eventbus,\n            newEventPrepend: eventPrepend\n         });\n      }\n\n      eventbus.on(`${eventPrepend}:async:add`, this._addEventbus, this);\n      eventbus.on(`${eventPrepend}:async:add:all`, this._addAllEventbus, this);\n      eventbus.on(`${eventPrepend}:async:destroy:manager`, this._destroyEventbus, this);\n      eventbus.on(`${eventPrepend}:async:invoke`, this.invokeAsync, this);\n      eventbus.on(`${eventPrepend}:async:invoke:event`, this.invokeAsyncEvent, this);\n      eventbus.on(`${eventPrepend}:async:remove`, this._removeEventbus, this);\n      eventbus.on(`${eventPrepend}:async:remove:all`, this._removeAllEventbus, this);\n      eventbus.on(`${eventPrepend}:create:eventbus:proxy`, this.createEventbusProxy, this);\n      eventbus.on(`${eventPrepend}:get:enabled`, this.getPluginsEnabled, this);\n      eventbus.on(`${eventPrepend}:get:options`, this.getOptions, this);\n      eventbus.on(`${eventPrepend}:has:plugin`, this.hasPlugin, this);\n      eventbus.on(`${eventPrepend}:invoke`, this.invoke, this);\n      eventbus.on(`${eventPrepend}:is:valid:config`, this.isValidConfig, this);\n      eventbus.on(`${eventPrepend}:set:enabled`, this.setPluginsEnabled, this);\n      eventbus.on(`${eventPrepend}:set:options`, this._setOptionsEventbus, this);\n      eventbus.on(`${eventPrepend}:sync:invoke`, this.invokeSync, this);\n      eventbus.on(`${eventPrepend}:sync:invoke:event`, this.invokeSyncEvent, this);\n\n      // Invoke `typhonjs:plugin:manager:eventbus:set` allowing external code to react to eventbus set.\n      eventbus.trigger('typhonjs:plugin:manager:eventbus:set',\n      {\n         oldEventbus: this._eventbus,\n         oldEventPrepend: oldPrepend,\n         newEventbus: eventbus,\n         newEventPrepend: eventPrepend\n      });\n\n      if (this._pluginSupport !== null && this._pluginSupport !== void 0)\n      {\n         this._pluginSupport.setEventbus({\n            oldEventbus: this._eventbus,\n            newEventbus: eventbus,\n            oldPrepend,\n            newPrepend: eventPrepend\n         });\n      }\n\n      this._eventbus = eventbus;\n\n      return this;\n   }\n\n   /**\n    * Set optional parameters. All parameters are off by default.\n    *\n    * @param {PluginManagerOptions} options - Defines optional parameters to set.\n    */\n   setOptions(options = {})\n   {\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\n\n      if (typeof options !== 'object') { throw new TypeError(`'options' is not an object.`); }\n\n      if (typeof options.pluginsEnabled === 'boolean') { this._options.pluginsEnabled = options.pluginsEnabled; }\n      if (typeof options.noEventAdd === 'boolean') { this._options.noEventAdd = options.noEventAdd; }\n      if (typeof options.noEventDestroy === 'boolean') { this._options.noEventDestroy = options.noEventDestroy; }\n      if (typeof options.noEventOptions === 'boolean') { this._options.noEventOptions = options.noEventOptions; }\n      if (typeof options.noEventRemoval === 'boolean') { this._options.noEventRemoval = options.noEventRemoval; }\n      if (typeof options.throwNoMethod === 'boolean') { this._options.throwNoMethod = options.throwNoMethod; }\n      if (typeof options.throwNoPlugin === 'boolean') { this._options.throwNoPlugin = options.throwNoPlugin; }\n   }\n\n   /**\n    * Provides the eventbus callback which may prevent plugin manager options being set if optional `noEventOptions` is\n    * enabled. This disables the ability for the plugin manager options to be set via events preventing any external\n    * code modifying options.\n    *\n    * @param {PluginManagerOptions} options - Defines optional parameters to set.\n    *\n    * @private\n    */\n   _setOptionsEventbus(options = {})\n   {\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\n\n      if (!this._options.noEventOptions) { this.setOptions(options); }\n   }\n\n   /**\n    * Sets the enabled state of a plugin, a list of plugins, or all plugins.\n    *\n    * @param {object}            options - Options object.\n    *\n    * @param {boolean}           options.enabled - The enabled state.\n    *\n    * @param {string|string[]}   [options.pluginNames] - Plugin name or list of names to set state.\n    */\n   setPluginsEnabled({ enabled, pluginNames = [] } = {})\n   {\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\n\n      if (typeof pluginNames !== 'string' && !Array.isArray(pluginNames))\n      {\n         throw new TypeError(`'pluginNames' is not a string or array.`);\n      }\n\n      if (typeof enabled !== 'boolean') { throw new TypeError(`'enabled' is not a boolean.`); }\n\n      const setEntryEnabled = (entry) =>\n      {\n         if (entry instanceof PluginEntry)\n         {\n            entry.enabled = enabled;\n\n            // Invoke `typhonjs:plugin:manager:plugin:enabled` allowing external code to react to plugin enabled state.\n            if (this._eventbus)\n            {\n               this._eventbus.trigger(`typhonjs:plugin:manager:plugin:enabled`, Object.assign({\n                  enabled\n               }, JSON.parse(JSON.stringify(entry.data))));\n            }\n         }\n      };\n\n      // Set enabled state for a single plugin if found.\n      if (typeof pluginNames === 'string')\n      {\n         setEntryEnabled(this._pluginMap.get(pluginNames));\n      }\n\n      // If there are plugin names specified then limit setting enabled state just them.\n      if (pluginNames.length)\n      {\n         for (const pluginName of pluginNames)\n         {\n            setEntryEnabled(this._pluginMap.get(pluginName));\n         }\n      }\n      else // Set all plugins enabled state.\n      {\n         for (const pluginEntry of this._pluginMap.values())\n         {\n            setEntryEnabled(pluginEntry);\n         }\n      }\n   }\n}\n\n// Module Private ----------------------------------------------------------------------------------------------------\n\n/**\n * Private implementation to invoke asynchronous events. This allows internal calls in PluginManager for\n * `onPluginLoad` and `onPluginUnload` callbacks to bypass optional error checking.\n *\n * This dispatch method asynchronously passes to and returns from any invoked targets a PluginEvent. Any invoked plugin\n * may return a Promise which is awaited upon by `Promise.all` before returning the PluginEvent data via a Promise.\n *\n * @param {string}                     methodName - Method name to invoke.\n *\n * @param {object}                     copyProps - plugin event object.\n *\n * @param {object}                     passthruProps - if true, event has plugin option.\n *\n * @param {string|string[]}            nameOrList - An optional plugin name or array / iterable of plugin names to\n *                                                  invoke.\n *\n * @param {Map<string, PluginEvent>}   pluginMap - Stores the plugins by name with an associated PluginEntry.\n *\n * @param {object}                     options - Defines options for throwing exceptions. Turned off by default.\n *\n * @param {boolean}                    [performErrorCheck=true] - If false optional error checking is disabled.\n *\n * @returns {Promise<PluginEvent>} A PluginEvent representing the invocation results.\n */\nconst s_INVOKE_ASYNC_EVENTS = async (methodName, copyProps = {}, passthruProps = {}, nameOrList, pluginMap, options,\n performErrorCheck = true) =>\n{\n   if (typeof methodName !== 'string') { throw new TypeError(`'methodName' is not a string.`); }\n   if (typeof passthruProps !== 'object') { throw new TypeError(`'passthruProps' is not an object.`); }\n   if (typeof copyProps !== 'object') { throw new TypeError(`'copyProps' is not an object.`); }\n\n   if (typeof nameOrList !== 'string' && !Array.isArray(nameOrList) &&\n    typeof nameOrList[Symbol.iterator] !== 'function')\n   {\n      throw new TypeError(`'nameOrList' is not a string, array, or iterator.`);\n   }\n\n   // Track how many plugins were invoked.\n   let pluginInvokeCount = 0;\n   const pluginInvokeNames = [];\n\n   // Track if a plugin method is invoked\n   let hasMethod = false;\n   let hasPlugin = false;\n\n   // Create plugin event.\n   const ev = new PluginEvent(copyProps, passthruProps);\n\n   const results = [];\n\n   if (typeof nameOrList === 'string')\n   {\n      const entry = pluginMap.get(nameOrList);\n\n      if (entry instanceof PluginEntry && entry.enabled && entry.instance)\n      {\n         hasPlugin = true;\n\n         if (typeof entry.instance[methodName] === 'function')\n         {\n            ev.eventbus = entry.eventbusProxy;\n            ev.pluginName = entry.name;\n            ev.pluginOptions = entry.data.plugin.options;\n\n            const result = entry.instance[methodName](ev);\n\n            if (typeof result !== 'undefined' && result !== null) { results.push(result); }\n\n            hasMethod = true;\n            pluginInvokeCount++;\n            pluginInvokeNames.push(entry.name);\n         }\n      }\n   }\n   else\n   {\n      for (const name of nameOrList)\n      {\n         const entry = pluginMap.get(name);\n\n         if (entry instanceof PluginEntry && entry.enabled && entry.instance)\n         {\n            hasPlugin = true;\n\n            if (typeof entry.instance[methodName] === 'function')\n            {\n               ev.eventbus = entry.eventbusProxy;\n               ev.pluginName = entry.name;\n               ev.pluginOptions = entry.data.plugin.options;\n\n               const result = entry.instance[methodName](ev);\n\n               if (typeof result !== 'undefined' && result !== null) { results.push(result); }\n\n               hasMethod = true;\n               pluginInvokeCount++;\n               pluginInvokeNames.push(entry.name);\n            }\n         }\n      }\n   }\n\n   if (performErrorCheck && options.throwNoPlugin && !hasPlugin)\n   {\n      throw new Error(`PluginManager failed to find any target plugins.`);\n   }\n\n   if (performErrorCheck && options.throwNoMethod && !hasMethod)\n   {\n      throw new Error(`PluginManager failed to invoke '${methodName}'.`);\n   }\n\n   // Add meta data for plugin invoke count.\n   ev.data.$$plugin_invoke_count = pluginInvokeCount;\n   ev.data.$$plugin_invoke_names = pluginInvokeNames;\n\n   await Promise.all(results);\n\n   return ev.data;\n};\n\n/**\n * Private implementation to invoke synchronous events. This allows internal calls in PluginManager for\n * `onPluginLoad` and `onPluginUnload` callbacks to bypass optional error checking.\n *\n * This dispatch method synchronously passes to and returns from any invoked targets a PluginEvent.\n *\n * @param {string}                     methodName - Method name to invoke.\n *\n * @param {object}                     copyProps - plugin event object.\n *\n * @param {object}                     passthruProps - if true, event has plugin option.\n *\n * @param {string|string[]}            nameOrList - An optional plugin name or array / iterable of plugin names to\n *                                                  invoke.\n *\n * @param {Map<string, PluginEvent>}   pluginMap - Stores the plugins by name with an associated PluginEntry.\n *\n * @param {object}                     options - Defines options for throwing exceptions. Turned off by default.\n *\n * @param {boolean}                    [performErrorCheck=true] - If false optional error checking is disabled.\n *\n * @returns {PluginEvent} A PluginEvent representing the invocation results.\n */\nconst s_INVOKE_SYNC_EVENTS = (methodName, copyProps = {}, passthruProps = {}, nameOrList, pluginMap, options,\n performErrorCheck = true) =>\n{\n   if (typeof methodName !== 'string') { throw new TypeError(`'methodName' is not a string.`); }\n   if (typeof passthruProps !== 'object') { throw new TypeError(`'passthruProps' is not an object.`); }\n   if (typeof copyProps !== 'object') { throw new TypeError(`'copyProps' is not an object.`); }\n\n   if (typeof nameOrList !== 'string' && !Array.isArray(nameOrList) &&\n    typeof nameOrList[Symbol.iterator] !== 'function')\n   {\n      throw new TypeError(`'nameOrList' is not a string, array, or iterator.`);\n   }\n\n   // Track how many plugins were invoked.\n   let pluginInvokeCount = 0;\n   const pluginInvokeNames = [];\n\n   // Track if a plugin method is invoked\n   let hasMethod = false;\n   let hasPlugin = false;\n\n   // Create plugin event.\n   const ev = new PluginEvent(copyProps, passthruProps);\n\n   if (typeof nameOrList === 'string')\n   {\n      const entry = pluginMap.get(nameOrList);\n\n      if (entry instanceof PluginEntry && entry.enabled && entry.instance)\n      {\n         hasPlugin = true;\n\n         if (typeof entry.instance[methodName] === 'function')\n         {\n            ev.eventbus = entry.eventbusProxy;\n            ev.pluginName = entry.name;\n            ev.pluginOptions = entry.data.plugin.options;\n\n            entry.instance[methodName](ev);\n\n            hasMethod = true;\n            pluginInvokeCount++;\n            pluginInvokeNames.push(entry.name);\n         }\n      }\n   }\n   else\n   {\n      for (const name of nameOrList)\n      {\n         const entry = pluginMap.get(name);\n\n         if (entry instanceof PluginEntry && entry.enabled && entry.instance)\n         {\n            hasPlugin = true;\n\n            if (typeof entry.instance[methodName] === 'function')\n            {\n               ev.eventbus = entry.eventbusProxy;\n               ev.pluginName = entry.name;\n               ev.pluginOptions = entry.data.plugin.options;\n\n               entry.instance[methodName](ev);\n\n               hasMethod = true;\n               pluginInvokeCount++;\n               pluginInvokeNames.push(entry.name);\n            }\n         }\n      }\n   }\n\n   if (performErrorCheck && options.throwNoPlugin && !hasPlugin)\n   {\n      throw new Error(`PluginManager failed to find any target plugins.`);\n   }\n\n   if (performErrorCheck && options.throwNoMethod && !hasMethod)\n   {\n      throw new Error(`PluginManager failed to invoke '${methodName}'.`);\n   }\n\n   // Add meta data for plugin invoke count.\n   ev.data.$$plugin_invoke_count = pluginInvokeCount;\n   ev.data.$$plugin_invoke_names = pluginInvokeNames;\n\n   return ev.data;\n};\n\n/**\n * @typedef {object} PluginConfig\n *\n * @property {string}      name - Defines the name of the plugin; if no `target` entry is present the name\n *                                doubles as the target (please see target).\n *\n * @property {string|URL}  [target] - Defines the target Node module to load or defines a local file (full\n *                                    path or relative to current working directory to load. Target may also be a file\n *                                    URL / string or in the browser a web URL.\n *\n * @property {string}      [instance] - Defines an existing object instance to use as the plugin.\n *\n * @property {object}      [options] - Defines an object of options for the plugin.\n */\n\n\n/**\n * @typedef {object} PluginData\n *\n * @property {object}   manager - Data about the plugin manager\n *\n * @property {string}   manager.eventPrepend - The plugin manager event prepend string.\n *\n * @property {object}   module - Optional object hash to associate with plugin.\n *\n * @property {object}   plugin - Data about the plugin.\n *\n * @property {string}   plugin.name - The name of the plugin.\n *\n * @property {string}   plugin.scopedName - The name of the plugin with the plugin managers event prepend string.\n *\n * @property {string}   plugin.target - Defines the target NPM module to loaded or defines a local file (full\n *                               path or relative to current working directory to load.\n *\n * @property {string}   plugin.targetEscaped - Provides the target, but properly escaped for RegExp usage.\n *\n * @property {string}   plugin.type - The type of plugin: `instance` +\n *                                    In Node: `import-module`, `import-path`, `require-module`, or `require-path`.\n *                                    In Browser: `import-path`, `import-url`.\n *\n * @property {object}   plugin.options - Defines an object of options for the plugin.\n */\n\n/**\n * @typedef {object} PluginManagerOptions\n *\n * @property {boolean}   [pluginsEnabled] - If false all plugins are disabled.\n *\n * @property {boolean}   [noEventAdd] - If true this prevents plugins from being added by `plugins:add` and\n *                                      `plugins:add:all` events forcing direct method invocation for addition.\n *\n * @property {boolean}   [noEventDestroy] - If true this prevents the plugin manager from being destroyed by\n *                                          `plugins:destroy:manager` forcing direct method invocation for destruction.\n *\n * @property {boolean}   [noEventOptions] - If true this prevents setting options for the plugin manager by\n *                                          `plugins:destroy:manager` forcing direct method invocation for destruction.\n *\n * @property {boolean}   [noEventRemoval] - If true this prevents plugins from being removed by `plugins:remove` and\n *                                          `plugins:remove:all` events forcing direct method invocation for removal.\n *\n * @property {boolean}   [throwNoMethod] - If true then when a method fails to be invoked by any plugin an exception\n *                                         will be thrown.\n *\n * @property {boolean}   [throwNoPlugin] - If true then when no plugin is matched to be invoked an exception will be\n *                                         thrown.\n */\n\n// TODO THIS NEEDS REFINEMENT\n/**\n * Interface for PluginSupport implementation classes.\n *\n * @interface PluginSupportImpl\n */\n\n/**\n * A method to invoke when the plugin manager is destroyed.\n *\n * @function\n * @async\n * @name PluginSupportImpl#destroy\n */\n\n/**\n * A method to invoke when the plugin manager eventbus is set.\n *\n * @function\n * @async\n * @name PluginSupportImpl#setEventbus\n */\n","import AbstractPluginManager from '../AbstractPluginManager.js';\n\nexport default class BrowserPluginManager extends AbstractPluginManager\n{\n   async _loadModule(moduleOrPath)\n   {\n      const module = await import(moduleOrPath);\n\n      // Please note that a plugin or other logger must be setup on the associated eventbus.\n      if (this._eventbus !== null && typeof this._eventbus !== 'undefined')\n      {\n         this._eventbus.trigger('log:debug', `@typhonjs-plugin/manager - import: ${moduleOrPath}`);\n      }\n\n      const type = `import-${moduleOrPath instanceof URL || \n       (typeof moduleOrPath === 'string' && moduleOrPath.startsWith('http')) ? 'url' : 'path'}`;\n\n      let instance;\n\n      // If the module has a named export for `onPluginLoad` then take the module.\n      if (typeof module.onPluginLoad === 'function')\n      {\n         instance = module;\n      }\n      // Then potentially resolve any default export / static class.\n      else if (module.default)\n      {\n         instance = module.default;\n      }\n      // Finally resolve as just the module.\n      else\n      {\n         instance = module;\n      }\n\n      return { instance, type };\n   }\n}\n","import Eventbus      from '@typhonjs-plugin/eventbus';\n\nimport PluginEntry   from './PluginEntry.js';\n\n/**\n * Provides a lightweight plugin manager for Node / NPM & the browser with eventbus integration for plugins in a safe\n * and protected manner across NPM modules, local files, and preloaded object instances. This pattern facilitates\n * message passing between modules versus direct dependencies / method invocation.\n *\n * It isn't necessary to use an eventbus associated with the plugin manager though invocation then relies on invoking\n * methods directly with the plugin manager instance.\n *\n * A default eventbus will be created, but you may also pass in an eventbus from `@typhonjs-plugin/eventbus` and the\n * plugin manager will register by default under these event categories:\n *\n * `plugins:get:all:plugin:data` - {@link AbstractPluginManager#getAllPluginData}\n *\n * `plugins:get:method:names` - {@link AbstractPluginManager#getMethodNames}\n *\n * `plugins:get:plugin:data` - {@link AbstractPluginManager#getPluginData}\n *\n * `plugins:get:plugin:event:names` - {@link AbstractPluginManager#getPluginEventNames}\n *\n * `plugins:get:plugin:method:names` - {@link AbstractPluginManager#getPluginMethodNames}\n *\n * `plugins:get:plugin:names` - {@link AbstractPluginManager#getPluginNames}\n *\n * `plugins:get:plugin:options` - {@link AbstractPluginManager#getPluginOptions}\n *\n * `plugins:get:plugins:by:event:name` - {@link AbstractPluginManager#getPluginsByEventName}\n *\n * `plugins:get:plugins:event:names` - {@link AbstractPluginManager#getPluginsEventNames}\n *\n * `plugins:has:method` - {@link AbstractPluginManager#hasMethod}\n *\n * `plugins:has:plugin:method` - {@link AbstractPluginManager#hasPluginMethod}\n *\n * @example\n *\n * @implements {PluginSupportImpl}\n */\nexport default class PluginSupport\n{\n   constructor(pluginManager)\n   {\n      this._pluginManager = pluginManager;\n   }\n\n   get isDestroyed()\n   {\n      return this._pluginManager === null || this._pluginManager === void 0 ||\n       this._pluginManager._pluginMap === null || this._pluginManager._pluginMap === void 0;\n   }\n\n   get pluginMap()\n   {\n      /* c8 ignore next 4 */\n      if (this.isDestroyed)\n      {\n         throw new ReferenceError('This PluginManager instance has been destroyed.');\n      }\n\n      return this._pluginManager._pluginMap;\n   }\n\n   /**\n    * Destroys all managed plugins after unloading them.\n    *\n    * @param {object}     options - An options object.\n    *\n    * @param {Eventbus}   options.eventbus - The eventbus to disassociate.\n    *\n    * @param {string}     options.eventPrepend - The current event prepend.\n    */\n   async destroy({ eventbus, eventPrepend } = {})\n   {\n      if (eventbus !== null && eventbus !== void 0)\n      {\n         eventbus.off(`${eventPrepend}:get:all:plugin:data`, this.getAllPluginData, this);\n         eventbus.off(`${eventPrepend}:get:method:names`, this.getMethodNames, this);\n         eventbus.off(`${eventPrepend}:get:plugin:data`, this.getPluginData, this);\n         eventbus.off(`${eventPrepend}:get:plugin:event:names`, this.getPluginEventNames, this);\n         eventbus.off(`${eventPrepend}:get:plugin:method:names`, this.getPluginMethodNames, this);\n         eventbus.off(`${eventPrepend}:get:plugin:names`, this.getPluginNames, this);\n         eventbus.off(`${eventPrepend}:get:plugin:options`, this.getPluginOptions, this);\n         eventbus.off(`${eventPrepend}:get:plugins:by:event:name`, this.getPluginsByEventName, this);\n         eventbus.off(`${eventPrepend}:get:plugins:event:names`, this.getPluginsEventNames, this);\n         eventbus.off(`${eventPrepend}:has:method`, this.hasMethod, this);\n         eventbus.off(`${eventPrepend}:has:plugin:method`, this.hasPluginMethod, this);\n      }\n\n      this._pluginManager = null;\n   }\n\n   /**\n    * Returns all plugin data or if a boolean is passed in will return plugin data by current enabled state.\n    *\n    * @param {boolean|undefined} enabled - If enabled is a boolean it will return plugins given their enabled state.\n    *\n    * @returns {PluginData[]} A list of all PluginData or just enabled / disabled plugins.\n    */\n   getAllPluginData(enabled = void 0)\n   {\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\n\n      if (typeof enabled !== 'boolean' && typeof enabled !== 'undefined')\n      {\n         throw new TypeError(`'enabled' is not a 'boolean' or 'undefined'.`);\n      }\n\n      const results = [];\n\n      // Return all plugin data if enabled is not defined.\n      const allPlugins = enabled === void 0;\n\n      for (const entry of this.pluginMap.values())\n      {\n         if (allPlugins || entry.enabled === enabled)\n         {\n            results.push(this.getPluginData(entry.name));\n         }\n      }\n\n      return results;\n   }\n\n   /**\n    * Returns all method names or if a boolean is passed in will return method names for plugins by current enabled\n    * state.\n    *\n    * @param {boolean|undefined} [enabled] - If enabled is a boolean it will return plugin methods names given their\n    *                                        enabled state.\n    *\n    * @param {string|undefined}  [pluginName] - If a string then just this plugins methods names are returned.\n    *\n    * @returns {string[]} A list of method names\n    */\n   getMethodNames(enabled = void 0, pluginName = void 0)\n   {\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\n\n      if (typeof enabled !== 'boolean' && typeof enabled !== 'undefined')\n      {\n         throw new TypeError(`'enabled' is not a 'boolean' or 'undefined'.`);\n      }\n\n      const results = {};\n      const allEnabled = typeof enabled === 'undefined';\n      const allNames = typeof pluginName === 'undefined';\n\n      for (const entry of this.pluginMap.values())\n      {\n         if (entry.instance && (allEnabled || entry.enabled === enabled) && (allNames || entry.name === pluginName))\n         {\n            for (const name of s_GET_ALL_PROPERTY_NAMES(entry.instance))\n            {\n               // Skip any names that are not a function or are the constructor.\n               if (entry.instance[name] instanceof Function && name !== 'constructor') { results[name] = true; }\n            }\n         }\n      }\n\n      return Object.keys(results);\n   }\n\n   /**\n    * Gets the plugin data for a plugin by name.\n    *\n    * @param {string}   pluginName - A plugin name.\n    *\n    * @returns {PluginData|undefined} The plugin data for a specific plugin.\n    */\n   getPluginData(pluginName)\n   {\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\n\n      if (typeof pluginName !== 'string') { throw new TypeError(`'pluginName' is not a string.`); }\n\n      const entry = this.pluginMap.get(pluginName);\n\n      if (entry instanceof PluginEntry)\n      {\n         return JSON.parse(JSON.stringify(entry.data));\n      }\n\n      return void 0;\n   }\n\n// TODO FINISH IMPLEMENTING\n   // /**\n   //  * Returns the event binding names registered on any associated plugin EventbusProxy.\n   //  *\n   //  * @param {string}   pluginName - Plugin name to set state.\n   //  *\n   //  * @returns {string[]} - Event binding names registered from the plugin.\n   //  *\n   //  * @param {undefined|object}  [options] - Options object. If undefined all plugin enabled state is returned.\n   //  *\n   //  * @param {string|string[]}   [options.pluginNames] - Plugin name or list of names to get state.\n   //  *\n   //  * @returns {boolean|Array<{pluginName: string, enabled: boolean}>} - Event binding names registered from a\n   //  *                                                                    plugin, list of plugins, or all plugins.\n   //  */\n   // newPluginEventNames({ pluginNames = [] } = {})\n   // {\n   //    if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\n   //\n   //    if (typeof pluginName !== 'string') { throw new TypeError(`'pluginName' is not a string.`); }\n   //\n   //    const entry = this.pluginMap.get(pluginName);\n   //\n   //    return entry instanceof PluginEntry && entry.eventbusProxy ? entry.eventbusProxy.proxyEventNames : [];\n   // }\n\n   /**\n    * Returns the event binding names registered on any associated plugin EventbusProxy.\n    *\n    * @param {string}   pluginName - Plugin name to set state.\n    *\n    * @returns {string[]} - Event binding names registered from the plugin.\n    */\n   getPluginEventNames(pluginName)\n   {\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\n\n      if (typeof pluginName !== 'string') { throw new TypeError(`'pluginName' is not a string.`); }\n\n      const entry = this.pluginMap.get(pluginName);\n\n      return entry instanceof PluginEntry && entry.eventbusProxy ? entry.eventbusProxy.proxyEventNames : [];\n   }\n\n   /**\n    * Returns the event binding names registered from each plugin.\n    *\n    * @param {string|string[]} [nameOrList] - An array / iterable of plugin names.\n    *\n    * @returns {Array<{pluginName: string, events: string[]}>} A list of objects with plugin name and event binding\n    *                                                          names registered from the plugin.\n    */\n   getPluginsEventNames(nameOrList)\n   {\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\n\n      if (typeof nameOrList === 'undefined') { nameOrList = this.pluginMap.keys(); }\n      if (typeof nameOrList === 'string') { nameOrList = [nameOrList]; }\n\n      const results = [];\n\n      for (const pluginName of nameOrList)\n      {\n         results.push({ pluginName, events: this.getPluginEventNames(pluginName) });\n      }\n\n      return results;\n   }\n\n   /**\n    * Returns the plugin names that registered the given event binding name.\n    *\n    * @param {string} eventName - An event name that plugins may have registered.\n    *\n    * @returns {string[]} A list of plugin names that has registered the given event name.\n    */\n   getPluginsByEventName(eventName)\n   {\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\n\n      if (typeof eventName !== 'string') { throw new TypeError(`'eventName' is not a 'string'.`); }\n\n      const results = [];\n\n      const pluginEventNames = this.getPluginsEventNames();\n\n      for (const entry of pluginEventNames)\n      {\n         if (entry.events.indexOf(eventName) >= 0) { results.push(entry.pluginName); }\n      }\n\n      return results;\n   }\n\n   /**\n    * Returns all plugin names or if a boolean is passed in will return plugin names by current enabled state.\n    *\n    * @param {boolean|undefined} enabled - If enabled is a boolean it will return plugins given their enabled state.\n    *\n    * @returns {Array<{plugin: string, method: string}>} A list of plugin names and method names.\n    */\n   getPluginMethodNames(enabled = void 0)\n   {\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\n\n      if (typeof enabled !== 'boolean' && typeof enabled !== 'undefined')\n      {\n         throw new TypeError(`'enabled' is not a 'boolean' or 'undefined'.`);\n      }\n\n      const results = [];\n      const allPlugins = typeof enabled === 'undefined';\n\n      for (const entry of this.pluginMap.values())\n      {\n         if (entry.instance && (allPlugins || entry.enabled === enabled))\n         {\n            for (const name of s_GET_ALL_PROPERTY_NAMES(entry.instance))\n            {\n               // Skip any names that are not a function or are the constructor.\n               if (entry.instance[name] instanceof Function && name !== 'constructor')\n               {\n                  results.push({ plugin: entry.name, method: name });\n               }\n            }\n         }\n      }\n\n      return results;\n   }\n\n   /**\n    * Returns all plugin names or if a boolean is passed in will return plugin names by current enabled state.\n    *\n    * @param {boolean|undefined} enabled - If enabled is a boolean it will return plugins given their enabled state.\n    *\n    * @returns {string[]} A list of plugin names optionally by enabled state.\n    */\n   getPluginNames(enabled = void 0)\n   {\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\n\n      if (typeof enabled !== 'boolean' && typeof enabled !== 'undefined')\n      {\n         throw new TypeError(`'enabled' is not a 'boolean' or 'undefined'.`);\n      }\n\n      // Return all plugin names if enabled is not defined.\n      if (enabled === void 0) { return Array.from(this.pluginMap.keys()); }\n\n      const results = [];\n\n      for (const entry of this.pluginMap.values())\n      {\n         if (entry.enabled === enabled) { results.push(entry.name); }\n      }\n\n      return results;\n   }\n\n   /**\n    * Returns a copy of the given plugin options.\n    *\n    * @param {string}   pluginName - Plugin name to retrieve.\n    *\n    * @returns {*} A copy of the given plugin options.\n    */\n   getPluginOptions(pluginName)\n   {\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\n\n      if (typeof pluginName !== 'string') { throw new TypeError(`'pluginName' is not a string.`); }\n\n      let result;\n\n      const entry = this.pluginMap.get(pluginName);\n\n      if (entry instanceof PluginEntry) { result = JSON.parse(JSON.stringify(entry.data.plugin.options)); }\n\n      return result;\n   }\n\n   /**\n    * Returns true if there is at least one plugin loaded with the given method name.\n    *\n    * @param {string}   methodName - Method name to test.\n    *\n    * @returns {boolean} - True method is found.\n    */\n   hasMethod(methodName)\n   {\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\n\n      if (typeof methodName !== 'string') { throw new TypeError(`'methodName' is not a string.`); }\n\n      for (const plugin of this.pluginMap.values())\n      {\n         if (typeof plugin.instance[methodName] === 'function') { return true; }\n      }\n\n      return false;\n   }\n\n   /**\n    * Returns true if there is a plugin loaded with the given plugin name that also has a method with the given\n    * method name.\n    *\n    * @param {string}   pluginName - Plugin name to test.\n    * @param {string}   methodName - Method name to test.\n    *\n    * @returns {boolean} - True if a plugin and method exists.\n    */\n   hasPluginMethod(pluginName, methodName)\n   {\n      if (this.isDestroyed) { throw new ReferenceError('This PluginManager instance has been destroyed.'); }\n\n      if (typeof pluginName !== 'string') { throw new TypeError(`'pluginName' is not a string.`); }\n      if (typeof methodName !== 'string') { throw new TypeError(`'methodName' is not a string.`); }\n\n      const plugin = this.pluginMap.get(pluginName);\n\n      return plugin instanceof PluginEntry && typeof plugin[methodName] === 'function';\n   }\n\n   /**\n    * Sets the eventbus associated with this plugin manager. If any previous eventbus was associated all plugin manager\n    * events will be removed then added to the new eventbus. If there are any existing plugins being managed their\n    * events will be removed from the old eventbus and then `onPluginLoad` will be called with the new eventbus.\n    *\n    * @param {object}     options - An options object.\n    *\n    * @param {Eventbus}   options.oldEventbus - The old eventbus to disassociate.\n    *\n    * @param {Eventbus}   options.newEventbus - The new eventbus to associate.\n    *\n    * @param {string}     options.oldPrepend - The old event prepend.\n    *\n    * @param {string}     options.newPrepend - The new event prepend.\n    */\n   async setEventbus({ oldEventbus, newEventbus, oldPrepend, newPrepend } = {})\n   {\n      if (oldEventbus !== null && oldEventbus !== void 0)\n      {\n         oldEventbus.off(`${oldPrepend}:get:all:plugin:data`, this.getAllPluginData, this);\n         oldEventbus.off(`${oldPrepend}:get:method:names`, this.getMethodNames, this);\n         oldEventbus.off(`${oldPrepend}:get:plugin:data`, this.getPluginData, this);\n         oldEventbus.off(`${oldPrepend}:get:plugin:event:names`, this.getPluginEventNames, this);\n         oldEventbus.off(`${oldPrepend}:get:plugin:method:names`, this.getPluginMethodNames, this);\n         oldEventbus.off(`${oldPrepend}:get:plugin:names`, this.getPluginNames, this);\n         oldEventbus.off(`${oldPrepend}:get:plugin:options`, this.getPluginOptions, this);\n         oldEventbus.off(`${oldPrepend}:get:plugins:by:event:name`, this.getPluginsByEventName, this);\n         oldEventbus.off(`${oldPrepend}:get:plugins:event:names`, this.getPluginsEventNames, this);\n         oldEventbus.off(`${oldPrepend}:has:method`, this.hasMethod, this);\n         oldEventbus.off(`${oldPrepend}:has:plugin:method`, this.hasPluginMethod, this);\n      }\n\n      if (newEventbus !== null && newEventbus !== void 0)\n      {\n         newEventbus.on(`${newPrepend}:get:all:plugin:data`, this.getAllPluginData, this);\n         newEventbus.on(`${newPrepend}:get:method:names`, this.getMethodNames, this);\n         newEventbus.on(`${newPrepend}:get:plugin:data`, this.getPluginData, this);\n         newEventbus.on(`${newPrepend}:get:plugin:event:names`, this.getPluginEventNames, this);\n         newEventbus.on(`${newPrepend}:get:plugin:method:names`, this.getPluginMethodNames, this);\n         newEventbus.on(`${newPrepend}:get:plugin:names`, this.getPluginNames, this);\n         newEventbus.on(`${newPrepend}:get:plugin:options`, this.getPluginOptions, this);\n         newEventbus.on(`${newPrepend}:get:plugins:by:event:name`, this.getPluginsByEventName, this);\n         newEventbus.on(`${newPrepend}:get:plugins:event:names`, this.getPluginsEventNames, this);\n         newEventbus.on(`${newPrepend}:has:method`, this.hasMethod, this);\n         newEventbus.on(`${newPrepend}:has:plugin:method`, this.hasPluginMethod, this);\n      }\n   }\n}\n\n// Module Private ----------------------------------------------------------------------------------------------------\n\n/**\n * Walks an objects inheritance tree collecting property names stopping before `Object` is reached.\n *\n * @param {object}   obj - object to walks.\n *\n * @returns {string[]} A list of property names.\n * @ignore\n */\nconst s_GET_ALL_PROPERTY_NAMES = (obj) =>\n{\n   const props = [];\n\n   do\n   {\n      Object.getOwnPropertyNames(obj).forEach((prop) => { if (props.indexOf(prop) === -1) { props.push(prop); } });\n      obj = Object.getPrototypeOf(obj);\n   } while (typeof obj !== 'undefined' && obj !== null && !(obj === Object.prototype));\n\n   return props;\n};\n\n/**\n * @typedef {object} PluginData\n *\n * @property {object}   manager - Data about the plugin manager\n *\n * @property {string}   manager.eventPrepend - The plugin manager event prepend string.\n *\n * @property {object}   module - Optional object hash to associate with plugin.\n *\n * @property {object}   plugin - Data about the plugin.\n *\n * @property {string}   plugin.name - The name of the plugin.\n *\n * @property {string}   plugin.scopedName - The name of the plugin with the plugin managers event prepend string.\n *\n * @property {string}   plugin.target - Defines the target NPM module to loaded or defines a local file (full\n *                               path or relative to current working directory to load.\n *\n * @property {string}   plugin.targetEscaped - Provides the target, but properly escaped for RegExp usage.\n *\n * @property {string}   plugin.type - The type of plugin: `instance` +\n *                                    In Node: `import-module`, `import-path`, `require-module`, or `require-path`.\n *                                    In Browser: `import-path`, `import-url`.\n *\n * @property {object}   plugin.options - Defines an object of options for the plugin.\n */\n\n/**\n * Interface for PluginSupport instances.\n *\n * @interface PluginSupportImpl\n */\n\n/**\n * A method to invoke when the plugin manager is destroyed.\n *\n * @function\n * @async\n * @name PluginSupportImpl#destroy\n */\n\n/**\n * A method to invoke when the plugin manager eventbus is set.\n *\n * @function\n * @async\n * @name PluginSupportImpl#setEventbus\n */\n"],"names":["BrowserPluginManager","AbstractPluginManager","_loadModule","moduleOrPath","module","_eventbus","trigger","type","URL","startsWith","instance","onPluginLoad","default"],"mappings":"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"}